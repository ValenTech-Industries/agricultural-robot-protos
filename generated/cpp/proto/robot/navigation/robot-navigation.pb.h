// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/robot/navigation/robot-navigation.proto
// Protobuf C++ Version: 6.31.1

#ifndef proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto_2epb_2eh
#define proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_type_handler.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "google/protobuf/duration.pb.h"
#include "google/protobuf/empty.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
}  // extern "C"
namespace agricultural {
namespace robot {
namespace navigation {
namespace v1 {
enum CameraControlType : int;
extern const uint32_t CameraControlType_internal_data_[];
enum CameraStatus : int;
extern const uint32_t CameraStatus_internal_data_[];
enum CameraType : int;
extern const uint32_t CameraType_internal_data_[];
enum ControlMode : int;
extern const uint32_t ControlMode_internal_data_[];
enum DistortionModel : int;
extern const uint32_t DistortionModel_internal_data_[];
enum EmergencyStopType : int;
extern const uint32_t EmergencyStopType_internal_data_[];
enum LocalizationHealth : int;
extern const uint32_t LocalizationHealth_internal_data_[];
enum LocalizationMethod : int;
extern const uint32_t LocalizationMethod_internal_data_[];
enum LocalizationStatus : int;
extern const uint32_t LocalizationStatus_internal_data_[];
enum MapSource : int;
extern const uint32_t MapSource_internal_data_[];
enum MapType : int;
extern const uint32_t MapType_internal_data_[];
enum NavigationBehavior : int;
extern const uint32_t NavigationBehavior_internal_data_[];
enum NavigationErrorCode : int;
extern const uint32_t NavigationErrorCode_internal_data_[];
enum NavigationResult : int;
extern const uint32_t NavigationResult_internal_data_[];
enum NavigationStatus : int;
extern const uint32_t NavigationStatus_internal_data_[];
enum OverlayType : int;
extern const uint32_t OverlayType_internal_data_[];
enum PlannerType : int;
extern const uint32_t PlannerType_internal_data_[];
enum SafetyViolationType : int;
extern const uint32_t SafetyViolationType_internal_data_[];
enum TrajectoryExecutionMode : int;
extern const uint32_t TrajectoryExecutionMode_internal_data_[];
enum VideoFormat : int;
extern const uint32_t VideoFormat_internal_data_[];
enum VideoQuality : int;
extern const uint32_t VideoQuality_internal_data_[];
enum WaypointActionType : int;
extern const uint32_t WaypointActionType_internal_data_[];
enum WaypointType : int;
extern const uint32_t WaypointType_internal_data_[];
class CameraControlCommand;
struct CameraControlCommandDefaultTypeInternal;
extern CameraControlCommandDefaultTypeInternal _CameraControlCommand_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CameraControlCommand_class_data_;
class CameraControlCommand_ParametersEntry_DoNotUse;
struct CameraControlCommand_ParametersEntry_DoNotUseDefaultTypeInternal;
extern CameraControlCommand_ParametersEntry_DoNotUseDefaultTypeInternal _CameraControlCommand_ParametersEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CameraControlCommand_ParametersEntry_DoNotUse_class_data_;
class CameraControlRequest;
struct CameraControlRequestDefaultTypeInternal;
extern CameraControlRequestDefaultTypeInternal _CameraControlRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CameraControlRequest_class_data_;
class CameraControlResponse;
struct CameraControlResponseDefaultTypeInternal;
extern CameraControlResponseDefaultTypeInternal _CameraControlResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CameraControlResponse_class_data_;
class CameraControlResponse_CurrentSettingsEntry_DoNotUse;
struct CameraControlResponse_CurrentSettingsEntry_DoNotUseDefaultTypeInternal;
extern CameraControlResponse_CurrentSettingsEntry_DoNotUseDefaultTypeInternal _CameraControlResponse_CurrentSettingsEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CameraControlResponse_CurrentSettingsEntry_DoNotUse_class_data_;
class CameraDistortion;
struct CameraDistortionDefaultTypeInternal;
extern CameraDistortionDefaultTypeInternal _CameraDistortion_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CameraDistortion_class_data_;
class CameraInfo;
struct CameraInfoDefaultTypeInternal;
extern CameraInfoDefaultTypeInternal _CameraInfo_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CameraInfo_class_data_;
class CameraInfoResponse;
struct CameraInfoResponseDefaultTypeInternal;
extern CameraInfoResponseDefaultTypeInternal _CameraInfoResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CameraInfoResponse_class_data_;
class CameraIntrinsics;
struct CameraIntrinsicsDefaultTypeInternal;
extern CameraIntrinsicsDefaultTypeInternal _CameraIntrinsics_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CameraIntrinsics_class_data_;
class CancelGoalRequest;
struct CancelGoalRequestDefaultTypeInternal;
extern CancelGoalRequestDefaultTypeInternal _CancelGoalRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CancelGoalRequest_class_data_;
class ClearMapRequest;
struct ClearMapRequestDefaultTypeInternal;
extern ClearMapRequestDefaultTypeInternal _ClearMapRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ClearMapRequest_class_data_;
class FrameMetadata;
struct FrameMetadataDefaultTypeInternal;
extern FrameMetadataDefaultTypeInternal _FrameMetadata_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull FrameMetadata_class_data_;
class GetCameraInfoRequest;
struct GetCameraInfoRequestDefaultTypeInternal;
extern GetCameraInfoRequestDefaultTypeInternal _GetCameraInfoRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetCameraInfoRequest_class_data_;
class GetLocalizationStatusRequest;
struct GetLocalizationStatusRequestDefaultTypeInternal;
extern GetLocalizationStatusRequestDefaultTypeInternal _GetLocalizationStatusRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetLocalizationStatusRequest_class_data_;
class GetMapRequest;
struct GetMapRequestDefaultTypeInternal;
extern GetMapRequestDefaultTypeInternal _GetMapRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetMapRequest_class_data_;
class GetNavigationStatusRequest;
struct GetNavigationStatusRequestDefaultTypeInternal;
extern GetNavigationStatusRequestDefaultTypeInternal _GetNavigationStatusRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetNavigationStatusRequest_class_data_;
class GetPositionRequest;
struct GetPositionRequestDefaultTypeInternal;
extern GetPositionRequestDefaultTypeInternal _GetPositionRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetPositionRequest_class_data_;
class InitializeLocalizationRequest;
struct InitializeLocalizationRequestDefaultTypeInternal;
extern InitializeLocalizationRequestDefaultTypeInternal _InitializeLocalizationRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull InitializeLocalizationRequest_class_data_;
class InitializeLocalizationRequest_ParametersEntry_DoNotUse;
struct InitializeLocalizationRequest_ParametersEntry_DoNotUseDefaultTypeInternal;
extern InitializeLocalizationRequest_ParametersEntry_DoNotUseDefaultTypeInternal _InitializeLocalizationRequest_ParametersEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull InitializeLocalizationRequest_ParametersEntry_DoNotUse_class_data_;
class JoystickInput;
struct JoystickInputDefaultTypeInternal;
extern JoystickInputDefaultTypeInternal _JoystickInput_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull JoystickInput_class_data_;
class LocalizationMetrics;
struct LocalizationMetricsDefaultTypeInternal;
extern LocalizationMetricsDefaultTypeInternal _LocalizationMetrics_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LocalizationMetrics_class_data_;
class LocalizationQuality;
struct LocalizationQualityDefaultTypeInternal;
extern LocalizationQualityDefaultTypeInternal _LocalizationQuality_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LocalizationQuality_class_data_;
class LocalizationResponse;
struct LocalizationResponseDefaultTypeInternal;
extern LocalizationResponseDefaultTypeInternal _LocalizationResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LocalizationResponse_class_data_;
class LocalizationStatusResponse;
struct LocalizationStatusResponseDefaultTypeInternal;
extern LocalizationStatusResponseDefaultTypeInternal _LocalizationStatusResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LocalizationStatusResponse_class_data_;
class MapMetadata;
struct MapMetadataDefaultTypeInternal;
extern MapMetadataDefaultTypeInternal _MapMetadata_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MapMetadata_class_data_;
class MapResponse;
struct MapResponseDefaultTypeInternal;
extern MapResponseDefaultTypeInternal _MapResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MapResponse_class_data_;
class MapUpdate;
struct MapUpdateDefaultTypeInternal;
extern MapUpdateDefaultTypeInternal _MapUpdate_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MapUpdate_class_data_;
class NavigationError;
struct NavigationErrorDefaultTypeInternal;
extern NavigationErrorDefaultTypeInternal _NavigationError_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull NavigationError_class_data_;
class NavigationGoal;
struct NavigationGoalDefaultTypeInternal;
extern NavigationGoalDefaultTypeInternal _NavigationGoal_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull NavigationGoal_class_data_;
class NavigationOptions;
struct NavigationOptionsDefaultTypeInternal;
extern NavigationOptionsDefaultTypeInternal _NavigationOptions_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull NavigationOptions_class_data_;
class NavigationProgress;
struct NavigationProgressDefaultTypeInternal;
extern NavigationProgressDefaultTypeInternal _NavigationProgress_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull NavigationProgress_class_data_;
class NavigationResponse;
struct NavigationResponseDefaultTypeInternal;
extern NavigationResponseDefaultTypeInternal _NavigationResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull NavigationResponse_class_data_;
class NavigationStatusResponse;
struct NavigationStatusResponseDefaultTypeInternal;
extern NavigationStatusResponseDefaultTypeInternal _NavigationStatusResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull NavigationStatusResponse_class_data_;
class NavigationStatusUpdate;
struct NavigationStatusUpdateDefaultTypeInternal;
extern NavigationStatusUpdateDefaultTypeInternal _NavigationStatusUpdate_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull NavigationStatusUpdate_class_data_;
class OccupancyGridMap;
struct OccupancyGridMapDefaultTypeInternal;
extern OccupancyGridMapDefaultTypeInternal _OccupancyGridMap_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull OccupancyGridMap_class_data_;
class Point2D;
struct Point2DDefaultTypeInternal;
extern Point2DDefaultTypeInternal _Point2D_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Point2D_class_data_;
class Point3D;
struct Point3DDefaultTypeInternal;
extern Point3DDefaultTypeInternal _Point3D_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Point3D_class_data_;
class Pose;
struct PoseDefaultTypeInternal;
extern PoseDefaultTypeInternal _Pose_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Pose_class_data_;
class PoseWithCovariance;
struct PoseWithCovarianceDefaultTypeInternal;
extern PoseWithCovarianceDefaultTypeInternal _PoseWithCovariance_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PoseWithCovariance_class_data_;
class PositionResponse;
struct PositionResponseDefaultTypeInternal;
extern PositionResponseDefaultTypeInternal _PositionResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PositionResponse_class_data_;
class PositionUpdate;
struct PositionUpdateDefaultTypeInternal;
extern PositionUpdateDefaultTypeInternal _PositionUpdate_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PositionUpdate_class_data_;
class Quaternion;
struct QuaternionDefaultTypeInternal;
extern QuaternionDefaultTypeInternal _Quaternion_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Quaternion_class_data_;
class Rectangle;
struct RectangleDefaultTypeInternal;
extern RectangleDefaultTypeInternal _Rectangle_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Rectangle_class_data_;
class ResetLocalizationRequest;
struct ResetLocalizationRequestDefaultTypeInternal;
extern ResetLocalizationRequestDefaultTypeInternal _ResetLocalizationRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ResetLocalizationRequest_class_data_;
class Resolution;
struct ResolutionDefaultTypeInternal;
extern ResolutionDefaultTypeInternal _Resolution_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Resolution_class_data_;
class SafetyConstraints;
struct SafetyConstraintsDefaultTypeInternal;
extern SafetyConstraintsDefaultTypeInternal _SafetyConstraints_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SafetyConstraints_class_data_;
class SafetyViolation;
struct SafetyViolationDefaultTypeInternal;
extern SafetyViolationDefaultTypeInternal _SafetyViolation_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SafetyViolation_class_data_;
class SetMapRequest;
struct SetMapRequestDefaultTypeInternal;
extern SetMapRequestDefaultTypeInternal _SetMapRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SetMapRequest_class_data_;
class SetPositionRequest;
struct SetPositionRequestDefaultTypeInternal;
extern SetPositionRequestDefaultTypeInternal _SetPositionRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SetPositionRequest_class_data_;
class StopMovementRequest;
struct StopMovementRequestDefaultTypeInternal;
extern StopMovementRequestDefaultTypeInternal _StopMovementRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StopMovementRequest_class_data_;
class StreamNavigationStatusRequest;
struct StreamNavigationStatusRequestDefaultTypeInternal;
extern StreamNavigationStatusRequestDefaultTypeInternal _StreamNavigationStatusRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StreamNavigationStatusRequest_class_data_;
class StreamPositionRequest;
struct StreamPositionRequestDefaultTypeInternal;
extern StreamPositionRequestDefaultTypeInternal _StreamPositionRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StreamPositionRequest_class_data_;
class StreamVideoRequest;
struct StreamVideoRequestDefaultTypeInternal;
extern StreamVideoRequestDefaultTypeInternal _StreamVideoRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StreamVideoRequest_class_data_;
class TrajectoryCommand;
struct TrajectoryCommandDefaultTypeInternal;
extern TrajectoryCommandDefaultTypeInternal _TrajectoryCommand_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TrajectoryCommand_class_data_;
class TrajectoryOptions;
struct TrajectoryOptionsDefaultTypeInternal;
extern TrajectoryOptionsDefaultTypeInternal _TrajectoryOptions_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TrajectoryOptions_class_data_;
class TrajectoryPoint;
struct TrajectoryPointDefaultTypeInternal;
extern TrajectoryPointDefaultTypeInternal _TrajectoryPoint_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TrajectoryPoint_class_data_;
class Twist;
struct TwistDefaultTypeInternal;
extern TwistDefaultTypeInternal _Twist_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Twist_class_data_;
class UpdateMapRequest;
struct UpdateMapRequestDefaultTypeInternal;
extern UpdateMapRequestDefaultTypeInternal _UpdateMapRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull UpdateMapRequest_class_data_;
class Vector3;
struct Vector3DefaultTypeInternal;
extern Vector3DefaultTypeInternal _Vector3_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Vector3_class_data_;
class VelocityCommand;
struct VelocityCommandDefaultTypeInternal;
extern VelocityCommandDefaultTypeInternal _VelocityCommand_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull VelocityCommand_class_data_;
class VelocityResponse;
struct VelocityResponseDefaultTypeInternal;
extern VelocityResponseDefaultTypeInternal _VelocityResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull VelocityResponse_class_data_;
class VideoFrame;
struct VideoFrameDefaultTypeInternal;
extern VideoFrameDefaultTypeInternal _VideoFrame_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull VideoFrame_class_data_;
class VideoStreamOptions;
struct VideoStreamOptionsDefaultTypeInternal;
extern VideoStreamOptionsDefaultTypeInternal _VideoStreamOptions_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull VideoStreamOptions_class_data_;
class Waypoint;
struct WaypointDefaultTypeInternal;
extern WaypointDefaultTypeInternal _Waypoint_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Waypoint_class_data_;
class WaypointAction;
struct WaypointActionDefaultTypeInternal;
extern WaypointActionDefaultTypeInternal _WaypointAction_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull WaypointAction_class_data_;
class WaypointAction_ParametersEntry_DoNotUse;
struct WaypointAction_ParametersEntry_DoNotUseDefaultTypeInternal;
extern WaypointAction_ParametersEntry_DoNotUseDefaultTypeInternal _WaypointAction_ParametersEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull WaypointAction_ParametersEntry_DoNotUse_class_data_;
}  // namespace v1
}  // namespace navigation
}  // namespace robot
}  // namespace agricultural
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::CameraControlType_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::CameraControlType>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::CameraStatus_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::CameraStatus>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::CameraType_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::CameraType>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::ControlMode_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::ControlMode>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::DistortionModel_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::DistortionModel>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::EmergencyStopType_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::EmergencyStopType>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::LocalizationHealth_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::LocalizationHealth>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::LocalizationMethod_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::LocalizationMethod>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::LocalizationStatus_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::LocalizationStatus>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::MapSource_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::MapSource>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::MapType_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::MapType>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::NavigationBehavior_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::NavigationBehavior>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::NavigationErrorCode_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::NavigationErrorCode>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::NavigationResult_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::NavigationResult>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::NavigationStatus_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::NavigationStatus>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::OverlayType_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::OverlayType>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::PlannerType_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::PlannerType>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::SafetyViolationType_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::SafetyViolationType>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::TrajectoryExecutionMode_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::TrajectoryExecutionMode>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::VideoFormat_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::VideoFormat>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::VideoQuality_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::VideoQuality>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::WaypointActionType_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::WaypointActionType>;
template <>
internal::EnumTraitsT<::agricultural::robot::navigation::v1::WaypointType_internal_data_>
    internal::EnumTraitsImpl::value<::agricultural::robot::navigation::v1::WaypointType>;
}  // namespace protobuf
}  // namespace google

namespace agricultural {
namespace robot {
namespace navigation {
namespace v1 {
enum MapType : int {
  MAP_TYPE_UNSPECIFIED = 0,
  MAP_TYPE_OCCUPANCY_GRID = 1,
  MAP_TYPE_COSTMAP = 2,
  MAP_TYPE_SEMANTIC = 3,
  MAP_TYPE_ELEVATION = 4,
  MapType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  MapType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t MapType_internal_data_[];
inline constexpr MapType MapType_MIN =
    static_cast<MapType>(0);
inline constexpr MapType MapType_MAX =
    static_cast<MapType>(4);
inline bool MapType_IsValid(int value) {
  return 0 <= value && value <= 4;
}
inline constexpr int MapType_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MapType_descriptor();
template <typename T>
const ::std::string& MapType_Name(T value) {
  static_assert(::std::is_same<T, MapType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to MapType_Name().");
  return MapType_Name(static_cast<MapType>(value));
}
template <>
inline const ::std::string& MapType_Name(MapType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MapType_descriptor, 0, 4>(
      static_cast<int>(value));
}
inline bool MapType_Parse(
    ::absl::string_view name, MapType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<MapType>(MapType_descriptor(), name,
                                           value);
}
enum MapSource : int {
  MAP_SOURCE_UNSPECIFIED = 0,
  MAP_SOURCE_SLAM = 1,
  MAP_SOURCE_UPLOADED = 2,
  MAP_SOURCE_SURVEYED = 3,
  MAP_SOURCE_SATELLITE = 4,
  MapSource_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  MapSource_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t MapSource_internal_data_[];
inline constexpr MapSource MapSource_MIN =
    static_cast<MapSource>(0);
inline constexpr MapSource MapSource_MAX =
    static_cast<MapSource>(4);
inline bool MapSource_IsValid(int value) {
  return 0 <= value && value <= 4;
}
inline constexpr int MapSource_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MapSource_descriptor();
template <typename T>
const ::std::string& MapSource_Name(T value) {
  static_assert(::std::is_same<T, MapSource>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to MapSource_Name().");
  return MapSource_Name(static_cast<MapSource>(value));
}
template <>
inline const ::std::string& MapSource_Name(MapSource value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MapSource_descriptor, 0, 4>(
      static_cast<int>(value));
}
inline bool MapSource_Parse(
    ::absl::string_view name, MapSource* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<MapSource>(MapSource_descriptor(), name,
                                           value);
}
enum ControlMode : int {
  CONTROL_MODE_UNSPECIFIED = 0,
  CONTROL_MODE_MANUAL = 1,
  CONTROL_MODE_ASSISTED = 2,
  CONTROL_MODE_AUTONOMOUS = 3,
  ControlMode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  ControlMode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t ControlMode_internal_data_[];
inline constexpr ControlMode ControlMode_MIN =
    static_cast<ControlMode>(0);
inline constexpr ControlMode ControlMode_MAX =
    static_cast<ControlMode>(3);
inline bool ControlMode_IsValid(int value) {
  return 0 <= value && value <= 3;
}
inline constexpr int ControlMode_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ControlMode_descriptor();
template <typename T>
const ::std::string& ControlMode_Name(T value) {
  static_assert(::std::is_same<T, ControlMode>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to ControlMode_Name().");
  return ControlMode_Name(static_cast<ControlMode>(value));
}
template <>
inline const ::std::string& ControlMode_Name(ControlMode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ControlMode_descriptor, 0, 3>(
      static_cast<int>(value));
}
inline bool ControlMode_Parse(
    ::absl::string_view name, ControlMode* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<ControlMode>(ControlMode_descriptor(), name,
                                           value);
}
enum EmergencyStopType : int {
  EMERGENCY_STOP_TYPE_UNSPECIFIED = 0,
  EMERGENCY_STOP_TYPE_SOFT = 1,
  EMERGENCY_STOP_TYPE_HARD = 2,
  EMERGENCY_STOP_TYPE_FULL = 3,
  EmergencyStopType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  EmergencyStopType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t EmergencyStopType_internal_data_[];
inline constexpr EmergencyStopType EmergencyStopType_MIN =
    static_cast<EmergencyStopType>(0);
inline constexpr EmergencyStopType EmergencyStopType_MAX =
    static_cast<EmergencyStopType>(3);
inline bool EmergencyStopType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
inline constexpr int EmergencyStopType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL EmergencyStopType_descriptor();
template <typename T>
const ::std::string& EmergencyStopType_Name(T value) {
  static_assert(::std::is_same<T, EmergencyStopType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to EmergencyStopType_Name().");
  return EmergencyStopType_Name(static_cast<EmergencyStopType>(value));
}
template <>
inline const ::std::string& EmergencyStopType_Name(EmergencyStopType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EmergencyStopType_descriptor, 0, 3>(
      static_cast<int>(value));
}
inline bool EmergencyStopType_Parse(
    ::absl::string_view name, EmergencyStopType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<EmergencyStopType>(EmergencyStopType_descriptor(), name,
                                           value);
}
enum SafetyViolationType : int {
  SAFETY_VIOLATION_TYPE_UNSPECIFIED = 0,
  SAFETY_VIOLATION_TYPE_SPEED_LIMIT = 1,
  SAFETY_VIOLATION_TYPE_OBSTACLE = 2,
  SAFETY_VIOLATION_TYPE_BOUNDARY = 3,
  SAFETY_VIOLATION_TYPE_SLOPE = 4,
  SAFETY_VIOLATION_TYPE_BATTERY = 5,
  SafetyViolationType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  SafetyViolationType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t SafetyViolationType_internal_data_[];
inline constexpr SafetyViolationType SafetyViolationType_MIN =
    static_cast<SafetyViolationType>(0);
inline constexpr SafetyViolationType SafetyViolationType_MAX =
    static_cast<SafetyViolationType>(5);
inline bool SafetyViolationType_IsValid(int value) {
  return 0 <= value && value <= 5;
}
inline constexpr int SafetyViolationType_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL SafetyViolationType_descriptor();
template <typename T>
const ::std::string& SafetyViolationType_Name(T value) {
  static_assert(::std::is_same<T, SafetyViolationType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to SafetyViolationType_Name().");
  return SafetyViolationType_Name(static_cast<SafetyViolationType>(value));
}
template <>
inline const ::std::string& SafetyViolationType_Name(SafetyViolationType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SafetyViolationType_descriptor, 0, 5>(
      static_cast<int>(value));
}
inline bool SafetyViolationType_Parse(
    ::absl::string_view name, SafetyViolationType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<SafetyViolationType>(SafetyViolationType_descriptor(), name,
                                           value);
}
enum WaypointType : int {
  WAYPOINT_TYPE_UNSPECIFIED = 0,
  WAYPOINT_TYPE_PASS_THROUGH = 1,
  WAYPOINT_TYPE_STOP = 2,
  WAYPOINT_TYPE_INSPECTION = 3,
  WAYPOINT_TYPE_WORK = 4,
  WAYPOINT_TYPE_CHARGE = 5,
  WaypointType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  WaypointType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t WaypointType_internal_data_[];
inline constexpr WaypointType WaypointType_MIN =
    static_cast<WaypointType>(0);
inline constexpr WaypointType WaypointType_MAX =
    static_cast<WaypointType>(5);
inline bool WaypointType_IsValid(int value) {
  return 0 <= value && value <= 5;
}
inline constexpr int WaypointType_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL WaypointType_descriptor();
template <typename T>
const ::std::string& WaypointType_Name(T value) {
  static_assert(::std::is_same<T, WaypointType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to WaypointType_Name().");
  return WaypointType_Name(static_cast<WaypointType>(value));
}
template <>
inline const ::std::string& WaypointType_Name(WaypointType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<WaypointType_descriptor, 0, 5>(
      static_cast<int>(value));
}
inline bool WaypointType_Parse(
    ::absl::string_view name, WaypointType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<WaypointType>(WaypointType_descriptor(), name,
                                           value);
}
enum WaypointActionType : int {
  WAYPOINT_ACTION_TYPE_UNSPECIFIED = 0,
  WAYPOINT_ACTION_TYPE_PAUSE = 1,
  WAYPOINT_ACTION_TYPE_CAPTURE_IMAGE = 2,
  WAYPOINT_ACTION_TYPE_SPRAY = 3,
  WAYPOINT_ACTION_TYPE_SCAN = 4,
  WAYPOINT_ACTION_TYPE_COLLECT_SAMPLE = 5,
  WaypointActionType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  WaypointActionType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t WaypointActionType_internal_data_[];
inline constexpr WaypointActionType WaypointActionType_MIN =
    static_cast<WaypointActionType>(0);
inline constexpr WaypointActionType WaypointActionType_MAX =
    static_cast<WaypointActionType>(5);
inline bool WaypointActionType_IsValid(int value) {
  return 0 <= value && value <= 5;
}
inline constexpr int WaypointActionType_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL WaypointActionType_descriptor();
template <typename T>
const ::std::string& WaypointActionType_Name(T value) {
  static_assert(::std::is_same<T, WaypointActionType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to WaypointActionType_Name().");
  return WaypointActionType_Name(static_cast<WaypointActionType>(value));
}
template <>
inline const ::std::string& WaypointActionType_Name(WaypointActionType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<WaypointActionType_descriptor, 0, 5>(
      static_cast<int>(value));
}
inline bool WaypointActionType_Parse(
    ::absl::string_view name, WaypointActionType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<WaypointActionType>(WaypointActionType_descriptor(), name,
                                           value);
}
enum PlannerType : int {
  PLANNER_TYPE_UNSPECIFIED = 0,
  PLANNER_TYPE_A_STAR = 1,
  PLANNER_TYPE_RRT = 2,
  PLANNER_TYPE_DWA = 3,
  PLANNER_TYPE_TEB = 4,
  PLANNER_TYPE_SPLINE = 5,
  PlannerType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  PlannerType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t PlannerType_internal_data_[];
inline constexpr PlannerType PlannerType_MIN =
    static_cast<PlannerType>(0);
inline constexpr PlannerType PlannerType_MAX =
    static_cast<PlannerType>(5);
inline bool PlannerType_IsValid(int value) {
  return 0 <= value && value <= 5;
}
inline constexpr int PlannerType_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL PlannerType_descriptor();
template <typename T>
const ::std::string& PlannerType_Name(T value) {
  static_assert(::std::is_same<T, PlannerType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to PlannerType_Name().");
  return PlannerType_Name(static_cast<PlannerType>(value));
}
template <>
inline const ::std::string& PlannerType_Name(PlannerType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PlannerType_descriptor, 0, 5>(
      static_cast<int>(value));
}
inline bool PlannerType_Parse(
    ::absl::string_view name, PlannerType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlannerType>(PlannerType_descriptor(), name,
                                           value);
}
enum NavigationBehavior : int {
  NAVIGATION_BEHAVIOR_UNSPECIFIED = 0,
  NAVIGATION_BEHAVIOR_DIRECT = 1,
  NAVIGATION_BEHAVIOR_CONSERVATIVE = 2,
  NAVIGATION_BEHAVIOR_AGGRESSIVE = 3,
  NAVIGATION_BEHAVIOR_PRECISION = 4,
  NavigationBehavior_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  NavigationBehavior_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t NavigationBehavior_internal_data_[];
inline constexpr NavigationBehavior NavigationBehavior_MIN =
    static_cast<NavigationBehavior>(0);
inline constexpr NavigationBehavior NavigationBehavior_MAX =
    static_cast<NavigationBehavior>(4);
inline bool NavigationBehavior_IsValid(int value) {
  return 0 <= value && value <= 4;
}
inline constexpr int NavigationBehavior_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL NavigationBehavior_descriptor();
template <typename T>
const ::std::string& NavigationBehavior_Name(T value) {
  static_assert(::std::is_same<T, NavigationBehavior>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to NavigationBehavior_Name().");
  return NavigationBehavior_Name(static_cast<NavigationBehavior>(value));
}
template <>
inline const ::std::string& NavigationBehavior_Name(NavigationBehavior value) {
  return ::google::protobuf::internal::NameOfDenseEnum<NavigationBehavior_descriptor, 0, 4>(
      static_cast<int>(value));
}
inline bool NavigationBehavior_Parse(
    ::absl::string_view name, NavigationBehavior* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<NavigationBehavior>(NavigationBehavior_descriptor(), name,
                                           value);
}
enum TrajectoryExecutionMode : int {
  TRAJECTORY_EXECUTION_MODE_UNSPECIFIED = 0,
  TRAJECTORY_EXECUTION_MODE_IMMEDIATE = 1,
  TRAJECTORY_EXECUTION_MODE_QUEUED = 2,
  TRAJECTORY_EXECUTION_MODE_SCHEDULED = 3,
  TrajectoryExecutionMode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  TrajectoryExecutionMode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t TrajectoryExecutionMode_internal_data_[];
inline constexpr TrajectoryExecutionMode TrajectoryExecutionMode_MIN =
    static_cast<TrajectoryExecutionMode>(0);
inline constexpr TrajectoryExecutionMode TrajectoryExecutionMode_MAX =
    static_cast<TrajectoryExecutionMode>(3);
inline bool TrajectoryExecutionMode_IsValid(int value) {
  return 0 <= value && value <= 3;
}
inline constexpr int TrajectoryExecutionMode_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL TrajectoryExecutionMode_descriptor();
template <typename T>
const ::std::string& TrajectoryExecutionMode_Name(T value) {
  static_assert(::std::is_same<T, TrajectoryExecutionMode>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to TrajectoryExecutionMode_Name().");
  return TrajectoryExecutionMode_Name(static_cast<TrajectoryExecutionMode>(value));
}
template <>
inline const ::std::string& TrajectoryExecutionMode_Name(TrajectoryExecutionMode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TrajectoryExecutionMode_descriptor, 0, 3>(
      static_cast<int>(value));
}
inline bool TrajectoryExecutionMode_Parse(
    ::absl::string_view name, TrajectoryExecutionMode* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<TrajectoryExecutionMode>(TrajectoryExecutionMode_descriptor(), name,
                                           value);
}
enum NavigationStatus : int {
  NAVIGATION_STATUS_UNSPECIFIED = 0,
  NAVIGATION_STATUS_IDLE = 1,
  NAVIGATION_STATUS_PLANNING = 2,
  NAVIGATION_STATUS_EXECUTING = 3,
  NAVIGATION_STATUS_PAUSED = 4,
  NAVIGATION_STATUS_COMPLETED = 5,
  NAVIGATION_STATUS_FAILED = 6,
  NAVIGATION_STATUS_CANCELLED = 7,
  NAVIGATION_STATUS_RECOVERING = 8,
  NavigationStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  NavigationStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t NavigationStatus_internal_data_[];
inline constexpr NavigationStatus NavigationStatus_MIN =
    static_cast<NavigationStatus>(0);
inline constexpr NavigationStatus NavigationStatus_MAX =
    static_cast<NavigationStatus>(8);
inline bool NavigationStatus_IsValid(int value) {
  return 0 <= value && value <= 8;
}
inline constexpr int NavigationStatus_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL NavigationStatus_descriptor();
template <typename T>
const ::std::string& NavigationStatus_Name(T value) {
  static_assert(::std::is_same<T, NavigationStatus>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to NavigationStatus_Name().");
  return NavigationStatus_Name(static_cast<NavigationStatus>(value));
}
template <>
inline const ::std::string& NavigationStatus_Name(NavigationStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<NavigationStatus_descriptor, 0, 8>(
      static_cast<int>(value));
}
inline bool NavigationStatus_Parse(
    ::absl::string_view name, NavigationStatus* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<NavigationStatus>(NavigationStatus_descriptor(), name,
                                           value);
}
enum NavigationResult : int {
  NAVIGATION_RESULT_UNSPECIFIED = 0,
  NAVIGATION_RESULT_SUCCESS = 1,
  NAVIGATION_RESULT_TIMEOUT = 2,
  NAVIGATION_RESULT_OBSTACLE = 3,
  NAVIGATION_RESULT_INVALID_GOAL = 4,
  NAVIGATION_RESULT_PLANNING_FAILED = 5,
  NAVIGATION_RESULT_PREEMPTED = 6,
  NAVIGATION_RESULT_ABORTED = 7,
  NavigationResult_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  NavigationResult_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t NavigationResult_internal_data_[];
inline constexpr NavigationResult NavigationResult_MIN =
    static_cast<NavigationResult>(0);
inline constexpr NavigationResult NavigationResult_MAX =
    static_cast<NavigationResult>(7);
inline bool NavigationResult_IsValid(int value) {
  return 0 <= value && value <= 7;
}
inline constexpr int NavigationResult_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL NavigationResult_descriptor();
template <typename T>
const ::std::string& NavigationResult_Name(T value) {
  static_assert(::std::is_same<T, NavigationResult>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to NavigationResult_Name().");
  return NavigationResult_Name(static_cast<NavigationResult>(value));
}
template <>
inline const ::std::string& NavigationResult_Name(NavigationResult value) {
  return ::google::protobuf::internal::NameOfDenseEnum<NavigationResult_descriptor, 0, 7>(
      static_cast<int>(value));
}
inline bool NavigationResult_Parse(
    ::absl::string_view name, NavigationResult* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<NavigationResult>(NavigationResult_descriptor(), name,
                                           value);
}
enum NavigationErrorCode : int {
  NAVIGATION_ERROR_CODE_UNSPECIFIED = 0,
  NAVIGATION_ERROR_CODE_NO_PATH = 1,
  NAVIGATION_ERROR_CODE_TIMEOUT = 2,
  NAVIGATION_ERROR_CODE_OBSTACLE = 3,
  NAVIGATION_ERROR_CODE_LOCALIZATION_LOST = 4,
  NAVIGATION_ERROR_CODE_CONTROLLER_FAILURE = 5,
  NAVIGATION_ERROR_CODE_INVALID_GOAL = 6,
  NAVIGATION_ERROR_CODE_RECOVERY_FAILED = 7,
  NavigationErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  NavigationErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t NavigationErrorCode_internal_data_[];
inline constexpr NavigationErrorCode NavigationErrorCode_MIN =
    static_cast<NavigationErrorCode>(0);
inline constexpr NavigationErrorCode NavigationErrorCode_MAX =
    static_cast<NavigationErrorCode>(7);
inline bool NavigationErrorCode_IsValid(int value) {
  return 0 <= value && value <= 7;
}
inline constexpr int NavigationErrorCode_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL NavigationErrorCode_descriptor();
template <typename T>
const ::std::string& NavigationErrorCode_Name(T value) {
  static_assert(::std::is_same<T, NavigationErrorCode>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to NavigationErrorCode_Name().");
  return NavigationErrorCode_Name(static_cast<NavigationErrorCode>(value));
}
template <>
inline const ::std::string& NavigationErrorCode_Name(NavigationErrorCode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<NavigationErrorCode_descriptor, 0, 7>(
      static_cast<int>(value));
}
inline bool NavigationErrorCode_Parse(
    ::absl::string_view name, NavigationErrorCode* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<NavigationErrorCode>(NavigationErrorCode_descriptor(), name,
                                           value);
}
enum CameraType : int {
  CAMERA_TYPE_UNSPECIFIED = 0,
  CAMERA_TYPE_RGB = 1,
  CAMERA_TYPE_DEPTH = 2,
  CAMERA_TYPE_THERMAL = 3,
  CAMERA_TYPE_MULTISPECTRAL = 4,
  CAMERA_TYPE_STEREO = 5,
  CAMERA_TYPE_LIDAR = 6,
  CameraType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  CameraType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t CameraType_internal_data_[];
inline constexpr CameraType CameraType_MIN =
    static_cast<CameraType>(0);
inline constexpr CameraType CameraType_MAX =
    static_cast<CameraType>(6);
inline bool CameraType_IsValid(int value) {
  return 0 <= value && value <= 6;
}
inline constexpr int CameraType_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CameraType_descriptor();
template <typename T>
const ::std::string& CameraType_Name(T value) {
  static_assert(::std::is_same<T, CameraType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to CameraType_Name().");
  return CameraType_Name(static_cast<CameraType>(value));
}
template <>
inline const ::std::string& CameraType_Name(CameraType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CameraType_descriptor, 0, 6>(
      static_cast<int>(value));
}
inline bool CameraType_Parse(
    ::absl::string_view name, CameraType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<CameraType>(CameraType_descriptor(), name,
                                           value);
}
enum VideoFormat : int {
  VIDEO_FORMAT_UNSPECIFIED = 0,
  VIDEO_FORMAT_MJPEG = 1,
  VIDEO_FORMAT_H264 = 2,
  VIDEO_FORMAT_H265 = 3,
  VIDEO_FORMAT_VP8 = 4,
  VIDEO_FORMAT_VP9 = 5,
  VIDEO_FORMAT_RAW = 6,
  VideoFormat_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  VideoFormat_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t VideoFormat_internal_data_[];
inline constexpr VideoFormat VideoFormat_MIN =
    static_cast<VideoFormat>(0);
inline constexpr VideoFormat VideoFormat_MAX =
    static_cast<VideoFormat>(6);
inline bool VideoFormat_IsValid(int value) {
  return 0 <= value && value <= 6;
}
inline constexpr int VideoFormat_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL VideoFormat_descriptor();
template <typename T>
const ::std::string& VideoFormat_Name(T value) {
  static_assert(::std::is_same<T, VideoFormat>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to VideoFormat_Name().");
  return VideoFormat_Name(static_cast<VideoFormat>(value));
}
template <>
inline const ::std::string& VideoFormat_Name(VideoFormat value) {
  return ::google::protobuf::internal::NameOfDenseEnum<VideoFormat_descriptor, 0, 6>(
      static_cast<int>(value));
}
inline bool VideoFormat_Parse(
    ::absl::string_view name, VideoFormat* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<VideoFormat>(VideoFormat_descriptor(), name,
                                           value);
}
enum VideoQuality : int {
  VIDEO_QUALITY_UNSPECIFIED = 0,
  VIDEO_QUALITY_LOW = 1,
  VIDEO_QUALITY_MEDIUM = 2,
  VIDEO_QUALITY_HIGH = 3,
  VIDEO_QUALITY_ULTRA = 4,
  VideoQuality_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  VideoQuality_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t VideoQuality_internal_data_[];
inline constexpr VideoQuality VideoQuality_MIN =
    static_cast<VideoQuality>(0);
inline constexpr VideoQuality VideoQuality_MAX =
    static_cast<VideoQuality>(4);
inline bool VideoQuality_IsValid(int value) {
  return 0 <= value && value <= 4;
}
inline constexpr int VideoQuality_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL VideoQuality_descriptor();
template <typename T>
const ::std::string& VideoQuality_Name(T value) {
  static_assert(::std::is_same<T, VideoQuality>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to VideoQuality_Name().");
  return VideoQuality_Name(static_cast<VideoQuality>(value));
}
template <>
inline const ::std::string& VideoQuality_Name(VideoQuality value) {
  return ::google::protobuf::internal::NameOfDenseEnum<VideoQuality_descriptor, 0, 4>(
      static_cast<int>(value));
}
inline bool VideoQuality_Parse(
    ::absl::string_view name, VideoQuality* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<VideoQuality>(VideoQuality_descriptor(), name,
                                           value);
}
enum CameraStatus : int {
  CAMERA_STATUS_UNSPECIFIED = 0,
  CAMERA_STATUS_ACTIVE = 1,
  CAMERA_STATUS_INACTIVE = 2,
  CAMERA_STATUS_ERROR = 3,
  CAMERA_STATUS_CALIBRATING = 4,
  CameraStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  CameraStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t CameraStatus_internal_data_[];
inline constexpr CameraStatus CameraStatus_MIN =
    static_cast<CameraStatus>(0);
inline constexpr CameraStatus CameraStatus_MAX =
    static_cast<CameraStatus>(4);
inline bool CameraStatus_IsValid(int value) {
  return 0 <= value && value <= 4;
}
inline constexpr int CameraStatus_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CameraStatus_descriptor();
template <typename T>
const ::std::string& CameraStatus_Name(T value) {
  static_assert(::std::is_same<T, CameraStatus>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to CameraStatus_Name().");
  return CameraStatus_Name(static_cast<CameraStatus>(value));
}
template <>
inline const ::std::string& CameraStatus_Name(CameraStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CameraStatus_descriptor, 0, 4>(
      static_cast<int>(value));
}
inline bool CameraStatus_Parse(
    ::absl::string_view name, CameraStatus* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<CameraStatus>(CameraStatus_descriptor(), name,
                                           value);
}
enum CameraControlType : int {
  CAMERA_CONTROL_TYPE_UNSPECIFIED = 0,
  CAMERA_CONTROL_TYPE_PAN = 1,
  CAMERA_CONTROL_TYPE_TILT = 2,
  CAMERA_CONTROL_TYPE_ZOOM = 3,
  CAMERA_CONTROL_TYPE_FOCUS = 4,
  CAMERA_CONTROL_TYPE_EXPOSURE = 5,
  CAMERA_CONTROL_TYPE_WHITE_BALANCE = 6,
  CAMERA_CONTROL_TYPE_GAIN = 7,
  CameraControlType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  CameraControlType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t CameraControlType_internal_data_[];
inline constexpr CameraControlType CameraControlType_MIN =
    static_cast<CameraControlType>(0);
inline constexpr CameraControlType CameraControlType_MAX =
    static_cast<CameraControlType>(7);
inline bool CameraControlType_IsValid(int value) {
  return 0 <= value && value <= 7;
}
inline constexpr int CameraControlType_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CameraControlType_descriptor();
template <typename T>
const ::std::string& CameraControlType_Name(T value) {
  static_assert(::std::is_same<T, CameraControlType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to CameraControlType_Name().");
  return CameraControlType_Name(static_cast<CameraControlType>(value));
}
template <>
inline const ::std::string& CameraControlType_Name(CameraControlType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CameraControlType_descriptor, 0, 7>(
      static_cast<int>(value));
}
inline bool CameraControlType_Parse(
    ::absl::string_view name, CameraControlType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<CameraControlType>(CameraControlType_descriptor(), name,
                                           value);
}
enum DistortionModel : int {
  DISTORTION_MODEL_UNSPECIFIED = 0,
  DISTORTION_MODEL_PLUMB_BOB = 1,
  DISTORTION_MODEL_RATIONAL_POLYNOMIAL = 2,
  DISTORTION_MODEL_EQUIDISTANT = 3,
  DistortionModel_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  DistortionModel_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t DistortionModel_internal_data_[];
inline constexpr DistortionModel DistortionModel_MIN =
    static_cast<DistortionModel>(0);
inline constexpr DistortionModel DistortionModel_MAX =
    static_cast<DistortionModel>(3);
inline bool DistortionModel_IsValid(int value) {
  return 0 <= value && value <= 3;
}
inline constexpr int DistortionModel_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL DistortionModel_descriptor();
template <typename T>
const ::std::string& DistortionModel_Name(T value) {
  static_assert(::std::is_same<T, DistortionModel>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to DistortionModel_Name().");
  return DistortionModel_Name(static_cast<DistortionModel>(value));
}
template <>
inline const ::std::string& DistortionModel_Name(DistortionModel value) {
  return ::google::protobuf::internal::NameOfDenseEnum<DistortionModel_descriptor, 0, 3>(
      static_cast<int>(value));
}
inline bool DistortionModel_Parse(
    ::absl::string_view name, DistortionModel* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<DistortionModel>(DistortionModel_descriptor(), name,
                                           value);
}
enum OverlayType : int {
  OVERLAY_TYPE_UNSPECIFIED = 0,
  OVERLAY_TYPE_CROSSHAIR = 1,
  OVERLAY_TYPE_GRID = 2,
  OVERLAY_TYPE_POSE = 3,
  OVERLAY_TYPE_NAVIGATION_PATH = 4,
  OVERLAY_TYPE_OBSTACLES = 5,
  OVERLAY_TYPE_TIMESTAMP = 6,
  OverlayType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  OverlayType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t OverlayType_internal_data_[];
inline constexpr OverlayType OverlayType_MIN =
    static_cast<OverlayType>(0);
inline constexpr OverlayType OverlayType_MAX =
    static_cast<OverlayType>(6);
inline bool OverlayType_IsValid(int value) {
  return 0 <= value && value <= 6;
}
inline constexpr int OverlayType_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL OverlayType_descriptor();
template <typename T>
const ::std::string& OverlayType_Name(T value) {
  static_assert(::std::is_same<T, OverlayType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to OverlayType_Name().");
  return OverlayType_Name(static_cast<OverlayType>(value));
}
template <>
inline const ::std::string& OverlayType_Name(OverlayType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OverlayType_descriptor, 0, 6>(
      static_cast<int>(value));
}
inline bool OverlayType_Parse(
    ::absl::string_view name, OverlayType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<OverlayType>(OverlayType_descriptor(), name,
                                           value);
}
enum LocalizationStatus : int {
  LOCALIZATION_STATUS_UNSPECIFIED = 0,
  LOCALIZATION_STATUS_INITIALIZING = 1,
  LOCALIZATION_STATUS_TRACKING = 2,
  LOCALIZATION_STATUS_LOST = 3,
  LOCALIZATION_STATUS_RECOVERING = 4,
  LOCALIZATION_STATUS_DEGRADED = 5,
  LocalizationStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  LocalizationStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t LocalizationStatus_internal_data_[];
inline constexpr LocalizationStatus LocalizationStatus_MIN =
    static_cast<LocalizationStatus>(0);
inline constexpr LocalizationStatus LocalizationStatus_MAX =
    static_cast<LocalizationStatus>(5);
inline bool LocalizationStatus_IsValid(int value) {
  return 0 <= value && value <= 5;
}
inline constexpr int LocalizationStatus_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL LocalizationStatus_descriptor();
template <typename T>
const ::std::string& LocalizationStatus_Name(T value) {
  static_assert(::std::is_same<T, LocalizationStatus>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to LocalizationStatus_Name().");
  return LocalizationStatus_Name(static_cast<LocalizationStatus>(value));
}
template <>
inline const ::std::string& LocalizationStatus_Name(LocalizationStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LocalizationStatus_descriptor, 0, 5>(
      static_cast<int>(value));
}
inline bool LocalizationStatus_Parse(
    ::absl::string_view name, LocalizationStatus* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<LocalizationStatus>(LocalizationStatus_descriptor(), name,
                                           value);
}
enum LocalizationMethod : int {
  LOCALIZATION_METHOD_UNSPECIFIED = 0,
  LOCALIZATION_METHOD_AMCL = 1,
  LOCALIZATION_METHOD_EKF = 2,
  LOCALIZATION_METHOD_PARTICLE_FILTER = 3,
  LOCALIZATION_METHOD_VISUAL_SLAM = 4,
  LOCALIZATION_METHOD_GPS_RTK = 5,
  LOCALIZATION_METHOD_HYBRID = 6,
  LocalizationMethod_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  LocalizationMethod_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t LocalizationMethod_internal_data_[];
inline constexpr LocalizationMethod LocalizationMethod_MIN =
    static_cast<LocalizationMethod>(0);
inline constexpr LocalizationMethod LocalizationMethod_MAX =
    static_cast<LocalizationMethod>(6);
inline bool LocalizationMethod_IsValid(int value) {
  return 0 <= value && value <= 6;
}
inline constexpr int LocalizationMethod_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL LocalizationMethod_descriptor();
template <typename T>
const ::std::string& LocalizationMethod_Name(T value) {
  static_assert(::std::is_same<T, LocalizationMethod>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to LocalizationMethod_Name().");
  return LocalizationMethod_Name(static_cast<LocalizationMethod>(value));
}
template <>
inline const ::std::string& LocalizationMethod_Name(LocalizationMethod value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LocalizationMethod_descriptor, 0, 6>(
      static_cast<int>(value));
}
inline bool LocalizationMethod_Parse(
    ::absl::string_view name, LocalizationMethod* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<LocalizationMethod>(LocalizationMethod_descriptor(), name,
                                           value);
}
enum LocalizationHealth : int {
  LOCALIZATION_HEALTH_UNSPECIFIED = 0,
  LOCALIZATION_HEALTH_GOOD = 1,
  LOCALIZATION_HEALTH_FAIR = 2,
  LOCALIZATION_HEALTH_POOR = 3,
  LOCALIZATION_HEALTH_CRITICAL = 4,
  LocalizationHealth_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  LocalizationHealth_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t LocalizationHealth_internal_data_[];
inline constexpr LocalizationHealth LocalizationHealth_MIN =
    static_cast<LocalizationHealth>(0);
inline constexpr LocalizationHealth LocalizationHealth_MAX =
    static_cast<LocalizationHealth>(4);
inline bool LocalizationHealth_IsValid(int value) {
  return 0 <= value && value <= 4;
}
inline constexpr int LocalizationHealth_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL LocalizationHealth_descriptor();
template <typename T>
const ::std::string& LocalizationHealth_Name(T value) {
  static_assert(::std::is_same<T, LocalizationHealth>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to LocalizationHealth_Name().");
  return LocalizationHealth_Name(static_cast<LocalizationHealth>(value));
}
template <>
inline const ::std::string& LocalizationHealth_Name(LocalizationHealth value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LocalizationHealth_descriptor, 0, 4>(
      static_cast<int>(value));
}
inline bool LocalizationHealth_Parse(
    ::absl::string_view name, LocalizationHealth* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<LocalizationHealth>(LocalizationHealth_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class WaypointAction_ParametersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  WaypointAction_ParametersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WaypointAction_ParametersEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit WaypointAction_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_WaypointAction_ParametersEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 80,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull WaypointAction_ParametersEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class Vector3 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.Vector3) */ {
 public:
  inline Vector3() : Vector3(nullptr) {}
  ~Vector3() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Vector3* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Vector3));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Vector3(::google::protobuf::internal::ConstantInitialized);

  inline Vector3(const Vector3& from) : Vector3(nullptr, from) {}
  inline Vector3(Vector3&& from) noexcept
      : Vector3(nullptr, ::std::move(from)) {}
  inline Vector3& operator=(const Vector3& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector3& operator=(Vector3&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector3& default_instance() {
    return *reinterpret_cast<const Vector3*>(
        &_Vector3_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(Vector3& a, Vector3& b) { a.Swap(&b); }
  inline void Swap(Vector3* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector3* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector3* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Vector3>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Vector3& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Vector3& from) { Vector3::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Vector3* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.Vector3"; }

 protected:
  explicit Vector3(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Vector3(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Vector3& from);
  Vector3(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Vector3&& from) noexcept
      : Vector3(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // double x = 1 [json_name = "x"];
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 2 [json_name = "y"];
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // double z = 3 [json_name = "z"];
  void clear_z() ;
  double z() const;
  void set_z(double value);

  private:
  double _internal_z() const;
  void _internal_set_z(double value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.Vector3)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Vector3& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    double x_;
    double y_;
    double z_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Vector3_class_data_;
// -------------------------------------------------------------------

class TrajectoryOptions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.TrajectoryOptions) */ {
 public:
  inline TrajectoryOptions() : TrajectoryOptions(nullptr) {}
  ~TrajectoryOptions() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrajectoryOptions* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrajectoryOptions));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrajectoryOptions(::google::protobuf::internal::ConstantInitialized);

  inline TrajectoryOptions(const TrajectoryOptions& from) : TrajectoryOptions(nullptr, from) {}
  inline TrajectoryOptions(TrajectoryOptions&& from) noexcept
      : TrajectoryOptions(nullptr, ::std::move(from)) {}
  inline TrajectoryOptions& operator=(const TrajectoryOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrajectoryOptions& operator=(TrajectoryOptions&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrajectoryOptions& default_instance() {
    return *reinterpret_cast<const TrajectoryOptions*>(
        &_TrajectoryOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(TrajectoryOptions& a, TrajectoryOptions& b) { a.Swap(&b); }
  inline void Swap(TrajectoryOptions* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrajectoryOptions* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrajectoryOptions* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrajectoryOptions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrajectoryOptions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrajectoryOptions& from) { TrajectoryOptions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrajectoryOptions* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.TrajectoryOptions"; }

 protected:
  explicit TrajectoryOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TrajectoryOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TrajectoryOptions& from);
  TrajectoryOptions(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TrajectoryOptions&& from) noexcept
      : TrajectoryOptions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVelocityScalingFieldNumber = 2,
    kInterpolatePathFieldNumber = 1,
    kCheckCollisionsFieldNumber = 3,
    kExecutionModeFieldNumber = 4,
  };
  // double velocity_scaling = 2 [json_name = "velocityScaling"];
  void clear_velocity_scaling() ;
  double velocity_scaling() const;
  void set_velocity_scaling(double value);

  private:
  double _internal_velocity_scaling() const;
  void _internal_set_velocity_scaling(double value);

  public:
  // bool interpolate_path = 1 [json_name = "interpolatePath"];
  void clear_interpolate_path() ;
  bool interpolate_path() const;
  void set_interpolate_path(bool value);

  private:
  bool _internal_interpolate_path() const;
  void _internal_set_interpolate_path(bool value);

  public:
  // bool check_collisions = 3 [json_name = "checkCollisions"];
  void clear_check_collisions() ;
  bool check_collisions() const;
  void set_check_collisions(bool value);

  private:
  bool _internal_check_collisions() const;
  void _internal_set_check_collisions(bool value);

  public:
  // .agricultural.robot.navigation.v1.TrajectoryExecutionMode execution_mode = 4 [json_name = "executionMode"];
  void clear_execution_mode() ;
  ::agricultural::robot::navigation::v1::TrajectoryExecutionMode execution_mode() const;
  void set_execution_mode(::agricultural::robot::navigation::v1::TrajectoryExecutionMode value);

  private:
  ::agricultural::robot::navigation::v1::TrajectoryExecutionMode _internal_execution_mode() const;
  void _internal_set_execution_mode(::agricultural::robot::navigation::v1::TrajectoryExecutionMode value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.TrajectoryOptions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TrajectoryOptions& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    double velocity_scaling_;
    bool interpolate_path_;
    bool check_collisions_;
    int execution_mode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TrajectoryOptions_class_data_;
// -------------------------------------------------------------------

class StreamPositionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.StreamPositionRequest) */ {
 public:
  inline StreamPositionRequest() : StreamPositionRequest(nullptr) {}
  ~StreamPositionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StreamPositionRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StreamPositionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StreamPositionRequest(::google::protobuf::internal::ConstantInitialized);

  inline StreamPositionRequest(const StreamPositionRequest& from) : StreamPositionRequest(nullptr, from) {}
  inline StreamPositionRequest(StreamPositionRequest&& from) noexcept
      : StreamPositionRequest(nullptr, ::std::move(from)) {}
  inline StreamPositionRequest& operator=(const StreamPositionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamPositionRequest& operator=(StreamPositionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamPositionRequest& default_instance() {
    return *reinterpret_cast<const StreamPositionRequest*>(
        &_StreamPositionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(StreamPositionRequest& a, StreamPositionRequest& b) { a.Swap(&b); }
  inline void Swap(StreamPositionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamPositionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamPositionRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StreamPositionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamPositionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StreamPositionRequest& from) { StreamPositionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StreamPositionRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.StreamPositionRequest"; }

 protected:
  explicit StreamPositionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StreamPositionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StreamPositionRequest& from);
  StreamPositionRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StreamPositionRequest&& from) noexcept
      : StreamPositionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
    kFrameIdFieldNumber = 2,
    kFrequencyHzFieldNumber = 3,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // string frame_id = 2 [json_name = "frameId"];
  void clear_frame_id() ;
  const ::std::string& frame_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_frame_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_frame_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_frame_id();
  void set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_frame_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_frame_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_frame_id();

  public:
  // uint32 frequency_hz = 3 [json_name = "frequencyHz"];
  void clear_frequency_hz() ;
  ::uint32_t frequency_hz() const;
  void set_frequency_hz(::uint32_t value);

  private:
  ::uint32_t _internal_frequency_hz() const;
  void _internal_set_frequency_hz(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.StreamPositionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 79,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StreamPositionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    ::google::protobuf::internal::ArenaStringPtr frame_id_;
    ::uint32_t frequency_hz_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StreamPositionRequest_class_data_;
// -------------------------------------------------------------------

class StreamNavigationStatusRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.StreamNavigationStatusRequest) */ {
 public:
  inline StreamNavigationStatusRequest() : StreamNavigationStatusRequest(nullptr) {}
  ~StreamNavigationStatusRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StreamNavigationStatusRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StreamNavigationStatusRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StreamNavigationStatusRequest(::google::protobuf::internal::ConstantInitialized);

  inline StreamNavigationStatusRequest(const StreamNavigationStatusRequest& from) : StreamNavigationStatusRequest(nullptr, from) {}
  inline StreamNavigationStatusRequest(StreamNavigationStatusRequest&& from) noexcept
      : StreamNavigationStatusRequest(nullptr, ::std::move(from)) {}
  inline StreamNavigationStatusRequest& operator=(const StreamNavigationStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamNavigationStatusRequest& operator=(StreamNavigationStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamNavigationStatusRequest& default_instance() {
    return *reinterpret_cast<const StreamNavigationStatusRequest*>(
        &_StreamNavigationStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(StreamNavigationStatusRequest& a, StreamNavigationStatusRequest& b) { a.Swap(&b); }
  inline void Swap(StreamNavigationStatusRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamNavigationStatusRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamNavigationStatusRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StreamNavigationStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamNavigationStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StreamNavigationStatusRequest& from) { StreamNavigationStatusRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StreamNavigationStatusRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.StreamNavigationStatusRequest"; }

 protected:
  explicit StreamNavigationStatusRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StreamNavigationStatusRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StreamNavigationStatusRequest& from);
  StreamNavigationStatusRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StreamNavigationStatusRequest&& from) noexcept
      : StreamNavigationStatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
    kFrequencyHzFieldNumber = 2,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // uint32 frequency_hz = 2 [json_name = "frequencyHz"];
  void clear_frequency_hz() ;
  ::uint32_t frequency_hz() const;
  void set_frequency_hz(::uint32_t value);

  private:
  ::uint32_t _internal_frequency_hz() const;
  void _internal_set_frequency_hz(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.StreamNavigationStatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 79,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StreamNavigationStatusRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    ::uint32_t frequency_hz_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StreamNavigationStatusRequest_class_data_;
// -------------------------------------------------------------------

class StopMovementRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.StopMovementRequest) */ {
 public:
  inline StopMovementRequest() : StopMovementRequest(nullptr) {}
  ~StopMovementRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StopMovementRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StopMovementRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StopMovementRequest(::google::protobuf::internal::ConstantInitialized);

  inline StopMovementRequest(const StopMovementRequest& from) : StopMovementRequest(nullptr, from) {}
  inline StopMovementRequest(StopMovementRequest&& from) noexcept
      : StopMovementRequest(nullptr, ::std::move(from)) {}
  inline StopMovementRequest& operator=(const StopMovementRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopMovementRequest& operator=(StopMovementRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopMovementRequest& default_instance() {
    return *reinterpret_cast<const StopMovementRequest*>(
        &_StopMovementRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(StopMovementRequest& a, StopMovementRequest& b) { a.Swap(&b); }
  inline void Swap(StopMovementRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopMovementRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopMovementRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StopMovementRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StopMovementRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StopMovementRequest& from) { StopMovementRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StopMovementRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.StopMovementRequest"; }

 protected:
  explicit StopMovementRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StopMovementRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StopMovementRequest& from);
  StopMovementRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StopMovementRequest&& from) noexcept
      : StopMovementRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
    kStopTypeFieldNumber = 2,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // .agricultural.robot.navigation.v1.EmergencyStopType stop_type = 2 [json_name = "stopType"];
  void clear_stop_type() ;
  ::agricultural::robot::navigation::v1::EmergencyStopType stop_type() const;
  void set_stop_type(::agricultural::robot::navigation::v1::EmergencyStopType value);

  private:
  ::agricultural::robot::navigation::v1::EmergencyStopType _internal_stop_type() const;
  void _internal_set_stop_type(::agricultural::robot::navigation::v1::EmergencyStopType value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.StopMovementRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 69,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StopMovementRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    int stop_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StopMovementRequest_class_data_;
// -------------------------------------------------------------------

class SafetyConstraints final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.SafetyConstraints) */ {
 public:
  inline SafetyConstraints() : SafetyConstraints(nullptr) {}
  ~SafetyConstraints() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SafetyConstraints* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SafetyConstraints));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SafetyConstraints(::google::protobuf::internal::ConstantInitialized);

  inline SafetyConstraints(const SafetyConstraints& from) : SafetyConstraints(nullptr, from) {}
  inline SafetyConstraints(SafetyConstraints&& from) noexcept
      : SafetyConstraints(nullptr, ::std::move(from)) {}
  inline SafetyConstraints& operator=(const SafetyConstraints& from) {
    CopyFrom(from);
    return *this;
  }
  inline SafetyConstraints& operator=(SafetyConstraints&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SafetyConstraints& default_instance() {
    return *reinterpret_cast<const SafetyConstraints*>(
        &_SafetyConstraints_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(SafetyConstraints& a, SafetyConstraints& b) { a.Swap(&b); }
  inline void Swap(SafetyConstraints* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SafetyConstraints* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SafetyConstraints* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SafetyConstraints>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SafetyConstraints& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SafetyConstraints& from) { SafetyConstraints::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SafetyConstraints* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.SafetyConstraints"; }

 protected:
  explicit SafetyConstraints(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SafetyConstraints(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SafetyConstraints& from);
  SafetyConstraints(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SafetyConstraints&& from) noexcept
      : SafetyConstraints(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kForbiddenZonesFieldNumber = 6,
    kMaxLinearVelocityFieldNumber = 1,
    kMaxAngularVelocityFieldNumber = 2,
    kMaxAccelerationFieldNumber = 3,
    kSafetyMarginFieldNumber = 5,
    kObstacleAvoidanceEnabledFieldNumber = 4,
  };
  // repeated string forbidden_zones = 6 [json_name = "forbiddenZones"];
  int forbidden_zones_size() const;
  private:
  int _internal_forbidden_zones_size() const;

  public:
  void clear_forbidden_zones() ;
  const ::std::string& forbidden_zones(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_forbidden_zones(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_forbidden_zones(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_forbidden_zones();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_forbidden_zones(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& forbidden_zones() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_forbidden_zones();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_forbidden_zones() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_forbidden_zones();

  public:
  // double max_linear_velocity = 1 [json_name = "maxLinearVelocity"];
  void clear_max_linear_velocity() ;
  double max_linear_velocity() const;
  void set_max_linear_velocity(double value);

  private:
  double _internal_max_linear_velocity() const;
  void _internal_set_max_linear_velocity(double value);

  public:
  // double max_angular_velocity = 2 [json_name = "maxAngularVelocity"];
  void clear_max_angular_velocity() ;
  double max_angular_velocity() const;
  void set_max_angular_velocity(double value);

  private:
  double _internal_max_angular_velocity() const;
  void _internal_set_max_angular_velocity(double value);

  public:
  // double max_acceleration = 3 [json_name = "maxAcceleration"];
  void clear_max_acceleration() ;
  double max_acceleration() const;
  void set_max_acceleration(double value);

  private:
  double _internal_max_acceleration() const;
  void _internal_set_max_acceleration(double value);

  public:
  // double safety_margin = 5 [json_name = "safetyMargin"];
  void clear_safety_margin() ;
  double safety_margin() const;
  void set_safety_margin(double value);

  private:
  double _internal_safety_margin() const;
  void _internal_set_safety_margin(double value);

  public:
  // bool obstacle_avoidance_enabled = 4 [json_name = "obstacleAvoidanceEnabled"];
  void clear_obstacle_avoidance_enabled() ;
  bool obstacle_avoidance_enabled() const;
  void set_obstacle_avoidance_enabled(bool value);

  private:
  bool _internal_obstacle_avoidance_enabled() const;
  void _internal_set_obstacle_avoidance_enabled(bool value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.SafetyConstraints)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 74,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SafetyConstraints& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> forbidden_zones_;
    double max_linear_velocity_;
    double max_angular_velocity_;
    double max_acceleration_;
    double safety_margin_;
    bool obstacle_avoidance_enabled_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SafetyConstraints_class_data_;
// -------------------------------------------------------------------

class Resolution final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.Resolution) */ {
 public:
  inline Resolution() : Resolution(nullptr) {}
  ~Resolution() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Resolution* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Resolution));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Resolution(::google::protobuf::internal::ConstantInitialized);

  inline Resolution(const Resolution& from) : Resolution(nullptr, from) {}
  inline Resolution(Resolution&& from) noexcept
      : Resolution(nullptr, ::std::move(from)) {}
  inline Resolution& operator=(const Resolution& from) {
    CopyFrom(from);
    return *this;
  }
  inline Resolution& operator=(Resolution&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Resolution& default_instance() {
    return *reinterpret_cast<const Resolution*>(
        &_Resolution_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 54;
  friend void swap(Resolution& a, Resolution& b) { a.Swap(&b); }
  inline void Swap(Resolution* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Resolution* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Resolution* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Resolution>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Resolution& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Resolution& from) { Resolution::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Resolution* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.Resolution"; }

 protected:
  explicit Resolution(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Resolution(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Resolution& from);
  Resolution(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Resolution&& from) noexcept
      : Resolution(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWidthFieldNumber = 1,
    kHeightFieldNumber = 2,
  };
  // uint32 width = 1 [json_name = "width"];
  void clear_width() ;
  ::uint32_t width() const;
  void set_width(::uint32_t value);

  private:
  ::uint32_t _internal_width() const;
  void _internal_set_width(::uint32_t value);

  public:
  // uint32 height = 2 [json_name = "height"];
  void clear_height() ;
  ::uint32_t height() const;
  void set_height(::uint32_t value);

  private:
  ::uint32_t _internal_height() const;
  void _internal_set_height(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.Resolution)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Resolution& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t width_;
    ::uint32_t height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Resolution_class_data_;
// -------------------------------------------------------------------

class ResetLocalizationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.ResetLocalizationRequest) */ {
 public:
  inline ResetLocalizationRequest() : ResetLocalizationRequest(nullptr) {}
  ~ResetLocalizationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ResetLocalizationRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ResetLocalizationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResetLocalizationRequest(::google::protobuf::internal::ConstantInitialized);

  inline ResetLocalizationRequest(const ResetLocalizationRequest& from) : ResetLocalizationRequest(nullptr, from) {}
  inline ResetLocalizationRequest(ResetLocalizationRequest&& from) noexcept
      : ResetLocalizationRequest(nullptr, ::std::move(from)) {}
  inline ResetLocalizationRequest& operator=(const ResetLocalizationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResetLocalizationRequest& operator=(ResetLocalizationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResetLocalizationRequest& default_instance() {
    return *reinterpret_cast<const ResetLocalizationRequest*>(
        &_ResetLocalizationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 61;
  friend void swap(ResetLocalizationRequest& a, ResetLocalizationRequest& b) { a.Swap(&b); }
  inline void Swap(ResetLocalizationRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResetLocalizationRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResetLocalizationRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ResetLocalizationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResetLocalizationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResetLocalizationRequest& from) { ResetLocalizationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ResetLocalizationRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.ResetLocalizationRequest"; }

 protected:
  explicit ResetLocalizationRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ResetLocalizationRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ResetLocalizationRequest& from);
  ResetLocalizationRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ResetLocalizationRequest&& from) noexcept
      : ResetLocalizationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
    kClearMapFieldNumber = 2,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // bool clear_map = 2 [json_name = "clearMap"];
  void clear_clear_map() ;
  bool clear_map() const;
  void set_clear_map(bool value);

  private:
  bool _internal_clear_map() const;
  void _internal_set_clear_map(bool value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.ResetLocalizationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 74,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ResetLocalizationRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    bool clear_map_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ResetLocalizationRequest_class_data_;
// -------------------------------------------------------------------

class Quaternion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.Quaternion) */ {
 public:
  inline Quaternion() : Quaternion(nullptr) {}
  ~Quaternion() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Quaternion* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Quaternion));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Quaternion(::google::protobuf::internal::ConstantInitialized);

  inline Quaternion(const Quaternion& from) : Quaternion(nullptr, from) {}
  inline Quaternion(Quaternion&& from) noexcept
      : Quaternion(nullptr, ::std::move(from)) {}
  inline Quaternion& operator=(const Quaternion& from) {
    CopyFrom(from);
    return *this;
  }
  inline Quaternion& operator=(Quaternion&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Quaternion& default_instance() {
    return *reinterpret_cast<const Quaternion*>(
        &_Quaternion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(Quaternion& a, Quaternion& b) { a.Swap(&b); }
  inline void Swap(Quaternion* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Quaternion* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Quaternion* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Quaternion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Quaternion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Quaternion& from) { Quaternion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Quaternion* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.Quaternion"; }

 protected:
  explicit Quaternion(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Quaternion(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Quaternion& from);
  Quaternion(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Quaternion&& from) noexcept
      : Quaternion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kWFieldNumber = 4,
  };
  // double x = 1 [json_name = "x"];
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 2 [json_name = "y"];
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // double z = 3 [json_name = "z"];
  void clear_z() ;
  double z() const;
  void set_z(double value);

  private:
  double _internal_z() const;
  void _internal_set_z(double value);

  public:
  // double w = 4 [json_name = "w"];
  void clear_w() ;
  double w() const;
  void set_w(double value);

  private:
  double _internal_w() const;
  void _internal_set_w(double value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.Quaternion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Quaternion& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    double x_;
    double y_;
    double z_;
    double w_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Quaternion_class_data_;
// -------------------------------------------------------------------

class Point3D final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.Point3D) */ {
 public:
  inline Point3D() : Point3D(nullptr) {}
  ~Point3D() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Point3D* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Point3D));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Point3D(::google::protobuf::internal::ConstantInitialized);

  inline Point3D(const Point3D& from) : Point3D(nullptr, from) {}
  inline Point3D(Point3D&& from) noexcept
      : Point3D(nullptr, ::std::move(from)) {}
  inline Point3D& operator=(const Point3D& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point3D& operator=(Point3D&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Point3D& default_instance() {
    return *reinterpret_cast<const Point3D*>(
        &_Point3D_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(Point3D& a, Point3D& b) { a.Swap(&b); }
  inline void Swap(Point3D* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point3D* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Point3D* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Point3D>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Point3D& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Point3D& from) { Point3D::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Point3D* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.Point3D"; }

 protected:
  explicit Point3D(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Point3D(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Point3D& from);
  Point3D(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Point3D&& from) noexcept
      : Point3D(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // double x = 1 [json_name = "x"];
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 2 [json_name = "y"];
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // double z = 3 [json_name = "z"];
  void clear_z() ;
  double z() const;
  void set_z(double value);

  private:
  double _internal_z() const;
  void _internal_set_z(double value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.Point3D)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Point3D& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    double x_;
    double y_;
    double z_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Point3D_class_data_;
// -------------------------------------------------------------------

class Point2D final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.Point2D) */ {
 public:
  inline Point2D() : Point2D(nullptr) {}
  ~Point2D() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Point2D* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Point2D));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Point2D(::google::protobuf::internal::ConstantInitialized);

  inline Point2D(const Point2D& from) : Point2D(nullptr, from) {}
  inline Point2D(Point2D&& from) noexcept
      : Point2D(nullptr, ::std::move(from)) {}
  inline Point2D& operator=(const Point2D& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point2D& operator=(Point2D&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Point2D& default_instance() {
    return *reinterpret_cast<const Point2D*>(
        &_Point2D_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(Point2D& a, Point2D& b) { a.Swap(&b); }
  inline void Swap(Point2D* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point2D* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Point2D* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Point2D>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Point2D& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Point2D& from) { Point2D::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Point2D* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.Point2D"; }

 protected:
  explicit Point2D(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Point2D(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Point2D& from);
  Point2D(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Point2D&& from) noexcept
      : Point2D(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // double x = 1 [json_name = "x"];
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 2 [json_name = "y"];
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.Point2D)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Point2D& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    double x_;
    double y_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Point2D_class_data_;
// -------------------------------------------------------------------

class NavigationOptions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.NavigationOptions) */ {
 public:
  inline NavigationOptions() : NavigationOptions(nullptr) {}
  ~NavigationOptions() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NavigationOptions* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NavigationOptions));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NavigationOptions(::google::protobuf::internal::ConstantInitialized);

  inline NavigationOptions(const NavigationOptions& from) : NavigationOptions(nullptr, from) {}
  inline NavigationOptions(NavigationOptions&& from) noexcept
      : NavigationOptions(nullptr, ::std::move(from)) {}
  inline NavigationOptions& operator=(const NavigationOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline NavigationOptions& operator=(NavigationOptions&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NavigationOptions& default_instance() {
    return *reinterpret_cast<const NavigationOptions*>(
        &_NavigationOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(NavigationOptions& a, NavigationOptions& b) { a.Swap(&b); }
  inline void Swap(NavigationOptions* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NavigationOptions* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NavigationOptions* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NavigationOptions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NavigationOptions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NavigationOptions& from) { NavigationOptions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NavigationOptions* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.NavigationOptions"; }

 protected:
  explicit NavigationOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  NavigationOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NavigationOptions& from);
  NavigationOptions(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, NavigationOptions&& from) noexcept
      : NavigationOptions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAvoidZonesFieldNumber = 5,
    kToleranceLinearFieldNumber = 2,
    kPlannerFieldNumber = 1,
    kUseObstacleAvoidanceFieldNumber = 4,
    kToleranceAngularFieldNumber = 3,
    kBehaviorFieldNumber = 6,
    kMaxPlanningTimeMsFieldNumber = 7,
    kMaxRetriesFieldNumber = 8,
  };
  // repeated string avoid_zones = 5 [json_name = "avoidZones"];
  int avoid_zones_size() const;
  private:
  int _internal_avoid_zones_size() const;

  public:
  void clear_avoid_zones() ;
  const ::std::string& avoid_zones(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_avoid_zones(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_avoid_zones(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_avoid_zones();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_avoid_zones(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& avoid_zones() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_avoid_zones();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_avoid_zones() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_avoid_zones();

  public:
  // double tolerance_linear = 2 [json_name = "toleranceLinear"];
  void clear_tolerance_linear() ;
  double tolerance_linear() const;
  void set_tolerance_linear(double value);

  private:
  double _internal_tolerance_linear() const;
  void _internal_set_tolerance_linear(double value);

  public:
  // .agricultural.robot.navigation.v1.PlannerType planner = 1 [json_name = "planner"];
  void clear_planner() ;
  ::agricultural::robot::navigation::v1::PlannerType planner() const;
  void set_planner(::agricultural::robot::navigation::v1::PlannerType value);

  private:
  ::agricultural::robot::navigation::v1::PlannerType _internal_planner() const;
  void _internal_set_planner(::agricultural::robot::navigation::v1::PlannerType value);

  public:
  // bool use_obstacle_avoidance = 4 [json_name = "useObstacleAvoidance"];
  void clear_use_obstacle_avoidance() ;
  bool use_obstacle_avoidance() const;
  void set_use_obstacle_avoidance(bool value);

  private:
  bool _internal_use_obstacle_avoidance() const;
  void _internal_set_use_obstacle_avoidance(bool value);

  public:
  // double tolerance_angular = 3 [json_name = "toleranceAngular"];
  void clear_tolerance_angular() ;
  double tolerance_angular() const;
  void set_tolerance_angular(double value);

  private:
  double _internal_tolerance_angular() const;
  void _internal_set_tolerance_angular(double value);

  public:
  // .agricultural.robot.navigation.v1.NavigationBehavior behavior = 6 [json_name = "behavior"];
  void clear_behavior() ;
  ::agricultural::robot::navigation::v1::NavigationBehavior behavior() const;
  void set_behavior(::agricultural::robot::navigation::v1::NavigationBehavior value);

  private:
  ::agricultural::robot::navigation::v1::NavigationBehavior _internal_behavior() const;
  void _internal_set_behavior(::agricultural::robot::navigation::v1::NavigationBehavior value);

  public:
  // uint32 max_planning_time_ms = 7 [json_name = "maxPlanningTimeMs"];
  void clear_max_planning_time_ms() ;
  ::uint32_t max_planning_time_ms() const;
  void set_max_planning_time_ms(::uint32_t value);

  private:
  ::uint32_t _internal_max_planning_time_ms() const;
  void _internal_set_max_planning_time_ms(::uint32_t value);

  public:
  // uint32 max_retries = 8 [json_name = "maxRetries"];
  void clear_max_retries() ;
  ::uint32_t max_retries() const;
  void set_max_retries(::uint32_t value);

  private:
  ::uint32_t _internal_max_retries() const;
  void _internal_set_max_retries(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.NavigationOptions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8,
                                   0, 78,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const NavigationOptions& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> avoid_zones_;
    double tolerance_linear_;
    int planner_;
    bool use_obstacle_avoidance_;
    double tolerance_angular_;
    int behavior_;
    ::uint32_t max_planning_time_ms_;
    ::uint32_t max_retries_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull NavigationOptions_class_data_;
// -------------------------------------------------------------------

class LocalizationQuality final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.LocalizationQuality) */ {
 public:
  inline LocalizationQuality() : LocalizationQuality(nullptr) {}
  ~LocalizationQuality() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LocalizationQuality* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LocalizationQuality));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LocalizationQuality(::google::protobuf::internal::ConstantInitialized);

  inline LocalizationQuality(const LocalizationQuality& from) : LocalizationQuality(nullptr, from) {}
  inline LocalizationQuality(LocalizationQuality&& from) noexcept
      : LocalizationQuality(nullptr, ::std::move(from)) {}
  inline LocalizationQuality& operator=(const LocalizationQuality& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocalizationQuality& operator=(LocalizationQuality&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LocalizationQuality& default_instance() {
    return *reinterpret_cast<const LocalizationQuality*>(
        &_LocalizationQuality_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 64;
  friend void swap(LocalizationQuality& a, LocalizationQuality& b) { a.Swap(&b); }
  inline void Swap(LocalizationQuality* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocalizationQuality* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LocalizationQuality* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LocalizationQuality>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LocalizationQuality& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LocalizationQuality& from) { LocalizationQuality::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LocalizationQuality* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.LocalizationQuality"; }

 protected:
  explicit LocalizationQuality(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LocalizationQuality(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LocalizationQuality& from);
  LocalizationQuality(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LocalizationQuality&& from) noexcept
      : LocalizationQuality(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConfidenceFieldNumber = 1,
    kPositionUncertaintyFieldNumber = 2,
    kOrientationUncertaintyFieldNumber = 3,
    kDriftEstimateFieldNumber = 5,
    kMatchedFeaturesFieldNumber = 4,
    kHealthFieldNumber = 6,
  };
  // double confidence = 1 [json_name = "confidence"];
  void clear_confidence() ;
  double confidence() const;
  void set_confidence(double value);

  private:
  double _internal_confidence() const;
  void _internal_set_confidence(double value);

  public:
  // double position_uncertainty = 2 [json_name = "positionUncertainty"];
  void clear_position_uncertainty() ;
  double position_uncertainty() const;
  void set_position_uncertainty(double value);

  private:
  double _internal_position_uncertainty() const;
  void _internal_set_position_uncertainty(double value);

  public:
  // double orientation_uncertainty = 3 [json_name = "orientationUncertainty"];
  void clear_orientation_uncertainty() ;
  double orientation_uncertainty() const;
  void set_orientation_uncertainty(double value);

  private:
  double _internal_orientation_uncertainty() const;
  void _internal_set_orientation_uncertainty(double value);

  public:
  // double drift_estimate = 5 [json_name = "driftEstimate"];
  void clear_drift_estimate() ;
  double drift_estimate() const;
  void set_drift_estimate(double value);

  private:
  double _internal_drift_estimate() const;
  void _internal_set_drift_estimate(double value);

  public:
  // uint32 matched_features = 4 [json_name = "matchedFeatures"];
  void clear_matched_features() ;
  ::uint32_t matched_features() const;
  void set_matched_features(::uint32_t value);

  private:
  ::uint32_t _internal_matched_features() const;
  void _internal_set_matched_features(::uint32_t value);

  public:
  // .agricultural.robot.navigation.v1.LocalizationHealth health = 6 [json_name = "health"];
  void clear_health() ;
  ::agricultural::robot::navigation::v1::LocalizationHealth health() const;
  void set_health(::agricultural::robot::navigation::v1::LocalizationHealth value);

  private:
  ::agricultural::robot::navigation::v1::LocalizationHealth _internal_health() const;
  void _internal_set_health(::agricultural::robot::navigation::v1::LocalizationHealth value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.LocalizationQuality)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LocalizationQuality& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    double confidence_;
    double position_uncertainty_;
    double orientation_uncertainty_;
    double drift_estimate_;
    ::uint32_t matched_features_;
    int health_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LocalizationQuality_class_data_;
// -------------------------------------------------------------------

class InitializeLocalizationRequest_ParametersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  InitializeLocalizationRequest_ParametersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InitializeLocalizationRequest_ParametersEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit InitializeLocalizationRequest_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_InitializeLocalizationRequest_ParametersEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 95,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull InitializeLocalizationRequest_ParametersEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class GetPositionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.GetPositionRequest) */ {
 public:
  inline GetPositionRequest() : GetPositionRequest(nullptr) {}
  ~GetPositionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetPositionRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetPositionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetPositionRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetPositionRequest(const GetPositionRequest& from) : GetPositionRequest(nullptr, from) {}
  inline GetPositionRequest(GetPositionRequest&& from) noexcept
      : GetPositionRequest(nullptr, ::std::move(from)) {}
  inline GetPositionRequest& operator=(const GetPositionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPositionRequest& operator=(GetPositionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPositionRequest& default_instance() {
    return *reinterpret_cast<const GetPositionRequest*>(
        &_GetPositionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(GetPositionRequest& a, GetPositionRequest& b) { a.Swap(&b); }
  inline void Swap(GetPositionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPositionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPositionRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetPositionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPositionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetPositionRequest& from) { GetPositionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetPositionRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.GetPositionRequest"; }

 protected:
  explicit GetPositionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetPositionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetPositionRequest& from);
  GetPositionRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetPositionRequest&& from) noexcept
      : GetPositionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
    kFrameIdFieldNumber = 2,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // string frame_id = 2 [json_name = "frameId"];
  void clear_frame_id() ;
  const ::std::string& frame_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_frame_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_frame_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_frame_id();
  void set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_frame_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_frame_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_frame_id();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.GetPositionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 76,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetPositionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    ::google::protobuf::internal::ArenaStringPtr frame_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetPositionRequest_class_data_;
// -------------------------------------------------------------------

class GetNavigationStatusRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.GetNavigationStatusRequest) */ {
 public:
  inline GetNavigationStatusRequest() : GetNavigationStatusRequest(nullptr) {}
  ~GetNavigationStatusRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetNavigationStatusRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetNavigationStatusRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetNavigationStatusRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetNavigationStatusRequest(const GetNavigationStatusRequest& from) : GetNavigationStatusRequest(nullptr, from) {}
  inline GetNavigationStatusRequest(GetNavigationStatusRequest&& from) noexcept
      : GetNavigationStatusRequest(nullptr, ::std::move(from)) {}
  inline GetNavigationStatusRequest& operator=(const GetNavigationStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetNavigationStatusRequest& operator=(GetNavigationStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetNavigationStatusRequest& default_instance() {
    return *reinterpret_cast<const GetNavigationStatusRequest*>(
        &_GetNavigationStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(GetNavigationStatusRequest& a, GetNavigationStatusRequest& b) { a.Swap(&b); }
  inline void Swap(GetNavigationStatusRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetNavigationStatusRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetNavigationStatusRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetNavigationStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetNavigationStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetNavigationStatusRequest& from) { GetNavigationStatusRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetNavigationStatusRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.GetNavigationStatusRequest"; }

 protected:
  explicit GetNavigationStatusRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetNavigationStatusRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetNavigationStatusRequest& from);
  GetNavigationStatusRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetNavigationStatusRequest&& from) noexcept
      : GetNavigationStatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.GetNavigationStatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 76,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetNavigationStatusRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetNavigationStatusRequest_class_data_;
// -------------------------------------------------------------------

class GetMapRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.GetMapRequest) */ {
 public:
  inline GetMapRequest() : GetMapRequest(nullptr) {}
  ~GetMapRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetMapRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetMapRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMapRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetMapRequest(const GetMapRequest& from) : GetMapRequest(nullptr, from) {}
  inline GetMapRequest(GetMapRequest&& from) noexcept
      : GetMapRequest(nullptr, ::std::move(from)) {}
  inline GetMapRequest& operator=(const GetMapRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMapRequest& operator=(GetMapRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMapRequest& default_instance() {
    return *reinterpret_cast<const GetMapRequest*>(
        &_GetMapRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GetMapRequest& a, GetMapRequest& b) { a.Swap(&b); }
  inline void Swap(GetMapRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMapRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMapRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetMapRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMapRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetMapRequest& from) { GetMapRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetMapRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.GetMapRequest"; }

 protected:
  explicit GetMapRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetMapRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetMapRequest& from);
  GetMapRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetMapRequest&& from) noexcept
      : GetMapRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
    kFrameIdFieldNumber = 3,
    kMapTypeFieldNumber = 2,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // optional string frame_id = 3 [json_name = "frameId"];
  bool has_frame_id() const;
  void clear_frame_id() ;
  const ::std::string& frame_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_frame_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_frame_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_frame_id();
  void set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_frame_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_frame_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_frame_id();

  public:
  // .agricultural.robot.navigation.v1.MapType map_type = 2 [json_name = "mapType"];
  void clear_map_type() ;
  ::agricultural::robot::navigation::v1::MapType map_type() const;
  void set_map_type(::agricultural::robot::navigation::v1::MapType value);

  private:
  ::agricultural::robot::navigation::v1::MapType _internal_map_type() const;
  void _internal_set_map_type(::agricultural::robot::navigation::v1::MapType value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.GetMapRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 71,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetMapRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    ::google::protobuf::internal::ArenaStringPtr frame_id_;
    int map_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetMapRequest_class_data_;
// -------------------------------------------------------------------

class GetLocalizationStatusRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.GetLocalizationStatusRequest) */ {
 public:
  inline GetLocalizationStatusRequest() : GetLocalizationStatusRequest(nullptr) {}
  ~GetLocalizationStatusRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetLocalizationStatusRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetLocalizationStatusRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetLocalizationStatusRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetLocalizationStatusRequest(const GetLocalizationStatusRequest& from) : GetLocalizationStatusRequest(nullptr, from) {}
  inline GetLocalizationStatusRequest(GetLocalizationStatusRequest&& from) noexcept
      : GetLocalizationStatusRequest(nullptr, ::std::move(from)) {}
  inline GetLocalizationStatusRequest& operator=(const GetLocalizationStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLocalizationStatusRequest& operator=(GetLocalizationStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLocalizationStatusRequest& default_instance() {
    return *reinterpret_cast<const GetLocalizationStatusRequest*>(
        &_GetLocalizationStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 58;
  friend void swap(GetLocalizationStatusRequest& a, GetLocalizationStatusRequest& b) { a.Swap(&b); }
  inline void Swap(GetLocalizationStatusRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLocalizationStatusRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLocalizationStatusRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetLocalizationStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLocalizationStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetLocalizationStatusRequest& from) { GetLocalizationStatusRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetLocalizationStatusRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.GetLocalizationStatusRequest"; }

 protected:
  explicit GetLocalizationStatusRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetLocalizationStatusRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetLocalizationStatusRequest& from);
  GetLocalizationStatusRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetLocalizationStatusRequest&& from) noexcept
      : GetLocalizationStatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.GetLocalizationStatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 78,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetLocalizationStatusRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetLocalizationStatusRequest_class_data_;
// -------------------------------------------------------------------

class GetCameraInfoRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.GetCameraInfoRequest) */ {
 public:
  inline GetCameraInfoRequest() : GetCameraInfoRequest(nullptr) {}
  ~GetCameraInfoRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCameraInfoRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCameraInfoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCameraInfoRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetCameraInfoRequest(const GetCameraInfoRequest& from) : GetCameraInfoRequest(nullptr, from) {}
  inline GetCameraInfoRequest(GetCameraInfoRequest&& from) noexcept
      : GetCameraInfoRequest(nullptr, ::std::move(from)) {}
  inline GetCameraInfoRequest& operator=(const GetCameraInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCameraInfoRequest& operator=(GetCameraInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCameraInfoRequest& default_instance() {
    return *reinterpret_cast<const GetCameraInfoRequest*>(
        &_GetCameraInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 43;
  friend void swap(GetCameraInfoRequest& a, GetCameraInfoRequest& b) { a.Swap(&b); }
  inline void Swap(GetCameraInfoRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCameraInfoRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCameraInfoRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetCameraInfoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCameraInfoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCameraInfoRequest& from) { GetCameraInfoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetCameraInfoRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.GetCameraInfoRequest"; }

 protected:
  explicit GetCameraInfoRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetCameraInfoRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetCameraInfoRequest& from);
  GetCameraInfoRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetCameraInfoRequest&& from) noexcept
      : GetCameraInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
    kCameraIdFieldNumber = 2,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // string camera_id = 2 [json_name = "cameraId"];
  void clear_camera_id() ;
  const ::std::string& camera_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_camera_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_camera_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_camera_id();
  void set_allocated_camera_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_camera_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_camera_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_camera_id();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.GetCameraInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 79,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetCameraInfoRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    ::google::protobuf::internal::ArenaStringPtr camera_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetCameraInfoRequest_class_data_;
// -------------------------------------------------------------------

class ClearMapRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.ClearMapRequest) */ {
 public:
  inline ClearMapRequest() : ClearMapRequest(nullptr) {}
  ~ClearMapRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClearMapRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClearMapRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClearMapRequest(::google::protobuf::internal::ConstantInitialized);

  inline ClearMapRequest(const ClearMapRequest& from) : ClearMapRequest(nullptr, from) {}
  inline ClearMapRequest(ClearMapRequest&& from) noexcept
      : ClearMapRequest(nullptr, ::std::move(from)) {}
  inline ClearMapRequest& operator=(const ClearMapRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClearMapRequest& operator=(ClearMapRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClearMapRequest& default_instance() {
    return *reinterpret_cast<const ClearMapRequest*>(
        &_ClearMapRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ClearMapRequest& a, ClearMapRequest& b) { a.Swap(&b); }
  inline void Swap(ClearMapRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClearMapRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClearMapRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClearMapRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClearMapRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClearMapRequest& from) { ClearMapRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClearMapRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.ClearMapRequest"; }

 protected:
  explicit ClearMapRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ClearMapRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ClearMapRequest& from);
  ClearMapRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ClearMapRequest&& from) noexcept
      : ClearMapRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
    kMapTypeFieldNumber = 2,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // .agricultural.robot.navigation.v1.MapType map_type = 2 [json_name = "mapType"];
  void clear_map_type() ;
  ::agricultural::robot::navigation::v1::MapType map_type() const;
  void set_map_type(::agricultural::robot::navigation::v1::MapType value);

  private:
  ::agricultural::robot::navigation::v1::MapType _internal_map_type() const;
  void _internal_set_map_type(::agricultural::robot::navigation::v1::MapType value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.ClearMapRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 65,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ClearMapRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    int map_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ClearMapRequest_class_data_;
// -------------------------------------------------------------------

class CancelGoalRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.CancelGoalRequest) */ {
 public:
  inline CancelGoalRequest() : CancelGoalRequest(nullptr) {}
  ~CancelGoalRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CancelGoalRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CancelGoalRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CancelGoalRequest(::google::protobuf::internal::ConstantInitialized);

  inline CancelGoalRequest(const CancelGoalRequest& from) : CancelGoalRequest(nullptr, from) {}
  inline CancelGoalRequest(CancelGoalRequest&& from) noexcept
      : CancelGoalRequest(nullptr, ::std::move(from)) {}
  inline CancelGoalRequest& operator=(const CancelGoalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CancelGoalRequest& operator=(CancelGoalRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CancelGoalRequest& default_instance() {
    return *reinterpret_cast<const CancelGoalRequest*>(
        &_CancelGoalRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(CancelGoalRequest& a, CancelGoalRequest& b) { a.Swap(&b); }
  inline void Swap(CancelGoalRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CancelGoalRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CancelGoalRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CancelGoalRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CancelGoalRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CancelGoalRequest& from) { CancelGoalRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CancelGoalRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.CancelGoalRequest"; }

 protected:
  explicit CancelGoalRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CancelGoalRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CancelGoalRequest& from);
  CancelGoalRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CancelGoalRequest&& from) noexcept
      : CancelGoalRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
    kGoalIdFieldNumber = 2,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // optional string goal_id = 2 [json_name = "goalId"];
  bool has_goal_id() const;
  void clear_goal_id() ;
  const ::std::string& goal_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_goal_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_goal_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_goal_id();
  void set_allocated_goal_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_goal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_goal_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_goal_id();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.CancelGoalRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 74,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CancelGoalRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    ::google::protobuf::internal::ArenaStringPtr goal_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CancelGoalRequest_class_data_;
// -------------------------------------------------------------------

class CameraIntrinsics final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.CameraIntrinsics) */ {
 public:
  inline CameraIntrinsics() : CameraIntrinsics(nullptr) {}
  ~CameraIntrinsics() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraIntrinsics* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraIntrinsics));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraIntrinsics(::google::protobuf::internal::ConstantInitialized);

  inline CameraIntrinsics(const CameraIntrinsics& from) : CameraIntrinsics(nullptr, from) {}
  inline CameraIntrinsics(CameraIntrinsics&& from) noexcept
      : CameraIntrinsics(nullptr, ::std::move(from)) {}
  inline CameraIntrinsics& operator=(const CameraIntrinsics& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraIntrinsics& operator=(CameraIntrinsics&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraIntrinsics& default_instance() {
    return *reinterpret_cast<const CameraIntrinsics*>(
        &_CameraIntrinsics_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 55;
  friend void swap(CameraIntrinsics& a, CameraIntrinsics& b) { a.Swap(&b); }
  inline void Swap(CameraIntrinsics* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraIntrinsics* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraIntrinsics* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraIntrinsics>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CameraIntrinsics& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CameraIntrinsics& from) { CameraIntrinsics::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraIntrinsics* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.CameraIntrinsics"; }

 protected:
  explicit CameraIntrinsics(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CameraIntrinsics(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CameraIntrinsics& from);
  CameraIntrinsics(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CameraIntrinsics&& from) noexcept
      : CameraIntrinsics(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraMatrixFieldNumber = 5,
    kFocalLengthXFieldNumber = 1,
    kFocalLengthYFieldNumber = 2,
    kPrincipalPointXFieldNumber = 3,
    kPrincipalPointYFieldNumber = 4,
  };
  // repeated double camera_matrix = 5 [json_name = "cameraMatrix"];
  int camera_matrix_size() const;
  private:
  int _internal_camera_matrix_size() const;

  public:
  void clear_camera_matrix() ;
  double camera_matrix(int index) const;
  void set_camera_matrix(int index, double value);
  void add_camera_matrix(double value);
  const ::google::protobuf::RepeatedField<double>& camera_matrix() const;
  ::google::protobuf::RepeatedField<double>* PROTOBUF_NONNULL mutable_camera_matrix();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_camera_matrix() const;
  ::google::protobuf::RepeatedField<double>* PROTOBUF_NONNULL _internal_mutable_camera_matrix();

  public:
  // double focal_length_x = 1 [json_name = "focalLengthX"];
  void clear_focal_length_x() ;
  double focal_length_x() const;
  void set_focal_length_x(double value);

  private:
  double _internal_focal_length_x() const;
  void _internal_set_focal_length_x(double value);

  public:
  // double focal_length_y = 2 [json_name = "focalLengthY"];
  void clear_focal_length_y() ;
  double focal_length_y() const;
  void set_focal_length_y(double value);

  private:
  double _internal_focal_length_y() const;
  void _internal_set_focal_length_y(double value);

  public:
  // double principal_point_x = 3 [json_name = "principalPointX"];
  void clear_principal_point_x() ;
  double principal_point_x() const;
  void set_principal_point_x(double value);

  private:
  double _internal_principal_point_x() const;
  void _internal_set_principal_point_x(double value);

  public:
  // double principal_point_y = 4 [json_name = "principalPointY"];
  void clear_principal_point_y() ;
  double principal_point_y() const;
  void set_principal_point_y(double value);

  private:
  double _internal_principal_point_y() const;
  void _internal_set_principal_point_y(double value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.CameraIntrinsics)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CameraIntrinsics& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<double> camera_matrix_;
    double focal_length_x_;
    double focal_length_y_;
    double principal_point_x_;
    double principal_point_y_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CameraIntrinsics_class_data_;
// -------------------------------------------------------------------

class CameraDistortion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.CameraDistortion) */ {
 public:
  inline CameraDistortion() : CameraDistortion(nullptr) {}
  ~CameraDistortion() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraDistortion* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraDistortion));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraDistortion(::google::protobuf::internal::ConstantInitialized);

  inline CameraDistortion(const CameraDistortion& from) : CameraDistortion(nullptr, from) {}
  inline CameraDistortion(CameraDistortion&& from) noexcept
      : CameraDistortion(nullptr, ::std::move(from)) {}
  inline CameraDistortion& operator=(const CameraDistortion& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraDistortion& operator=(CameraDistortion&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraDistortion& default_instance() {
    return *reinterpret_cast<const CameraDistortion*>(
        &_CameraDistortion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 56;
  friend void swap(CameraDistortion& a, CameraDistortion& b) { a.Swap(&b); }
  inline void Swap(CameraDistortion* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraDistortion* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraDistortion* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraDistortion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CameraDistortion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CameraDistortion& from) { CameraDistortion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraDistortion* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.CameraDistortion"; }

 protected:
  explicit CameraDistortion(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CameraDistortion(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CameraDistortion& from);
  CameraDistortion(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CameraDistortion&& from) noexcept
      : CameraDistortion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCoefficientsFieldNumber = 2,
    kModelFieldNumber = 1,
  };
  // repeated double coefficients = 2 [json_name = "coefficients"];
  int coefficients_size() const;
  private:
  int _internal_coefficients_size() const;

  public:
  void clear_coefficients() ;
  double coefficients(int index) const;
  void set_coefficients(int index, double value);
  void add_coefficients(double value);
  const ::google::protobuf::RepeatedField<double>& coefficients() const;
  ::google::protobuf::RepeatedField<double>* PROTOBUF_NONNULL mutable_coefficients();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_coefficients() const;
  ::google::protobuf::RepeatedField<double>* PROTOBUF_NONNULL _internal_mutable_coefficients();

  public:
  // .agricultural.robot.navigation.v1.DistortionModel model = 1 [json_name = "model"];
  void clear_model() ;
  ::agricultural::robot::navigation::v1::DistortionModel model() const;
  void set_model(::agricultural::robot::navigation::v1::DistortionModel value);

  private:
  ::agricultural::robot::navigation::v1::DistortionModel _internal_model() const;
  void _internal_set_model(::agricultural::robot::navigation::v1::DistortionModel value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.CameraDistortion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CameraDistortion& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<double> coefficients_;
    int model_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CameraDistortion_class_data_;
// -------------------------------------------------------------------

class CameraControlResponse_CurrentSettingsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, double,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, double,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>;
  CameraControlResponse_CurrentSettingsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraControlResponse_CurrentSettingsEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit CameraControlResponse_CurrentSettingsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_CameraControlResponse_CurrentSettingsEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 87,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull CameraControlResponse_CurrentSettingsEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class CameraControlCommand_ParametersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, double,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, double,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>;
  CameraControlCommand_ParametersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraControlCommand_ParametersEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit CameraControlCommand_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_CameraControlCommand_ParametersEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 81,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull CameraControlCommand_ParametersEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class WaypointAction final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.WaypointAction) */ {
 public:
  inline WaypointAction() : WaypointAction(nullptr) {}
  ~WaypointAction() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WaypointAction* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WaypointAction));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WaypointAction(::google::protobuf::internal::ConstantInitialized);

  inline WaypointAction(const WaypointAction& from) : WaypointAction(nullptr, from) {}
  inline WaypointAction(WaypointAction&& from) noexcept
      : WaypointAction(nullptr, ::std::move(from)) {}
  inline WaypointAction& operator=(const WaypointAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline WaypointAction& operator=(WaypointAction&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WaypointAction& default_instance() {
    return *reinterpret_cast<const WaypointAction*>(
        &_WaypointAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(WaypointAction& a, WaypointAction& b) { a.Swap(&b); }
  inline void Swap(WaypointAction* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WaypointAction* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WaypointAction* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WaypointAction>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WaypointAction& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WaypointAction& from) { WaypointAction::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WaypointAction* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.WaypointAction"; }

 protected:
  explicit WaypointAction(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  WaypointAction(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const WaypointAction& from);
  WaypointAction(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, WaypointAction&& from) noexcept
      : WaypointAction(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParametersFieldNumber = 3,
    kDurationFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // map<string, string> parameters = 3 [json_name = "parameters"];
  int parameters_size() const;
  private:
  int _internal_parameters_size() const;

  public:
  void clear_parameters() ;
  const ::google::protobuf::Map<std::string, std::string>& parameters() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_parameters();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_parameters() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_parameters();

  public:
  // .google.protobuf.Duration duration = 2 [json_name = "duration"];
  bool has_duration() const;
  void clear_duration() ;
  const ::google::protobuf::Duration& duration() const;
  [[nodiscard]] ::google::protobuf::Duration* PROTOBUF_NULLABLE release_duration();
  ::google::protobuf::Duration* PROTOBUF_NONNULL mutable_duration();
  void set_allocated_duration(::google::protobuf::Duration* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_duration(::google::protobuf::Duration* PROTOBUF_NULLABLE value);
  ::google::protobuf::Duration* PROTOBUF_NULLABLE unsafe_arena_release_duration();

  private:
  const ::google::protobuf::Duration& _internal_duration() const;
  ::google::protobuf::Duration* PROTOBUF_NONNULL _internal_mutable_duration();

  public:
  // .agricultural.robot.navigation.v1.WaypointActionType type = 1 [json_name = "type"];
  void clear_type() ;
  ::agricultural::robot::navigation::v1::WaypointActionType type() const;
  void set_type(::agricultural::robot::navigation::v1::WaypointActionType value);

  private:
  ::agricultural::robot::navigation::v1::WaypointActionType _internal_type() const;
  void _internal_set_type(::agricultural::robot::navigation::v1::WaypointActionType value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.WaypointAction)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 3,
                                   2, 66,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const WaypointAction& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<WaypointAction_ParametersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        parameters_;
    ::google::protobuf::Duration* PROTOBUF_NULLABLE duration_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull WaypointAction_class_data_;
// -------------------------------------------------------------------

class VideoStreamOptions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.VideoStreamOptions) */ {
 public:
  inline VideoStreamOptions() : VideoStreamOptions(nullptr) {}
  ~VideoStreamOptions() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(VideoStreamOptions* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(VideoStreamOptions));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VideoStreamOptions(::google::protobuf::internal::ConstantInitialized);

  inline VideoStreamOptions(const VideoStreamOptions& from) : VideoStreamOptions(nullptr, from) {}
  inline VideoStreamOptions(VideoStreamOptions&& from) noexcept
      : VideoStreamOptions(nullptr, ::std::move(from)) {}
  inline VideoStreamOptions& operator=(const VideoStreamOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline VideoStreamOptions& operator=(VideoStreamOptions&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VideoStreamOptions& default_instance() {
    return *reinterpret_cast<const VideoStreamOptions*>(
        &_VideoStreamOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 49;
  friend void swap(VideoStreamOptions& a, VideoStreamOptions& b) { a.Swap(&b); }
  inline void Swap(VideoStreamOptions* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VideoStreamOptions* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VideoStreamOptions* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<VideoStreamOptions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VideoStreamOptions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VideoStreamOptions& from) { VideoStreamOptions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(VideoStreamOptions* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.VideoStreamOptions"; }

 protected:
  explicit VideoStreamOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  VideoStreamOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const VideoStreamOptions& from);
  VideoStreamOptions(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, VideoStreamOptions&& from) noexcept
      : VideoStreamOptions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOverlaysFieldNumber = 6,
    kResolutionFieldNumber = 2,
    kFormatFieldNumber = 1,
    kFramerateFieldNumber = 3,
    kQualityFieldNumber = 4,
    kEnableCompressionFieldNumber = 5,
  };
  // repeated .agricultural.robot.navigation.v1.OverlayType overlays = 6 [json_name = "overlays"];
  int overlays_size() const;
  private:
  int _internal_overlays_size() const;

  public:
  void clear_overlays() ;
  public:
  ::agricultural::robot::navigation::v1::OverlayType overlays(int index) const;
  void set_overlays(int index, ::agricultural::robot::navigation::v1::OverlayType value);
  void add_overlays(::agricultural::robot::navigation::v1::OverlayType value);
  const ::google::protobuf::RepeatedField<int>& overlays() const;
  ::google::protobuf::RepeatedField<int>* PROTOBUF_NONNULL mutable_overlays();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_overlays() const;
  ::google::protobuf::RepeatedField<int>* PROTOBUF_NONNULL _internal_mutable_overlays();

  public:
  // .agricultural.robot.navigation.v1.Resolution resolution = 2 [json_name = "resolution"];
  bool has_resolution() const;
  void clear_resolution() ;
  const ::agricultural::robot::navigation::v1::Resolution& resolution() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE release_resolution();
  ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NONNULL mutable_resolution();
  void set_allocated_resolution(::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_resolution(::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE unsafe_arena_release_resolution();

  private:
  const ::agricultural::robot::navigation::v1::Resolution& _internal_resolution() const;
  ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NONNULL _internal_mutable_resolution();

  public:
  // .agricultural.robot.navigation.v1.VideoFormat format = 1 [json_name = "format"];
  void clear_format() ;
  ::agricultural::robot::navigation::v1::VideoFormat format() const;
  void set_format(::agricultural::robot::navigation::v1::VideoFormat value);

  private:
  ::agricultural::robot::navigation::v1::VideoFormat _internal_format() const;
  void _internal_set_format(::agricultural::robot::navigation::v1::VideoFormat value);

  public:
  // uint32 framerate = 3 [json_name = "framerate"];
  void clear_framerate() ;
  ::uint32_t framerate() const;
  void set_framerate(::uint32_t value);

  private:
  ::uint32_t _internal_framerate() const;
  void _internal_set_framerate(::uint32_t value);

  public:
  // .agricultural.robot.navigation.v1.VideoQuality quality = 4 [json_name = "quality"];
  void clear_quality() ;
  ::agricultural::robot::navigation::v1::VideoQuality quality() const;
  void set_quality(::agricultural::robot::navigation::v1::VideoQuality value);

  private:
  ::agricultural::robot::navigation::v1::VideoQuality _internal_quality() const;
  void _internal_set_quality(::agricultural::robot::navigation::v1::VideoQuality value);

  public:
  // bool enable_compression = 5 [json_name = "enableCompression"];
  void clear_enable_compression() ;
  bool enable_compression() const;
  void set_enable_compression(bool value);

  private:
  bool _internal_enable_compression() const;
  void _internal_set_enable_compression(bool value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.VideoStreamOptions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const VideoStreamOptions& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<int> overlays_;
    ::google::protobuf::internal::CachedSize _overlays_cached_byte_size_;
    ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE resolution_;
    int format_;
    ::uint32_t framerate_;
    int quality_;
    bool enable_compression_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull VideoStreamOptions_class_data_;
// -------------------------------------------------------------------

class Twist final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.Twist) */ {
 public:
  inline Twist() : Twist(nullptr) {}
  ~Twist() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Twist* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Twist));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Twist(::google::protobuf::internal::ConstantInitialized);

  inline Twist(const Twist& from) : Twist(nullptr, from) {}
  inline Twist(Twist&& from) noexcept
      : Twist(nullptr, ::std::move(from)) {}
  inline Twist& operator=(const Twist& from) {
    CopyFrom(from);
    return *this;
  }
  inline Twist& operator=(Twist&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Twist& default_instance() {
    return *reinterpret_cast<const Twist*>(
        &_Twist_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(Twist& a, Twist& b) { a.Swap(&b); }
  inline void Swap(Twist* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Twist* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Twist* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Twist>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Twist& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Twist& from) { Twist::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Twist* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.Twist"; }

 protected:
  explicit Twist(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Twist(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Twist& from);
  Twist(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Twist&& from) noexcept
      : Twist(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLinearFieldNumber = 1,
    kAngularFieldNumber = 2,
  };
  // .agricultural.robot.navigation.v1.Vector3 linear = 1 [json_name = "linear"];
  bool has_linear() const;
  void clear_linear() ;
  const ::agricultural::robot::navigation::v1::Vector3& linear() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NULLABLE release_linear();
  ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NONNULL mutable_linear();
  void set_allocated_linear(::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_linear(::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NULLABLE unsafe_arena_release_linear();

  private:
  const ::agricultural::robot::navigation::v1::Vector3& _internal_linear() const;
  ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NONNULL _internal_mutable_linear();

  public:
  // .agricultural.robot.navigation.v1.Vector3 angular = 2 [json_name = "angular"];
  bool has_angular() const;
  void clear_angular() ;
  const ::agricultural::robot::navigation::v1::Vector3& angular() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NULLABLE release_angular();
  ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NONNULL mutable_angular();
  void set_allocated_angular(::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_angular(::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NULLABLE unsafe_arena_release_angular();

  private:
  const ::agricultural::robot::navigation::v1::Vector3& _internal_angular() const;
  ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NONNULL _internal_mutable_angular();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.Twist)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Twist& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NULLABLE linear_;
    ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NULLABLE angular_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Twist_class_data_;
// -------------------------------------------------------------------

class SafetyViolation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.SafetyViolation) */ {
 public:
  inline SafetyViolation() : SafetyViolation(nullptr) {}
  ~SafetyViolation() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SafetyViolation* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SafetyViolation));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SafetyViolation(::google::protobuf::internal::ConstantInitialized);

  inline SafetyViolation(const SafetyViolation& from) : SafetyViolation(nullptr, from) {}
  inline SafetyViolation(SafetyViolation&& from) noexcept
      : SafetyViolation(nullptr, ::std::move(from)) {}
  inline SafetyViolation& operator=(const SafetyViolation& from) {
    CopyFrom(from);
    return *this;
  }
  inline SafetyViolation& operator=(SafetyViolation&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SafetyViolation& default_instance() {
    return *reinterpret_cast<const SafetyViolation*>(
        &_SafetyViolation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(SafetyViolation& a, SafetyViolation& b) { a.Swap(&b); }
  inline void Swap(SafetyViolation* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SafetyViolation* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SafetyViolation* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SafetyViolation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SafetyViolation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SafetyViolation& from) { SafetyViolation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SafetyViolation* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.SafetyViolation"; }

 protected:
  explicit SafetyViolation(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SafetyViolation(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SafetyViolation& from);
  SafetyViolation(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SafetyViolation&& from) noexcept
      : SafetyViolation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDescriptionFieldNumber = 2,
    kDetectedAtFieldNumber = 4,
    kSeverityFieldNumber = 3,
    kTypeFieldNumber = 1,
  };
  // string description = 2 [json_name = "description"];
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // .google.protobuf.Timestamp detected_at = 4 [json_name = "detectedAt"];
  bool has_detected_at() const;
  void clear_detected_at() ;
  const ::google::protobuf::Timestamp& detected_at() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_detected_at();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_detected_at();
  void set_allocated_detected_at(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_detected_at(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_detected_at();

  private:
  const ::google::protobuf::Timestamp& _internal_detected_at() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_detected_at();

  public:
  // double severity = 3 [json_name = "severity"];
  void clear_severity() ;
  double severity() const;
  void set_severity(double value);

  private:
  double _internal_severity() const;
  void _internal_set_severity(double value);

  public:
  // .agricultural.robot.navigation.v1.SafetyViolationType type = 1 [json_name = "type"];
  void clear_type() ;
  ::agricultural::robot::navigation::v1::SafetyViolationType type() const;
  void set_type(::agricultural::robot::navigation::v1::SafetyViolationType value);

  private:
  ::agricultural::robot::navigation::v1::SafetyViolationType _internal_type() const;
  void _internal_set_type(::agricultural::robot::navigation::v1::SafetyViolationType value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.SafetyViolation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 68,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SafetyViolation& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE detected_at_;
    double severity_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SafetyViolation_class_data_;
// -------------------------------------------------------------------

class Rectangle final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.Rectangle) */ {
 public:
  inline Rectangle() : Rectangle(nullptr) {}
  ~Rectangle() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Rectangle* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Rectangle));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Rectangle(::google::protobuf::internal::ConstantInitialized);

  inline Rectangle(const Rectangle& from) : Rectangle(nullptr, from) {}
  inline Rectangle(Rectangle&& from) noexcept
      : Rectangle(nullptr, ::std::move(from)) {}
  inline Rectangle& operator=(const Rectangle& from) {
    CopyFrom(from);
    return *this;
  }
  inline Rectangle& operator=(Rectangle&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Rectangle& default_instance() {
    return *reinterpret_cast<const Rectangle*>(
        &_Rectangle_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(Rectangle& a, Rectangle& b) { a.Swap(&b); }
  inline void Swap(Rectangle* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Rectangle* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Rectangle* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Rectangle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Rectangle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Rectangle& from) { Rectangle::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Rectangle* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.Rectangle"; }

 protected:
  explicit Rectangle(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Rectangle(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Rectangle& from);
  Rectangle(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Rectangle&& from) noexcept
      : Rectangle(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMinFieldNumber = 1,
    kMaxFieldNumber = 2,
  };
  // .agricultural.robot.navigation.v1.Point2D min = 1 [json_name = "min"];
  bool has_min() const;
  void clear_min() ;
  const ::agricultural::robot::navigation::v1::Point2D& min() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NULLABLE release_min();
  ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NONNULL mutable_min();
  void set_allocated_min(::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_min(::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NULLABLE unsafe_arena_release_min();

  private:
  const ::agricultural::robot::navigation::v1::Point2D& _internal_min() const;
  ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NONNULL _internal_mutable_min();

  public:
  // .agricultural.robot.navigation.v1.Point2D max = 2 [json_name = "max"];
  bool has_max() const;
  void clear_max() ;
  const ::agricultural::robot::navigation::v1::Point2D& max() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NULLABLE release_max();
  ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NONNULL mutable_max();
  void set_allocated_max(::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_max(::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NULLABLE unsafe_arena_release_max();

  private:
  const ::agricultural::robot::navigation::v1::Point2D& _internal_max() const;
  ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NONNULL _internal_mutable_max();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.Rectangle)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Rectangle& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NULLABLE min_;
    ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NULLABLE max_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Rectangle_class_data_;
// -------------------------------------------------------------------

class Pose final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.Pose) */ {
 public:
  inline Pose() : Pose(nullptr) {}
  ~Pose() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Pose* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Pose));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Pose(::google::protobuf::internal::ConstantInitialized);

  inline Pose(const Pose& from) : Pose(nullptr, from) {}
  inline Pose(Pose&& from) noexcept
      : Pose(nullptr, ::std::move(from)) {}
  inline Pose& operator=(const Pose& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pose& operator=(Pose&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Pose& default_instance() {
    return *reinterpret_cast<const Pose*>(
        &_Pose_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(Pose& a, Pose& b) { a.Swap(&b); }
  inline void Swap(Pose* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pose* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Pose* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Pose>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Pose& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Pose& from) { Pose::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Pose* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.Pose"; }

 protected:
  explicit Pose(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Pose(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Pose& from);
  Pose(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Pose&& from) noexcept
      : Pose(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionFieldNumber = 1,
    kOrientationFieldNumber = 2,
  };
  // .agricultural.robot.navigation.v1.Point3D position = 1 [json_name = "position"];
  bool has_position() const;
  void clear_position() ;
  const ::agricultural::robot::navigation::v1::Point3D& position() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::Point3D* PROTOBUF_NULLABLE release_position();
  ::agricultural::robot::navigation::v1::Point3D* PROTOBUF_NONNULL mutable_position();
  void set_allocated_position(::agricultural::robot::navigation::v1::Point3D* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_position(::agricultural::robot::navigation::v1::Point3D* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::Point3D* PROTOBUF_NULLABLE unsafe_arena_release_position();

  private:
  const ::agricultural::robot::navigation::v1::Point3D& _internal_position() const;
  ::agricultural::robot::navigation::v1::Point3D* PROTOBUF_NONNULL _internal_mutable_position();

  public:
  // .agricultural.robot.navigation.v1.Quaternion orientation = 2 [json_name = "orientation"];
  bool has_orientation() const;
  void clear_orientation() ;
  const ::agricultural::robot::navigation::v1::Quaternion& orientation() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::Quaternion* PROTOBUF_NULLABLE release_orientation();
  ::agricultural::robot::navigation::v1::Quaternion* PROTOBUF_NONNULL mutable_orientation();
  void set_allocated_orientation(::agricultural::robot::navigation::v1::Quaternion* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_orientation(::agricultural::robot::navigation::v1::Quaternion* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::Quaternion* PROTOBUF_NULLABLE unsafe_arena_release_orientation();

  private:
  const ::agricultural::robot::navigation::v1::Quaternion& _internal_orientation() const;
  ::agricultural::robot::navigation::v1::Quaternion* PROTOBUF_NONNULL _internal_mutable_orientation();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.Pose)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Pose& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::agricultural::robot::navigation::v1::Point3D* PROTOBUF_NULLABLE position_;
    ::agricultural::robot::navigation::v1::Quaternion* PROTOBUF_NULLABLE orientation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Pose_class_data_;
// -------------------------------------------------------------------

class NavigationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.NavigationResponse) */ {
 public:
  inline NavigationResponse() : NavigationResponse(nullptr) {}
  ~NavigationResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NavigationResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NavigationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NavigationResponse(::google::protobuf::internal::ConstantInitialized);

  inline NavigationResponse(const NavigationResponse& from) : NavigationResponse(nullptr, from) {}
  inline NavigationResponse(NavigationResponse&& from) noexcept
      : NavigationResponse(nullptr, ::std::move(from)) {}
  inline NavigationResponse& operator=(const NavigationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NavigationResponse& operator=(NavigationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NavigationResponse& default_instance() {
    return *reinterpret_cast<const NavigationResponse*>(
        &_NavigationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(NavigationResponse& a, NavigationResponse& b) { a.Swap(&b); }
  inline void Swap(NavigationResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NavigationResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NavigationResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NavigationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NavigationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NavigationResponse& from) { NavigationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NavigationResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.NavigationResponse"; }

 protected:
  explicit NavigationResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  NavigationResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NavigationResponse& from);
  NavigationResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, NavigationResponse&& from) noexcept
      : NavigationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kGoalIdFieldNumber = 3,
    kTimestampFieldNumber = 5,
    kSuccessFieldNumber = 1,
    kResultFieldNumber = 4,
  };
  // string message = 2 [json_name = "message"];
  void clear_message() ;
  const ::std::string& message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message();
  void set_allocated_message(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message();

  public:
  // string goal_id = 3 [json_name = "goalId"];
  void clear_goal_id() ;
  const ::std::string& goal_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_goal_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_goal_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_goal_id();
  void set_allocated_goal_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_goal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_goal_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_goal_id();

  public:
  // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_timestamp();

  public:
  // bool success = 1 [json_name = "success"];
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // .agricultural.robot.navigation.v1.NavigationResult result = 4 [json_name = "result"];
  void clear_result() ;
  ::agricultural::robot::navigation::v1::NavigationResult result() const;
  void set_result(::agricultural::robot::navigation::v1::NavigationResult value);

  private:
  ::agricultural::robot::navigation::v1::NavigationResult _internal_result() const;
  void _internal_set_result(::agricultural::robot::navigation::v1::NavigationResult value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.NavigationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 74,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const NavigationResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::internal::ArenaStringPtr goal_id_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE timestamp_;
    bool success_;
    int result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull NavigationResponse_class_data_;
// -------------------------------------------------------------------

class NavigationProgress final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.NavigationProgress) */ {
 public:
  inline NavigationProgress() : NavigationProgress(nullptr) {}
  ~NavigationProgress() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NavigationProgress* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NavigationProgress));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NavigationProgress(::google::protobuf::internal::ConstantInitialized);

  inline NavigationProgress(const NavigationProgress& from) : NavigationProgress(nullptr, from) {}
  inline NavigationProgress(NavigationProgress&& from) noexcept
      : NavigationProgress(nullptr, ::std::move(from)) {}
  inline NavigationProgress& operator=(const NavigationProgress& from) {
    CopyFrom(from);
    return *this;
  }
  inline NavigationProgress& operator=(NavigationProgress&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NavigationProgress& default_instance() {
    return *reinterpret_cast<const NavigationProgress*>(
        &_NavigationProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(NavigationProgress& a, NavigationProgress& b) { a.Swap(&b); }
  inline void Swap(NavigationProgress* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NavigationProgress* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NavigationProgress* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NavigationProgress>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NavigationProgress& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NavigationProgress& from) { NavigationProgress::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NavigationProgress* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.NavigationProgress"; }

 protected:
  explicit NavigationProgress(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  NavigationProgress(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NavigationProgress& from);
  NavigationProgress(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, NavigationProgress&& from) noexcept
      : NavigationProgress(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimeRemainingFieldNumber = 3,
    kTimeElapsedFieldNumber = 4,
    kDistanceRemainingFieldNumber = 1,
    kDistanceTraveledFieldNumber = 2,
    kCurrentWaypointIndexFieldNumber = 5,
    kTotalWaypointsFieldNumber = 6,
    kCompletionPercentageFieldNumber = 7,
  };
  // .google.protobuf.Duration time_remaining = 3 [json_name = "timeRemaining"];
  bool has_time_remaining() const;
  void clear_time_remaining() ;
  const ::google::protobuf::Duration& time_remaining() const;
  [[nodiscard]] ::google::protobuf::Duration* PROTOBUF_NULLABLE release_time_remaining();
  ::google::protobuf::Duration* PROTOBUF_NONNULL mutable_time_remaining();
  void set_allocated_time_remaining(::google::protobuf::Duration* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_time_remaining(::google::protobuf::Duration* PROTOBUF_NULLABLE value);
  ::google::protobuf::Duration* PROTOBUF_NULLABLE unsafe_arena_release_time_remaining();

  private:
  const ::google::protobuf::Duration& _internal_time_remaining() const;
  ::google::protobuf::Duration* PROTOBUF_NONNULL _internal_mutable_time_remaining();

  public:
  // .google.protobuf.Duration time_elapsed = 4 [json_name = "timeElapsed"];
  bool has_time_elapsed() const;
  void clear_time_elapsed() ;
  const ::google::protobuf::Duration& time_elapsed() const;
  [[nodiscard]] ::google::protobuf::Duration* PROTOBUF_NULLABLE release_time_elapsed();
  ::google::protobuf::Duration* PROTOBUF_NONNULL mutable_time_elapsed();
  void set_allocated_time_elapsed(::google::protobuf::Duration* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_time_elapsed(::google::protobuf::Duration* PROTOBUF_NULLABLE value);
  ::google::protobuf::Duration* PROTOBUF_NULLABLE unsafe_arena_release_time_elapsed();

  private:
  const ::google::protobuf::Duration& _internal_time_elapsed() const;
  ::google::protobuf::Duration* PROTOBUF_NONNULL _internal_mutable_time_elapsed();

  public:
  // double distance_remaining = 1 [json_name = "distanceRemaining"];
  void clear_distance_remaining() ;
  double distance_remaining() const;
  void set_distance_remaining(double value);

  private:
  double _internal_distance_remaining() const;
  void _internal_set_distance_remaining(double value);

  public:
  // double distance_traveled = 2 [json_name = "distanceTraveled"];
  void clear_distance_traveled() ;
  double distance_traveled() const;
  void set_distance_traveled(double value);

  private:
  double _internal_distance_traveled() const;
  void _internal_set_distance_traveled(double value);

  public:
  // uint32 current_waypoint_index = 5 [json_name = "currentWaypointIndex"];
  void clear_current_waypoint_index() ;
  ::uint32_t current_waypoint_index() const;
  void set_current_waypoint_index(::uint32_t value);

  private:
  ::uint32_t _internal_current_waypoint_index() const;
  void _internal_set_current_waypoint_index(::uint32_t value);

  public:
  // uint32 total_waypoints = 6 [json_name = "totalWaypoints"];
  void clear_total_waypoints() ;
  ::uint32_t total_waypoints() const;
  void set_total_waypoints(::uint32_t value);

  private:
  ::uint32_t _internal_total_waypoints() const;
  void _internal_set_total_waypoints(::uint32_t value);

  public:
  // double completion_percentage = 7 [json_name = "completionPercentage"];
  void clear_completion_percentage() ;
  double completion_percentage() const;
  void set_completion_percentage(double value);

  private:
  double _internal_completion_percentage() const;
  void _internal_set_completion_percentage(double value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.NavigationProgress)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const NavigationProgress& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Duration* PROTOBUF_NULLABLE time_remaining_;
    ::google::protobuf::Duration* PROTOBUF_NULLABLE time_elapsed_;
    double distance_remaining_;
    double distance_traveled_;
    ::uint32_t current_waypoint_index_;
    ::uint32_t total_waypoints_;
    double completion_percentage_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull NavigationProgress_class_data_;
// -------------------------------------------------------------------

class NavigationError final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.NavigationError) */ {
 public:
  inline NavigationError() : NavigationError(nullptr) {}
  ~NavigationError() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NavigationError* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NavigationError));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NavigationError(::google::protobuf::internal::ConstantInitialized);

  inline NavigationError(const NavigationError& from) : NavigationError(nullptr, from) {}
  inline NavigationError(NavigationError&& from) noexcept
      : NavigationError(nullptr, ::std::move(from)) {}
  inline NavigationError& operator=(const NavigationError& from) {
    CopyFrom(from);
    return *this;
  }
  inline NavigationError& operator=(NavigationError&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NavigationError& default_instance() {
    return *reinterpret_cast<const NavigationError*>(
        &_NavigationError_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(NavigationError& a, NavigationError& b) { a.Swap(&b); }
  inline void Swap(NavigationError* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NavigationError* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NavigationError* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NavigationError>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NavigationError& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NavigationError& from) { NavigationError::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NavigationError* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.NavigationError"; }

 protected:
  explicit NavigationError(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  NavigationError(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NavigationError& from);
  NavigationError(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, NavigationError&& from) noexcept
      : NavigationError(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuggestedActionsFieldNumber = 5,
    kDescriptionFieldNumber = 2,
    kOccurredAtFieldNumber = 3,
    kCodeFieldNumber = 1,
    kRecoverableFieldNumber = 4,
  };
  // repeated string suggested_actions = 5 [json_name = "suggestedActions"];
  int suggested_actions_size() const;
  private:
  int _internal_suggested_actions_size() const;

  public:
  void clear_suggested_actions() ;
  const ::std::string& suggested_actions(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_suggested_actions(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_suggested_actions(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_suggested_actions();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_suggested_actions(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& suggested_actions() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_suggested_actions();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_suggested_actions() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_suggested_actions();

  public:
  // string description = 2 [json_name = "description"];
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // .google.protobuf.Timestamp occurred_at = 3 [json_name = "occurredAt"];
  bool has_occurred_at() const;
  void clear_occurred_at() ;
  const ::google::protobuf::Timestamp& occurred_at() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_occurred_at();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_occurred_at();
  void set_allocated_occurred_at(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_occurred_at(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_occurred_at();

  private:
  const ::google::protobuf::Timestamp& _internal_occurred_at() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_occurred_at();

  public:
  // .agricultural.robot.navigation.v1.NavigationErrorCode code = 1 [json_name = "code"];
  void clear_code() ;
  ::agricultural::robot::navigation::v1::NavigationErrorCode code() const;
  void set_code(::agricultural::robot::navigation::v1::NavigationErrorCode value);

  private:
  ::agricultural::robot::navigation::v1::NavigationErrorCode _internal_code() const;
  void _internal_set_code(::agricultural::robot::navigation::v1::NavigationErrorCode value);

  public:
  // bool recoverable = 4 [json_name = "recoverable"];
  void clear_recoverable() ;
  bool recoverable() const;
  void set_recoverable(bool value);

  private:
  bool _internal_recoverable() const;
  void _internal_set_recoverable(bool value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.NavigationError)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 85,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const NavigationError& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> suggested_actions_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE occurred_at_;
    int code_;
    bool recoverable_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull NavigationError_class_data_;
// -------------------------------------------------------------------

class LocalizationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.LocalizationResponse) */ {
 public:
  inline LocalizationResponse() : LocalizationResponse(nullptr) {}
  ~LocalizationResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LocalizationResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LocalizationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LocalizationResponse(::google::protobuf::internal::ConstantInitialized);

  inline LocalizationResponse(const LocalizationResponse& from) : LocalizationResponse(nullptr, from) {}
  inline LocalizationResponse(LocalizationResponse&& from) noexcept
      : LocalizationResponse(nullptr, ::std::move(from)) {}
  inline LocalizationResponse& operator=(const LocalizationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocalizationResponse& operator=(LocalizationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LocalizationResponse& default_instance() {
    return *reinterpret_cast<const LocalizationResponse*>(
        &_LocalizationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 63;
  friend void swap(LocalizationResponse& a, LocalizationResponse& b) { a.Swap(&b); }
  inline void Swap(LocalizationResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocalizationResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LocalizationResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LocalizationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LocalizationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LocalizationResponse& from) { LocalizationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LocalizationResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.LocalizationResponse"; }

 protected:
  explicit LocalizationResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LocalizationResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LocalizationResponse& from);
  LocalizationResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LocalizationResponse&& from) noexcept
      : LocalizationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kTimestampFieldNumber = 4,
    kSuccessFieldNumber = 1,
    kStatusFieldNumber = 3,
  };
  // string message = 2 [json_name = "message"];
  void clear_message() ;
  const ::std::string& message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message();
  void set_allocated_message(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message();

  public:
  // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_timestamp();

  public:
  // bool success = 1 [json_name = "success"];
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // .agricultural.robot.navigation.v1.LocalizationStatus status = 3 [json_name = "status"];
  void clear_status() ;
  ::agricultural::robot::navigation::v1::LocalizationStatus status() const;
  void set_status(::agricultural::robot::navigation::v1::LocalizationStatus value);

  private:
  ::agricultural::robot::navigation::v1::LocalizationStatus _internal_status() const;
  void _internal_set_status(::agricultural::robot::navigation::v1::LocalizationStatus value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.LocalizationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 69,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LocalizationResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE timestamp_;
    bool success_;
    int status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LocalizationResponse_class_data_;
// -------------------------------------------------------------------

class LocalizationMetrics final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.LocalizationMetrics) */ {
 public:
  inline LocalizationMetrics() : LocalizationMetrics(nullptr) {}
  ~LocalizationMetrics() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LocalizationMetrics* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LocalizationMetrics));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LocalizationMetrics(::google::protobuf::internal::ConstantInitialized);

  inline LocalizationMetrics(const LocalizationMetrics& from) : LocalizationMetrics(nullptr, from) {}
  inline LocalizationMetrics(LocalizationMetrics&& from) noexcept
      : LocalizationMetrics(nullptr, ::std::move(from)) {}
  inline LocalizationMetrics& operator=(const LocalizationMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocalizationMetrics& operator=(LocalizationMetrics&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LocalizationMetrics& default_instance() {
    return *reinterpret_cast<const LocalizationMetrics*>(
        &_LocalizationMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 65;
  friend void swap(LocalizationMetrics& a, LocalizationMetrics& b) { a.Swap(&b); }
  inline void Swap(LocalizationMetrics* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocalizationMetrics* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LocalizationMetrics* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LocalizationMetrics>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LocalizationMetrics& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LocalizationMetrics& from) { LocalizationMetrics::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LocalizationMetrics* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.LocalizationMetrics"; }

 protected:
  explicit LocalizationMetrics(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LocalizationMetrics(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LocalizationMetrics& from);
  LocalizationMetrics(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LocalizationMetrics&& from) noexcept
      : LocalizationMetrics(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpdateFrequencyFieldNumber = 4,
    kEffectiveSampleSizeFieldNumber = 2,
    kConvergenceRateFieldNumber = 3,
    kParticleCountFieldNumber = 1,
    kSensorUpdatesCountFieldNumber = 5,
    kMapMatchScoreFieldNumber = 6,
  };
  // .google.protobuf.Duration update_frequency = 4 [json_name = "updateFrequency"];
  bool has_update_frequency() const;
  void clear_update_frequency() ;
  const ::google::protobuf::Duration& update_frequency() const;
  [[nodiscard]] ::google::protobuf::Duration* PROTOBUF_NULLABLE release_update_frequency();
  ::google::protobuf::Duration* PROTOBUF_NONNULL mutable_update_frequency();
  void set_allocated_update_frequency(::google::protobuf::Duration* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_update_frequency(::google::protobuf::Duration* PROTOBUF_NULLABLE value);
  ::google::protobuf::Duration* PROTOBUF_NULLABLE unsafe_arena_release_update_frequency();

  private:
  const ::google::protobuf::Duration& _internal_update_frequency() const;
  ::google::protobuf::Duration* PROTOBUF_NONNULL _internal_mutable_update_frequency();

  public:
  // double effective_sample_size = 2 [json_name = "effectiveSampleSize"];
  void clear_effective_sample_size() ;
  double effective_sample_size() const;
  void set_effective_sample_size(double value);

  private:
  double _internal_effective_sample_size() const;
  void _internal_set_effective_sample_size(double value);

  public:
  // double convergence_rate = 3 [json_name = "convergenceRate"];
  void clear_convergence_rate() ;
  double convergence_rate() const;
  void set_convergence_rate(double value);

  private:
  double _internal_convergence_rate() const;
  void _internal_set_convergence_rate(double value);

  public:
  // uint32 particle_count = 1 [json_name = "particleCount"];
  void clear_particle_count() ;
  ::uint32_t particle_count() const;
  void set_particle_count(::uint32_t value);

  private:
  ::uint32_t _internal_particle_count() const;
  void _internal_set_particle_count(::uint32_t value);

  public:
  // uint32 sensor_updates_count = 5 [json_name = "sensorUpdatesCount"];
  void clear_sensor_updates_count() ;
  ::uint32_t sensor_updates_count() const;
  void set_sensor_updates_count(::uint32_t value);

  private:
  ::uint32_t _internal_sensor_updates_count() const;
  void _internal_set_sensor_updates_count(::uint32_t value);

  public:
  // double map_match_score = 6 [json_name = "mapMatchScore"];
  void clear_map_match_score() ;
  double map_match_score() const;
  void set_map_match_score(double value);

  private:
  double _internal_map_match_score() const;
  void _internal_set_map_match_score(double value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.LocalizationMetrics)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LocalizationMetrics& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Duration* PROTOBUF_NULLABLE update_frequency_;
    double effective_sample_size_;
    double convergence_rate_;
    ::uint32_t particle_count_;
    ::uint32_t sensor_updates_count_;
    double map_match_score_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LocalizationMetrics_class_data_;
// -------------------------------------------------------------------

class JoystickInput final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.JoystickInput) */ {
 public:
  inline JoystickInput() : JoystickInput(nullptr) {}
  ~JoystickInput() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(JoystickInput* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(JoystickInput));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JoystickInput(::google::protobuf::internal::ConstantInitialized);

  inline JoystickInput(const JoystickInput& from) : JoystickInput(nullptr, from) {}
  inline JoystickInput(JoystickInput&& from) noexcept
      : JoystickInput(nullptr, ::std::move(from)) {}
  inline JoystickInput& operator=(const JoystickInput& from) {
    CopyFrom(from);
    return *this;
  }
  inline JoystickInput& operator=(JoystickInput&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JoystickInput& default_instance() {
    return *reinterpret_cast<const JoystickInput*>(
        &_JoystickInput_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(JoystickInput& a, JoystickInput& b) { a.Swap(&b); }
  inline void Swap(JoystickInput* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JoystickInput* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JoystickInput* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<JoystickInput>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JoystickInput& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const JoystickInput& from) { JoystickInput::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(JoystickInput* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.JoystickInput"; }

 protected:
  explicit JoystickInput(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  JoystickInput(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const JoystickInput& from);
  JoystickInput(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, JoystickInput&& from) noexcept
      : JoystickInput(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAxesFieldNumber = 1,
    kButtonsFieldNumber = 2,
    kControllerIdFieldNumber = 4,
    kTimestampFieldNumber = 3,
  };
  // repeated float axes = 1 [json_name = "axes"];
  int axes_size() const;
  private:
  int _internal_axes_size() const;

  public:
  void clear_axes() ;
  float axes(int index) const;
  void set_axes(int index, float value);
  void add_axes(float value);
  const ::google::protobuf::RepeatedField<float>& axes() const;
  ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL mutable_axes();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_axes() const;
  ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL _internal_mutable_axes();

  public:
  // repeated bool buttons = 2 [json_name = "buttons"];
  int buttons_size() const;
  private:
  int _internal_buttons_size() const;

  public:
  void clear_buttons() ;
  bool buttons(int index) const;
  void set_buttons(int index, bool value);
  void add_buttons(bool value);
  const ::google::protobuf::RepeatedField<bool>& buttons() const;
  ::google::protobuf::RepeatedField<bool>* PROTOBUF_NONNULL mutable_buttons();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_buttons() const;
  ::google::protobuf::RepeatedField<bool>* PROTOBUF_NONNULL _internal_mutable_buttons();

  public:
  // string controller_id = 4 [json_name = "controllerId"];
  void clear_controller_id() ;
  const ::std::string& controller_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_controller_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_controller_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_controller_id();
  void set_allocated_controller_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_controller_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_controller_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_controller_id();

  public:
  // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_timestamp();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.JoystickInput)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 68,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const JoystickInput& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<float> axes_;
    ::google::protobuf::RepeatedField<bool> buttons_;
    ::google::protobuf::internal::ArenaStringPtr controller_id_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull JoystickInput_class_data_;
// -------------------------------------------------------------------

class CameraInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.CameraInfo) */ {
 public:
  inline CameraInfo() : CameraInfo(nullptr) {}
  ~CameraInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraInfo* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraInfo(::google::protobuf::internal::ConstantInitialized);

  inline CameraInfo(const CameraInfo& from) : CameraInfo(nullptr, from) {}
  inline CameraInfo(CameraInfo&& from) noexcept
      : CameraInfo(nullptr, ::std::move(from)) {}
  inline CameraInfo& operator=(const CameraInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraInfo& operator=(CameraInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraInfo& default_instance() {
    return *reinterpret_cast<const CameraInfo*>(
        &_CameraInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 47;
  friend void swap(CameraInfo& a, CameraInfo& b) { a.Swap(&b); }
  inline void Swap(CameraInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraInfo* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CameraInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CameraInfo& from) { CameraInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraInfo* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.CameraInfo"; }

 protected:
  explicit CameraInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CameraInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CameraInfo& from);
  CameraInfo(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CameraInfo&& from) noexcept
      : CameraInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSupportedFormatsFieldNumber = 10,
    kCameraIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kFrameIdFieldNumber = 8,
    kResolutionFieldNumber = 4,
    kIntrinsicsFieldNumber = 6,
    kDistortionFieldNumber = 7,
    kFramerateFieldNumber = 5,
    kTypeFieldNumber = 3,
    kStatusFieldNumber = 9,
  };
  // repeated .agricultural.robot.navigation.v1.VideoFormat supported_formats = 10 [json_name = "supportedFormats"];
  int supported_formats_size() const;
  private:
  int _internal_supported_formats_size() const;

  public:
  void clear_supported_formats() ;
  public:
  ::agricultural::robot::navigation::v1::VideoFormat supported_formats(int index) const;
  void set_supported_formats(int index, ::agricultural::robot::navigation::v1::VideoFormat value);
  void add_supported_formats(::agricultural::robot::navigation::v1::VideoFormat value);
  const ::google::protobuf::RepeatedField<int>& supported_formats() const;
  ::google::protobuf::RepeatedField<int>* PROTOBUF_NONNULL mutable_supported_formats();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_supported_formats() const;
  ::google::protobuf::RepeatedField<int>* PROTOBUF_NONNULL _internal_mutable_supported_formats();

  public:
  // string camera_id = 1 [json_name = "cameraId"];
  void clear_camera_id() ;
  const ::std::string& camera_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_camera_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_camera_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_camera_id();
  void set_allocated_camera_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_camera_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_camera_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_camera_id();

  public:
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string frame_id = 8 [json_name = "frameId"];
  void clear_frame_id() ;
  const ::std::string& frame_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_frame_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_frame_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_frame_id();
  void set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_frame_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_frame_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_frame_id();

  public:
  // .agricultural.robot.navigation.v1.Resolution resolution = 4 [json_name = "resolution"];
  bool has_resolution() const;
  void clear_resolution() ;
  const ::agricultural::robot::navigation::v1::Resolution& resolution() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE release_resolution();
  ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NONNULL mutable_resolution();
  void set_allocated_resolution(::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_resolution(::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE unsafe_arena_release_resolution();

  private:
  const ::agricultural::robot::navigation::v1::Resolution& _internal_resolution() const;
  ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NONNULL _internal_mutable_resolution();

  public:
  // .agricultural.robot.navigation.v1.CameraIntrinsics intrinsics = 6 [json_name = "intrinsics"];
  bool has_intrinsics() const;
  void clear_intrinsics() ;
  const ::agricultural::robot::navigation::v1::CameraIntrinsics& intrinsics() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::CameraIntrinsics* PROTOBUF_NULLABLE release_intrinsics();
  ::agricultural::robot::navigation::v1::CameraIntrinsics* PROTOBUF_NONNULL mutable_intrinsics();
  void set_allocated_intrinsics(::agricultural::robot::navigation::v1::CameraIntrinsics* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_intrinsics(::agricultural::robot::navigation::v1::CameraIntrinsics* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::CameraIntrinsics* PROTOBUF_NULLABLE unsafe_arena_release_intrinsics();

  private:
  const ::agricultural::robot::navigation::v1::CameraIntrinsics& _internal_intrinsics() const;
  ::agricultural::robot::navigation::v1::CameraIntrinsics* PROTOBUF_NONNULL _internal_mutable_intrinsics();

  public:
  // .agricultural.robot.navigation.v1.CameraDistortion distortion = 7 [json_name = "distortion"];
  bool has_distortion() const;
  void clear_distortion() ;
  const ::agricultural::robot::navigation::v1::CameraDistortion& distortion() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::CameraDistortion* PROTOBUF_NULLABLE release_distortion();
  ::agricultural::robot::navigation::v1::CameraDistortion* PROTOBUF_NONNULL mutable_distortion();
  void set_allocated_distortion(::agricultural::robot::navigation::v1::CameraDistortion* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_distortion(::agricultural::robot::navigation::v1::CameraDistortion* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::CameraDistortion* PROTOBUF_NULLABLE unsafe_arena_release_distortion();

  private:
  const ::agricultural::robot::navigation::v1::CameraDistortion& _internal_distortion() const;
  ::agricultural::robot::navigation::v1::CameraDistortion* PROTOBUF_NONNULL _internal_mutable_distortion();

  public:
  // double framerate = 5 [json_name = "framerate"];
  void clear_framerate() ;
  double framerate() const;
  void set_framerate(double value);

  private:
  double _internal_framerate() const;
  void _internal_set_framerate(double value);

  public:
  // .agricultural.robot.navigation.v1.CameraType type = 3 [json_name = "type"];
  void clear_type() ;
  ::agricultural::robot::navigation::v1::CameraType type() const;
  void set_type(::agricultural::robot::navigation::v1::CameraType value);

  private:
  ::agricultural::robot::navigation::v1::CameraType _internal_type() const;
  void _internal_set_type(::agricultural::robot::navigation::v1::CameraType value);

  public:
  // .agricultural.robot.navigation.v1.CameraStatus status = 9 [json_name = "status"];
  void clear_status() ;
  ::agricultural::robot::navigation::v1::CameraStatus status() const;
  void set_status(::agricultural::robot::navigation::v1::CameraStatus value);

  private:
  ::agricultural::robot::navigation::v1::CameraStatus _internal_status() const;
  void _internal_set_status(::agricultural::robot::navigation::v1::CameraStatus value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.CameraInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 10,
                                   3, 81,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CameraInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<int> supported_formats_;
    ::google::protobuf::internal::CachedSize _supported_formats_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr camera_id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr frame_id_;
    ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE resolution_;
    ::agricultural::robot::navigation::v1::CameraIntrinsics* PROTOBUF_NULLABLE intrinsics_;
    ::agricultural::robot::navigation::v1::CameraDistortion* PROTOBUF_NULLABLE distortion_;
    double framerate_;
    int type_;
    int status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CameraInfo_class_data_;
// -------------------------------------------------------------------

class CameraControlResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.CameraControlResponse) */ {
 public:
  inline CameraControlResponse() : CameraControlResponse(nullptr) {}
  ~CameraControlResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraControlResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraControlResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraControlResponse(::google::protobuf::internal::ConstantInitialized);

  inline CameraControlResponse(const CameraControlResponse& from) : CameraControlResponse(nullptr, from) {}
  inline CameraControlResponse(CameraControlResponse&& from) noexcept
      : CameraControlResponse(nullptr, ::std::move(from)) {}
  inline CameraControlResponse& operator=(const CameraControlResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraControlResponse& operator=(CameraControlResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraControlResponse& default_instance() {
    return *reinterpret_cast<const CameraControlResponse*>(
        &_CameraControlResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 53;
  friend void swap(CameraControlResponse& a, CameraControlResponse& b) { a.Swap(&b); }
  inline void Swap(CameraControlResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraControlResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraControlResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraControlResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CameraControlResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CameraControlResponse& from) { CameraControlResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraControlResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.CameraControlResponse"; }

 protected:
  explicit CameraControlResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CameraControlResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CameraControlResponse& from);
  CameraControlResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CameraControlResponse&& from) noexcept
      : CameraControlResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCurrentSettingsFieldNumber = 3,
    kMessageFieldNumber = 2,
    kTimestampFieldNumber = 4,
    kSuccessFieldNumber = 1,
  };
  // map<string, double> current_settings = 3 [json_name = "currentSettings"];
  int current_settings_size() const;
  private:
  int _internal_current_settings_size() const;

  public:
  void clear_current_settings() ;
  const ::google::protobuf::Map<std::string, double>& current_settings() const;
  ::google::protobuf::Map<std::string, double>* PROTOBUF_NONNULL mutable_current_settings();

  private:
  const ::google::protobuf::Map<std::string, double>& _internal_current_settings() const;
  ::google::protobuf::Map<std::string, double>* PROTOBUF_NONNULL _internal_mutable_current_settings();

  public:
  // string message = 2 [json_name = "message"];
  void clear_message() ;
  const ::std::string& message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message();
  void set_allocated_message(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message();

  public:
  // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_timestamp();

  public:
  // bool success = 1 [json_name = "success"];
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.CameraControlResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   2, 86,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CameraControlResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<CameraControlResponse_CurrentSettingsEntry_DoNotUse, std::string, double,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>
        current_settings_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE timestamp_;
    bool success_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CameraControlResponse_class_data_;
// -------------------------------------------------------------------

class CameraControlCommand final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.CameraControlCommand) */ {
 public:
  inline CameraControlCommand() : CameraControlCommand(nullptr) {}
  ~CameraControlCommand() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraControlCommand* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraControlCommand));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraControlCommand(::google::protobuf::internal::ConstantInitialized);

  inline CameraControlCommand(const CameraControlCommand& from) : CameraControlCommand(nullptr, from) {}
  inline CameraControlCommand(CameraControlCommand&& from) noexcept
      : CameraControlCommand(nullptr, ::std::move(from)) {}
  inline CameraControlCommand& operator=(const CameraControlCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraControlCommand& operator=(CameraControlCommand&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraControlCommand& default_instance() {
    return *reinterpret_cast<const CameraControlCommand*>(
        &_CameraControlCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 51;
  friend void swap(CameraControlCommand& a, CameraControlCommand& b) { a.Swap(&b); }
  inline void Swap(CameraControlCommand* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraControlCommand* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraControlCommand* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraControlCommand>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CameraControlCommand& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CameraControlCommand& from) { CameraControlCommand::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraControlCommand* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.CameraControlCommand"; }

 protected:
  explicit CameraControlCommand(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CameraControlCommand(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CameraControlCommand& from);
  CameraControlCommand(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CameraControlCommand&& from) noexcept
      : CameraControlCommand(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParametersFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // map<string, double> parameters = 2 [json_name = "parameters"];
  int parameters_size() const;
  private:
  int _internal_parameters_size() const;

  public:
  void clear_parameters() ;
  const ::google::protobuf::Map<std::string, double>& parameters() const;
  ::google::protobuf::Map<std::string, double>* PROTOBUF_NONNULL mutable_parameters();

  private:
  const ::google::protobuf::Map<std::string, double>& _internal_parameters() const;
  ::google::protobuf::Map<std::string, double>* PROTOBUF_NONNULL _internal_mutable_parameters();

  public:
  // .agricultural.robot.navigation.v1.CameraControlType type = 1 [json_name = "type"];
  void clear_type() ;
  ::agricultural::robot::navigation::v1::CameraControlType type() const;
  void set_type(::agricultural::robot::navigation::v1::CameraControlType value);

  private:
  ::agricultural::robot::navigation::v1::CameraControlType _internal_type() const;
  void _internal_set_type(::agricultural::robot::navigation::v1::CameraControlType value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.CameraControlCommand)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 2,
                                   1, 72,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CameraControlCommand& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<CameraControlCommand_ParametersEntry_DoNotUse, std::string, double,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>
        parameters_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CameraControlCommand_class_data_;
// -------------------------------------------------------------------

class VelocityResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.VelocityResponse) */ {
 public:
  inline VelocityResponse() : VelocityResponse(nullptr) {}
  ~VelocityResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(VelocityResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(VelocityResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VelocityResponse(::google::protobuf::internal::ConstantInitialized);

  inline VelocityResponse(const VelocityResponse& from) : VelocityResponse(nullptr, from) {}
  inline VelocityResponse(VelocityResponse&& from) noexcept
      : VelocityResponse(nullptr, ::std::move(from)) {}
  inline VelocityResponse& operator=(const VelocityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline VelocityResponse& operator=(VelocityResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VelocityResponse& default_instance() {
    return *reinterpret_cast<const VelocityResponse*>(
        &_VelocityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(VelocityResponse& a, VelocityResponse& b) { a.Swap(&b); }
  inline void Swap(VelocityResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VelocityResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VelocityResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<VelocityResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VelocityResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VelocityResponse& from) { VelocityResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(VelocityResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.VelocityResponse"; }

 protected:
  explicit VelocityResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  VelocityResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const VelocityResponse& from);
  VelocityResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, VelocityResponse&& from) noexcept
      : VelocityResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSafetyViolationsFieldNumber = 5,
    kMessageFieldNumber = 2,
    kActualVelocityFieldNumber = 3,
    kTimestampFieldNumber = 4,
    kSuccessFieldNumber = 1,
  };
  // repeated .agricultural.robot.navigation.v1.SafetyViolation safety_violations = 5 [json_name = "safetyViolations"];
  int safety_violations_size() const;
  private:
  int _internal_safety_violations_size() const;

  public:
  void clear_safety_violations() ;
  ::agricultural::robot::navigation::v1::SafetyViolation* PROTOBUF_NONNULL mutable_safety_violations(int index);
  ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::SafetyViolation>* PROTOBUF_NONNULL mutable_safety_violations();

  private:
  const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::SafetyViolation>& _internal_safety_violations() const;
  ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::SafetyViolation>* PROTOBUF_NONNULL _internal_mutable_safety_violations();
  public:
  const ::agricultural::robot::navigation::v1::SafetyViolation& safety_violations(int index) const;
  ::agricultural::robot::navigation::v1::SafetyViolation* PROTOBUF_NONNULL add_safety_violations();
  const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::SafetyViolation>& safety_violations() const;
  // string message = 2 [json_name = "message"];
  void clear_message() ;
  const ::std::string& message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message();
  void set_allocated_message(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message();

  public:
  // .agricultural.robot.navigation.v1.Twist actual_velocity = 3 [json_name = "actualVelocity"];
  bool has_actual_velocity() const;
  void clear_actual_velocity() ;
  const ::agricultural::robot::navigation::v1::Twist& actual_velocity() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE release_actual_velocity();
  ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NONNULL mutable_actual_velocity();
  void set_allocated_actual_velocity(::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_actual_velocity(::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE unsafe_arena_release_actual_velocity();

  private:
  const ::agricultural::robot::navigation::v1::Twist& _internal_actual_velocity() const;
  ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NONNULL _internal_mutable_actual_velocity();

  public:
  // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_timestamp();

  public:
  // bool success = 1 [json_name = "success"];
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.VelocityResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   3, 65,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const VelocityResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::agricultural::robot::navigation::v1::SafetyViolation > safety_violations_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE actual_velocity_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE timestamp_;
    bool success_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull VelocityResponse_class_data_;
// -------------------------------------------------------------------

class VelocityCommand final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.VelocityCommand) */ {
 public:
  inline VelocityCommand() : VelocityCommand(nullptr) {}
  ~VelocityCommand() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(VelocityCommand* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(VelocityCommand));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VelocityCommand(::google::protobuf::internal::ConstantInitialized);

  inline VelocityCommand(const VelocityCommand& from) : VelocityCommand(nullptr, from) {}
  inline VelocityCommand(VelocityCommand&& from) noexcept
      : VelocityCommand(nullptr, ::std::move(from)) {}
  inline VelocityCommand& operator=(const VelocityCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline VelocityCommand& operator=(VelocityCommand&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VelocityCommand& default_instance() {
    return *reinterpret_cast<const VelocityCommand*>(
        &_VelocityCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(VelocityCommand& a, VelocityCommand& b) { a.Swap(&b); }
  inline void Swap(VelocityCommand* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VelocityCommand* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VelocityCommand* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<VelocityCommand>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VelocityCommand& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VelocityCommand& from) { VelocityCommand::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(VelocityCommand* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.VelocityCommand"; }

 protected:
  explicit VelocityCommand(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  VelocityCommand(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const VelocityCommand& from);
  VelocityCommand(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, VelocityCommand&& from) noexcept
      : VelocityCommand(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
    kCmdVelFieldNumber = 2,
    kTimeoutFieldNumber = 3,
    kJoystickInputFieldNumber = 4,
    kSafetyFieldNumber = 5,
    kControlModeFieldNumber = 6,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // .agricultural.robot.navigation.v1.Twist cmd_vel = 2 [json_name = "cmdVel"];
  bool has_cmd_vel() const;
  void clear_cmd_vel() ;
  const ::agricultural::robot::navigation::v1::Twist& cmd_vel() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE release_cmd_vel();
  ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NONNULL mutable_cmd_vel();
  void set_allocated_cmd_vel(::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_cmd_vel(::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE unsafe_arena_release_cmd_vel();

  private:
  const ::agricultural::robot::navigation::v1::Twist& _internal_cmd_vel() const;
  ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NONNULL _internal_mutable_cmd_vel();

  public:
  // .google.protobuf.Duration timeout = 3 [json_name = "timeout"];
  bool has_timeout() const;
  void clear_timeout() ;
  const ::google::protobuf::Duration& timeout() const;
  [[nodiscard]] ::google::protobuf::Duration* PROTOBUF_NULLABLE release_timeout();
  ::google::protobuf::Duration* PROTOBUF_NONNULL mutable_timeout();
  void set_allocated_timeout(::google::protobuf::Duration* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_timeout(::google::protobuf::Duration* PROTOBUF_NULLABLE value);
  ::google::protobuf::Duration* PROTOBUF_NULLABLE unsafe_arena_release_timeout();

  private:
  const ::google::protobuf::Duration& _internal_timeout() const;
  ::google::protobuf::Duration* PROTOBUF_NONNULL _internal_mutable_timeout();

  public:
  // .agricultural.robot.navigation.v1.JoystickInput joystick_input = 4 [json_name = "joystickInput"];
  bool has_joystick_input() const;
  void clear_joystick_input() ;
  const ::agricultural::robot::navigation::v1::JoystickInput& joystick_input() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::JoystickInput* PROTOBUF_NULLABLE release_joystick_input();
  ::agricultural::robot::navigation::v1::JoystickInput* PROTOBUF_NONNULL mutable_joystick_input();
  void set_allocated_joystick_input(::agricultural::robot::navigation::v1::JoystickInput* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_joystick_input(::agricultural::robot::navigation::v1::JoystickInput* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::JoystickInput* PROTOBUF_NULLABLE unsafe_arena_release_joystick_input();

  private:
  const ::agricultural::robot::navigation::v1::JoystickInput& _internal_joystick_input() const;
  ::agricultural::robot::navigation::v1::JoystickInput* PROTOBUF_NONNULL _internal_mutable_joystick_input();

  public:
  // .agricultural.robot.navigation.v1.SafetyConstraints safety = 5 [json_name = "safety"];
  bool has_safety() const;
  void clear_safety() ;
  const ::agricultural::robot::navigation::v1::SafetyConstraints& safety() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::SafetyConstraints* PROTOBUF_NULLABLE release_safety();
  ::agricultural::robot::navigation::v1::SafetyConstraints* PROTOBUF_NONNULL mutable_safety();
  void set_allocated_safety(::agricultural::robot::navigation::v1::SafetyConstraints* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_safety(::agricultural::robot::navigation::v1::SafetyConstraints* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::SafetyConstraints* PROTOBUF_NULLABLE unsafe_arena_release_safety();

  private:
  const ::agricultural::robot::navigation::v1::SafetyConstraints& _internal_safety() const;
  ::agricultural::robot::navigation::v1::SafetyConstraints* PROTOBUF_NONNULL _internal_mutable_safety();

  public:
  // .agricultural.robot.navigation.v1.ControlMode control_mode = 6 [json_name = "controlMode"];
  void clear_control_mode() ;
  ::agricultural::robot::navigation::v1::ControlMode control_mode() const;
  void set_control_mode(::agricultural::robot::navigation::v1::ControlMode value);

  private:
  ::agricultural::robot::navigation::v1::ControlMode _internal_control_mode() const;
  void _internal_set_control_mode(::agricultural::robot::navigation::v1::ControlMode value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.VelocityCommand)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   4, 65,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const VelocityCommand& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE cmd_vel_;
    ::google::protobuf::Duration* PROTOBUF_NULLABLE timeout_;
    ::agricultural::robot::navigation::v1::JoystickInput* PROTOBUF_NULLABLE joystick_input_;
    ::agricultural::robot::navigation::v1::SafetyConstraints* PROTOBUF_NULLABLE safety_;
    int control_mode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull VelocityCommand_class_data_;
// -------------------------------------------------------------------

class TrajectoryPoint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.TrajectoryPoint) */ {
 public:
  inline TrajectoryPoint() : TrajectoryPoint(nullptr) {}
  ~TrajectoryPoint() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrajectoryPoint* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrajectoryPoint));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrajectoryPoint(::google::protobuf::internal::ConstantInitialized);

  inline TrajectoryPoint(const TrajectoryPoint& from) : TrajectoryPoint(nullptr, from) {}
  inline TrajectoryPoint(TrajectoryPoint&& from) noexcept
      : TrajectoryPoint(nullptr, ::std::move(from)) {}
  inline TrajectoryPoint& operator=(const TrajectoryPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrajectoryPoint& operator=(TrajectoryPoint&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrajectoryPoint& default_instance() {
    return *reinterpret_cast<const TrajectoryPoint*>(
        &_TrajectoryPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(TrajectoryPoint& a, TrajectoryPoint& b) { a.Swap(&b); }
  inline void Swap(TrajectoryPoint* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrajectoryPoint* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrajectoryPoint* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrajectoryPoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrajectoryPoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrajectoryPoint& from) { TrajectoryPoint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrajectoryPoint* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.TrajectoryPoint"; }

 protected:
  explicit TrajectoryPoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TrajectoryPoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TrajectoryPoint& from);
  TrajectoryPoint(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TrajectoryPoint&& from) noexcept
      : TrajectoryPoint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccelerationsFieldNumber = 4,
    kPoseFieldNumber = 1,
    kVelocityFieldNumber = 2,
    kTimeFromStartFieldNumber = 3,
  };
  // repeated double accelerations = 4 [json_name = "accelerations"];
  int accelerations_size() const;
  private:
  int _internal_accelerations_size() const;

  public:
  void clear_accelerations() ;
  double accelerations(int index) const;
  void set_accelerations(int index, double value);
  void add_accelerations(double value);
  const ::google::protobuf::RepeatedField<double>& accelerations() const;
  ::google::protobuf::RepeatedField<double>* PROTOBUF_NONNULL mutable_accelerations();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_accelerations() const;
  ::google::protobuf::RepeatedField<double>* PROTOBUF_NONNULL _internal_mutable_accelerations();

  public:
  // .agricultural.robot.navigation.v1.Pose pose = 1 [json_name = "pose"];
  bool has_pose() const;
  void clear_pose() ;
  const ::agricultural::robot::navigation::v1::Pose& pose() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE release_pose();
  ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NONNULL mutable_pose();
  void set_allocated_pose(::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pose(::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE unsafe_arena_release_pose();

  private:
  const ::agricultural::robot::navigation::v1::Pose& _internal_pose() const;
  ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NONNULL _internal_mutable_pose();

  public:
  // .agricultural.robot.navigation.v1.Twist velocity = 2 [json_name = "velocity"];
  bool has_velocity() const;
  void clear_velocity() ;
  const ::agricultural::robot::navigation::v1::Twist& velocity() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE release_velocity();
  ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NONNULL mutable_velocity();
  void set_allocated_velocity(::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_velocity(::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE unsafe_arena_release_velocity();

  private:
  const ::agricultural::robot::navigation::v1::Twist& _internal_velocity() const;
  ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NONNULL _internal_mutable_velocity();

  public:
  // .google.protobuf.Timestamp time_from_start = 3 [json_name = "timeFromStart"];
  bool has_time_from_start() const;
  void clear_time_from_start() ;
  const ::google::protobuf::Timestamp& time_from_start() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_time_from_start();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_time_from_start();
  void set_allocated_time_from_start(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_time_from_start(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_time_from_start();

  private:
  const ::google::protobuf::Timestamp& _internal_time_from_start() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_time_from_start();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.TrajectoryPoint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TrajectoryPoint& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<double> accelerations_;
    ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE pose_;
    ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE velocity_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE time_from_start_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TrajectoryPoint_class_data_;
// -------------------------------------------------------------------

class StreamVideoRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.StreamVideoRequest) */ {
 public:
  inline StreamVideoRequest() : StreamVideoRequest(nullptr) {}
  ~StreamVideoRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StreamVideoRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StreamVideoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StreamVideoRequest(::google::protobuf::internal::ConstantInitialized);

  inline StreamVideoRequest(const StreamVideoRequest& from) : StreamVideoRequest(nullptr, from) {}
  inline StreamVideoRequest(StreamVideoRequest&& from) noexcept
      : StreamVideoRequest(nullptr, ::std::move(from)) {}
  inline StreamVideoRequest& operator=(const StreamVideoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamVideoRequest& operator=(StreamVideoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamVideoRequest& default_instance() {
    return *reinterpret_cast<const StreamVideoRequest*>(
        &_StreamVideoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(StreamVideoRequest& a, StreamVideoRequest& b) { a.Swap(&b); }
  inline void Swap(StreamVideoRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamVideoRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamVideoRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StreamVideoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamVideoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StreamVideoRequest& from) { StreamVideoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StreamVideoRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.StreamVideoRequest"; }

 protected:
  explicit StreamVideoRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StreamVideoRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StreamVideoRequest& from);
  StreamVideoRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StreamVideoRequest&& from) noexcept
      : StreamVideoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
    kCameraIdFieldNumber = 2,
    kOptionsFieldNumber = 3,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // string camera_id = 2 [json_name = "cameraId"];
  void clear_camera_id() ;
  const ::std::string& camera_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_camera_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_camera_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_camera_id();
  void set_allocated_camera_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_camera_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_camera_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_camera_id();

  public:
  // .agricultural.robot.navigation.v1.VideoStreamOptions options = 3 [json_name = "options"];
  bool has_options() const;
  void clear_options() ;
  const ::agricultural::robot::navigation::v1::VideoStreamOptions& options() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::VideoStreamOptions* PROTOBUF_NULLABLE release_options();
  ::agricultural::robot::navigation::v1::VideoStreamOptions* PROTOBUF_NONNULL mutable_options();
  void set_allocated_options(::agricultural::robot::navigation::v1::VideoStreamOptions* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_options(::agricultural::robot::navigation::v1::VideoStreamOptions* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::VideoStreamOptions* PROTOBUF_NULLABLE unsafe_arena_release_options();

  private:
  const ::agricultural::robot::navigation::v1::VideoStreamOptions& _internal_options() const;
  ::agricultural::robot::navigation::v1::VideoStreamOptions* PROTOBUF_NONNULL _internal_mutable_options();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.StreamVideoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 77,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StreamVideoRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    ::google::protobuf::internal::ArenaStringPtr camera_id_;
    ::agricultural::robot::navigation::v1::VideoStreamOptions* PROTOBUF_NULLABLE options_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StreamVideoRequest_class_data_;
// -------------------------------------------------------------------

class PoseWithCovariance final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.PoseWithCovariance) */ {
 public:
  inline PoseWithCovariance() : PoseWithCovariance(nullptr) {}
  ~PoseWithCovariance() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PoseWithCovariance* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PoseWithCovariance));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PoseWithCovariance(::google::protobuf::internal::ConstantInitialized);

  inline PoseWithCovariance(const PoseWithCovariance& from) : PoseWithCovariance(nullptr, from) {}
  inline PoseWithCovariance(PoseWithCovariance&& from) noexcept
      : PoseWithCovariance(nullptr, ::std::move(from)) {}
  inline PoseWithCovariance& operator=(const PoseWithCovariance& from) {
    CopyFrom(from);
    return *this;
  }
  inline PoseWithCovariance& operator=(PoseWithCovariance&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PoseWithCovariance& default_instance() {
    return *reinterpret_cast<const PoseWithCovariance*>(
        &_PoseWithCovariance_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(PoseWithCovariance& a, PoseWithCovariance& b) { a.Swap(&b); }
  inline void Swap(PoseWithCovariance* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PoseWithCovariance* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PoseWithCovariance* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PoseWithCovariance>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PoseWithCovariance& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PoseWithCovariance& from) { PoseWithCovariance::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PoseWithCovariance* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.PoseWithCovariance"; }

 protected:
  explicit PoseWithCovariance(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PoseWithCovariance(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PoseWithCovariance& from);
  PoseWithCovariance(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PoseWithCovariance&& from) noexcept
      : PoseWithCovariance(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCovarianceFieldNumber = 2,
    kPoseFieldNumber = 1,
  };
  // repeated double covariance = 2 [json_name = "covariance"];
  int covariance_size() const;
  private:
  int _internal_covariance_size() const;

  public:
  void clear_covariance() ;
  double covariance(int index) const;
  void set_covariance(int index, double value);
  void add_covariance(double value);
  const ::google::protobuf::RepeatedField<double>& covariance() const;
  ::google::protobuf::RepeatedField<double>* PROTOBUF_NONNULL mutable_covariance();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_covariance() const;
  ::google::protobuf::RepeatedField<double>* PROTOBUF_NONNULL _internal_mutable_covariance();

  public:
  // .agricultural.robot.navigation.v1.Pose pose = 1 [json_name = "pose"];
  bool has_pose() const;
  void clear_pose() ;
  const ::agricultural::robot::navigation::v1::Pose& pose() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE release_pose();
  ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NONNULL mutable_pose();
  void set_allocated_pose(::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pose(::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE unsafe_arena_release_pose();

  private:
  const ::agricultural::robot::navigation::v1::Pose& _internal_pose() const;
  ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NONNULL _internal_mutable_pose();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.PoseWithCovariance)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PoseWithCovariance& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<double> covariance_;
    ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE pose_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PoseWithCovariance_class_data_;
// -------------------------------------------------------------------

class NavigationStatusUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.NavigationStatusUpdate) */ {
 public:
  inline NavigationStatusUpdate() : NavigationStatusUpdate(nullptr) {}
  ~NavigationStatusUpdate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NavigationStatusUpdate* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NavigationStatusUpdate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NavigationStatusUpdate(::google::protobuf::internal::ConstantInitialized);

  inline NavigationStatusUpdate(const NavigationStatusUpdate& from) : NavigationStatusUpdate(nullptr, from) {}
  inline NavigationStatusUpdate(NavigationStatusUpdate&& from) noexcept
      : NavigationStatusUpdate(nullptr, ::std::move(from)) {}
  inline NavigationStatusUpdate& operator=(const NavigationStatusUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline NavigationStatusUpdate& operator=(NavigationStatusUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NavigationStatusUpdate& default_instance() {
    return *reinterpret_cast<const NavigationStatusUpdate*>(
        &_NavigationStatusUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(NavigationStatusUpdate& a, NavigationStatusUpdate& b) { a.Swap(&b); }
  inline void Swap(NavigationStatusUpdate* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NavigationStatusUpdate* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NavigationStatusUpdate* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NavigationStatusUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NavigationStatusUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NavigationStatusUpdate& from) { NavigationStatusUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NavigationStatusUpdate* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.NavigationStatusUpdate"; }

 protected:
  explicit NavigationStatusUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  NavigationStatusUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NavigationStatusUpdate& from);
  NavigationStatusUpdate(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, NavigationStatusUpdate&& from) noexcept
      : NavigationStatusUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
    kProgressFieldNumber = 3,
    kTimestampFieldNumber = 4,
    kErrorFieldNumber = 5,
    kStatusFieldNumber = 2,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // .agricultural.robot.navigation.v1.NavigationProgress progress = 3 [json_name = "progress"];
  bool has_progress() const;
  void clear_progress() ;
  const ::agricultural::robot::navigation::v1::NavigationProgress& progress() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NULLABLE release_progress();
  ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NONNULL mutable_progress();
  void set_allocated_progress(::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_progress(::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NULLABLE unsafe_arena_release_progress();

  private:
  const ::agricultural::robot::navigation::v1::NavigationProgress& _internal_progress() const;
  ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NONNULL _internal_mutable_progress();

  public:
  // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_timestamp();

  public:
  // optional .agricultural.robot.navigation.v1.NavigationError error = 5 [json_name = "error"];
  bool has_error() const;
  void clear_error() ;
  const ::agricultural::robot::navigation::v1::NavigationError& error() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::NavigationError* PROTOBUF_NULLABLE release_error();
  ::agricultural::robot::navigation::v1::NavigationError* PROTOBUF_NONNULL mutable_error();
  void set_allocated_error(::agricultural::robot::navigation::v1::NavigationError* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_error(::agricultural::robot::navigation::v1::NavigationError* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::NavigationError* PROTOBUF_NULLABLE unsafe_arena_release_error();

  private:
  const ::agricultural::robot::navigation::v1::NavigationError& _internal_error() const;
  ::agricultural::robot::navigation::v1::NavigationError* PROTOBUF_NONNULL _internal_mutable_error();

  public:
  // .agricultural.robot.navigation.v1.NavigationStatus status = 2 [json_name = "status"];
  void clear_status() ;
  ::agricultural::robot::navigation::v1::NavigationStatus status() const;
  void set_status(::agricultural::robot::navigation::v1::NavigationStatus value);

  private:
  ::agricultural::robot::navigation::v1::NavigationStatus _internal_status() const;
  void _internal_set_status(::agricultural::robot::navigation::v1::NavigationStatus value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.NavigationStatusUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   3, 72,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const NavigationStatusUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NULLABLE progress_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE timestamp_;
    ::agricultural::robot::navigation::v1::NavigationError* PROTOBUF_NULLABLE error_;
    int status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull NavigationStatusUpdate_class_data_;
// -------------------------------------------------------------------

class MapUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.MapUpdate) */ {
 public:
  inline MapUpdate() : MapUpdate(nullptr) {}
  ~MapUpdate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MapUpdate* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MapUpdate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MapUpdate(::google::protobuf::internal::ConstantInitialized);

  inline MapUpdate(const MapUpdate& from) : MapUpdate(nullptr, from) {}
  inline MapUpdate(MapUpdate&& from) noexcept
      : MapUpdate(nullptr, ::std::move(from)) {}
  inline MapUpdate& operator=(const MapUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapUpdate& operator=(MapUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MapUpdate& default_instance() {
    return *reinterpret_cast<const MapUpdate*>(
        &_MapUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(MapUpdate& a, MapUpdate& b) { a.Swap(&b); }
  inline void Swap(MapUpdate* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MapUpdate* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MapUpdate* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MapUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MapUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MapUpdate& from) { MapUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MapUpdate* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.MapUpdate"; }

 protected:
  explicit MapUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MapUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MapUpdate& from);
  MapUpdate(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MapUpdate&& from) noexcept
      : MapUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 2,
    kUpdateRegionFieldNumber = 1,
    kTimestampFieldNumber = 3,
  };
  // bytes data = 2 [json_name = "data"];
  void clear_data() ;
  const ::std::string& data() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_data();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_data();
  void set_allocated_data(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_data(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_data();

  public:
  // .agricultural.robot.navigation.v1.Rectangle update_region = 1 [json_name = "updateRegion"];
  bool has_update_region() const;
  void clear_update_region() ;
  const ::agricultural::robot::navigation::v1::Rectangle& update_region() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::Rectangle* PROTOBUF_NULLABLE release_update_region();
  ::agricultural::robot::navigation::v1::Rectangle* PROTOBUF_NONNULL mutable_update_region();
  void set_allocated_update_region(::agricultural::robot::navigation::v1::Rectangle* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_update_region(::agricultural::robot::navigation::v1::Rectangle* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::Rectangle* PROTOBUF_NULLABLE unsafe_arena_release_update_region();

  private:
  const ::agricultural::robot::navigation::v1::Rectangle& _internal_update_region() const;
  ::agricultural::robot::navigation::v1::Rectangle* PROTOBUF_NONNULL _internal_mutable_update_region();

  public:
  // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_timestamp();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.MapUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MapUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::agricultural::robot::navigation::v1::Rectangle* PROTOBUF_NULLABLE update_region_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MapUpdate_class_data_;
// -------------------------------------------------------------------

class MapMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.MapMetadata) */ {
 public:
  inline MapMetadata() : MapMetadata(nullptr) {}
  ~MapMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MapMetadata* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MapMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MapMetadata(::google::protobuf::internal::ConstantInitialized);

  inline MapMetadata(const MapMetadata& from) : MapMetadata(nullptr, from) {}
  inline MapMetadata(MapMetadata&& from) noexcept
      : MapMetadata(nullptr, ::std::move(from)) {}
  inline MapMetadata& operator=(const MapMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapMetadata& operator=(MapMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MapMetadata& default_instance() {
    return *reinterpret_cast<const MapMetadata*>(
        &_MapMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(MapMetadata& a, MapMetadata& b) { a.Swap(&b); }
  inline void Swap(MapMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MapMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MapMetadata* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MapMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MapMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MapMetadata& from) { MapMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MapMetadata* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.MapMetadata"; }

 protected:
  explicit MapMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MapMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MapMetadata& from);
  MapMetadata(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MapMetadata&& from) noexcept
      : MapMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFrameIdFieldNumber = 6,
    kMapLoadTimeFieldNumber = 1,
    kOriginFieldNumber = 5,
    kResolutionFieldNumber = 2,
    kWidthFieldNumber = 3,
    kHeightFieldNumber = 4,
    kVersionFieldNumber = 7,
    kSourceFieldNumber = 8,
  };
  // string frame_id = 6 [json_name = "frameId"];
  void clear_frame_id() ;
  const ::std::string& frame_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_frame_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_frame_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_frame_id();
  void set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_frame_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_frame_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_frame_id();

  public:
  // .google.protobuf.Timestamp map_load_time = 1 [json_name = "mapLoadTime"];
  bool has_map_load_time() const;
  void clear_map_load_time() ;
  const ::google::protobuf::Timestamp& map_load_time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_map_load_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_map_load_time();
  void set_allocated_map_load_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_map_load_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_map_load_time();

  private:
  const ::google::protobuf::Timestamp& _internal_map_load_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_map_load_time();

  public:
  // .agricultural.robot.navigation.v1.Pose origin = 5 [json_name = "origin"];
  bool has_origin() const;
  void clear_origin() ;
  const ::agricultural::robot::navigation::v1::Pose& origin() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE release_origin();
  ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NONNULL mutable_origin();
  void set_allocated_origin(::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_origin(::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE unsafe_arena_release_origin();

  private:
  const ::agricultural::robot::navigation::v1::Pose& _internal_origin() const;
  ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NONNULL _internal_mutable_origin();

  public:
  // float resolution = 2 [json_name = "resolution"];
  void clear_resolution() ;
  float resolution() const;
  void set_resolution(float value);

  private:
  float _internal_resolution() const;
  void _internal_set_resolution(float value);

  public:
  // uint32 width = 3 [json_name = "width"];
  void clear_width() ;
  ::uint32_t width() const;
  void set_width(::uint32_t value);

  private:
  ::uint32_t _internal_width() const;
  void _internal_set_width(::uint32_t value);

  public:
  // uint32 height = 4 [json_name = "height"];
  void clear_height() ;
  ::uint32_t height() const;
  void set_height(::uint32_t value);

  private:
  ::uint32_t _internal_height() const;
  void _internal_set_height(::uint32_t value);

  public:
  // uint32 version = 7 [json_name = "version"];
  void clear_version() ;
  ::uint32_t version() const;
  void set_version(::uint32_t value);

  private:
  ::uint32_t _internal_version() const;
  void _internal_set_version(::uint32_t value);

  public:
  // .agricultural.robot.navigation.v1.MapSource source = 8 [json_name = "source"];
  void clear_source() ;
  ::agricultural::robot::navigation::v1::MapSource source() const;
  void set_source(::agricultural::robot::navigation::v1::MapSource value);

  private:
  ::agricultural::robot::navigation::v1::MapSource _internal_source() const;
  void _internal_set_source(::agricultural::robot::navigation::v1::MapSource value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.MapMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8,
                                   2, 69,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MapMetadata& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr frame_id_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE map_load_time_;
    ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE origin_;
    float resolution_;
    ::uint32_t width_;
    ::uint32_t height_;
    ::uint32_t version_;
    int source_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MapMetadata_class_data_;
// -------------------------------------------------------------------

class FrameMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.FrameMetadata) */ {
 public:
  inline FrameMetadata() : FrameMetadata(nullptr) {}
  ~FrameMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FrameMetadata* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FrameMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FrameMetadata(::google::protobuf::internal::ConstantInitialized);

  inline FrameMetadata(const FrameMetadata& from) : FrameMetadata(nullptr, from) {}
  inline FrameMetadata(FrameMetadata&& from) noexcept
      : FrameMetadata(nullptr, ::std::move(from)) {}
  inline FrameMetadata& operator=(const FrameMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline FrameMetadata& operator=(FrameMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FrameMetadata& default_instance() {
    return *reinterpret_cast<const FrameMetadata*>(
        &_FrameMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 57;
  friend void swap(FrameMetadata& a, FrameMetadata& b) { a.Swap(&b); }
  inline void Swap(FrameMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FrameMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FrameMetadata* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FrameMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FrameMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FrameMetadata& from) { FrameMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FrameMetadata* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.FrameMetadata"; }

 protected:
  explicit FrameMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FrameMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FrameMetadata& from);
  FrameMetadata(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FrameMetadata&& from) noexcept
      : FrameMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCaptureTimeFieldNumber = 4,
    kCameraPoseFieldNumber = 5,
    kExposureTimeFieldNumber = 1,
    kGainFieldNumber = 2,
    kWhiteBalanceFieldNumber = 3,
  };
  // .google.protobuf.Timestamp capture_time = 4 [json_name = "captureTime"];
  bool has_capture_time() const;
  void clear_capture_time() ;
  const ::google::protobuf::Timestamp& capture_time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_capture_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_capture_time();
  void set_allocated_capture_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_capture_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_capture_time();

  private:
  const ::google::protobuf::Timestamp& _internal_capture_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_capture_time();

  public:
  // optional .agricultural.robot.navigation.v1.Pose camera_pose = 5 [json_name = "cameraPose"];
  bool has_camera_pose() const;
  void clear_camera_pose() ;
  const ::agricultural::robot::navigation::v1::Pose& camera_pose() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE release_camera_pose();
  ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NONNULL mutable_camera_pose();
  void set_allocated_camera_pose(::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_camera_pose(::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE unsafe_arena_release_camera_pose();

  private:
  const ::agricultural::robot::navigation::v1::Pose& _internal_camera_pose() const;
  ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NONNULL _internal_mutable_camera_pose();

  public:
  // double exposure_time = 1 [json_name = "exposureTime"];
  void clear_exposure_time() ;
  double exposure_time() const;
  void set_exposure_time(double value);

  private:
  double _internal_exposure_time() const;
  void _internal_set_exposure_time(double value);

  public:
  // double gain = 2 [json_name = "gain"];
  void clear_gain() ;
  double gain() const;
  void set_gain(double value);

  private:
  double _internal_gain() const;
  void _internal_set_gain(double value);

  public:
  // double white_balance = 3 [json_name = "whiteBalance"];
  void clear_white_balance() ;
  double white_balance() const;
  void set_white_balance(double value);

  private:
  double _internal_white_balance() const;
  void _internal_set_white_balance(double value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.FrameMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const FrameMetadata& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE capture_time_;
    ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE camera_pose_;
    double exposure_time_;
    double gain_;
    double white_balance_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull FrameMetadata_class_data_;
// -------------------------------------------------------------------

class CameraInfoResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.CameraInfoResponse) */ {
 public:
  inline CameraInfoResponse() : CameraInfoResponse(nullptr) {}
  ~CameraInfoResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraInfoResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraInfoResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraInfoResponse(::google::protobuf::internal::ConstantInitialized);

  inline CameraInfoResponse(const CameraInfoResponse& from) : CameraInfoResponse(nullptr, from) {}
  inline CameraInfoResponse(CameraInfoResponse&& from) noexcept
      : CameraInfoResponse(nullptr, ::std::move(from)) {}
  inline CameraInfoResponse& operator=(const CameraInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraInfoResponse& operator=(CameraInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraInfoResponse& default_instance() {
    return *reinterpret_cast<const CameraInfoResponse*>(
        &_CameraInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 46;
  friend void swap(CameraInfoResponse& a, CameraInfoResponse& b) { a.Swap(&b); }
  inline void Swap(CameraInfoResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraInfoResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraInfoResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CameraInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CameraInfoResponse& from) { CameraInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraInfoResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.CameraInfoResponse"; }

 protected:
  explicit CameraInfoResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CameraInfoResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CameraInfoResponse& from);
  CameraInfoResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CameraInfoResponse&& from) noexcept
      : CameraInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCamerasFieldNumber = 3,
    kMessageFieldNumber = 2,
    kTimestampFieldNumber = 4,
    kSuccessFieldNumber = 1,
  };
  // repeated .agricultural.robot.navigation.v1.CameraInfo cameras = 3 [json_name = "cameras"];
  int cameras_size() const;
  private:
  int _internal_cameras_size() const;

  public:
  void clear_cameras() ;
  ::agricultural::robot::navigation::v1::CameraInfo* PROTOBUF_NONNULL mutable_cameras(int index);
  ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::CameraInfo>* PROTOBUF_NONNULL mutable_cameras();

  private:
  const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::CameraInfo>& _internal_cameras() const;
  ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::CameraInfo>* PROTOBUF_NONNULL _internal_mutable_cameras();
  public:
  const ::agricultural::robot::navigation::v1::CameraInfo& cameras(int index) const;
  ::agricultural::robot::navigation::v1::CameraInfo* PROTOBUF_NONNULL add_cameras();
  const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::CameraInfo>& cameras() const;
  // string message = 2 [json_name = "message"];
  void clear_message() ;
  const ::std::string& message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message();
  void set_allocated_message(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message();

  public:
  // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_timestamp();

  public:
  // bool success = 1 [json_name = "success"];
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.CameraInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   2, 67,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CameraInfoResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::agricultural::robot::navigation::v1::CameraInfo > cameras_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE timestamp_;
    bool success_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CameraInfoResponse_class_data_;
// -------------------------------------------------------------------

class CameraControlRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.CameraControlRequest) */ {
 public:
  inline CameraControlRequest() : CameraControlRequest(nullptr) {}
  ~CameraControlRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraControlRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraControlRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraControlRequest(::google::protobuf::internal::ConstantInitialized);

  inline CameraControlRequest(const CameraControlRequest& from) : CameraControlRequest(nullptr, from) {}
  inline CameraControlRequest(CameraControlRequest&& from) noexcept
      : CameraControlRequest(nullptr, ::std::move(from)) {}
  inline CameraControlRequest& operator=(const CameraControlRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraControlRequest& operator=(CameraControlRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraControlRequest& default_instance() {
    return *reinterpret_cast<const CameraControlRequest*>(
        &_CameraControlRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(CameraControlRequest& a, CameraControlRequest& b) { a.Swap(&b); }
  inline void Swap(CameraControlRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraControlRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraControlRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraControlRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CameraControlRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CameraControlRequest& from) { CameraControlRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraControlRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.CameraControlRequest"; }

 protected:
  explicit CameraControlRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CameraControlRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CameraControlRequest& from);
  CameraControlRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CameraControlRequest&& from) noexcept
      : CameraControlRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
    kCameraIdFieldNumber = 2,
    kCommandFieldNumber = 3,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // string camera_id = 2 [json_name = "cameraId"];
  void clear_camera_id() ;
  const ::std::string& camera_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_camera_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_camera_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_camera_id();
  void set_allocated_camera_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_camera_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_camera_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_camera_id();

  public:
  // .agricultural.robot.navigation.v1.CameraControlCommand command = 3 [json_name = "command"];
  bool has_command() const;
  void clear_command() ;
  const ::agricultural::robot::navigation::v1::CameraControlCommand& command() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::CameraControlCommand* PROTOBUF_NULLABLE release_command();
  ::agricultural::robot::navigation::v1::CameraControlCommand* PROTOBUF_NONNULL mutable_command();
  void set_allocated_command(::agricultural::robot::navigation::v1::CameraControlCommand* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_command(::agricultural::robot::navigation::v1::CameraControlCommand* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::CameraControlCommand* PROTOBUF_NULLABLE unsafe_arena_release_command();

  private:
  const ::agricultural::robot::navigation::v1::CameraControlCommand& _internal_command() const;
  ::agricultural::robot::navigation::v1::CameraControlCommand* PROTOBUF_NONNULL _internal_mutable_command();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.CameraControlRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 79,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CameraControlRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    ::google::protobuf::internal::ArenaStringPtr camera_id_;
    ::agricultural::robot::navigation::v1::CameraControlCommand* PROTOBUF_NULLABLE command_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CameraControlRequest_class_data_;
// -------------------------------------------------------------------

class Waypoint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.Waypoint) */ {
 public:
  inline Waypoint() : Waypoint(nullptr) {}
  ~Waypoint() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Waypoint* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Waypoint));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Waypoint(::google::protobuf::internal::ConstantInitialized);

  inline Waypoint(const Waypoint& from) : Waypoint(nullptr, from) {}
  inline Waypoint(Waypoint&& from) noexcept
      : Waypoint(nullptr, ::std::move(from)) {}
  inline Waypoint& operator=(const Waypoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline Waypoint& operator=(Waypoint&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Waypoint& default_instance() {
    return *reinterpret_cast<const Waypoint*>(
        &_Waypoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(Waypoint& a, Waypoint& b) { a.Swap(&b); }
  inline void Swap(Waypoint* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Waypoint* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Waypoint* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Waypoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Waypoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Waypoint& from) { Waypoint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Waypoint* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.Waypoint"; }

 protected:
  explicit Waypoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Waypoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Waypoint& from);
  Waypoint(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Waypoint&& from) noexcept
      : Waypoint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kActionsFieldNumber = 5,
    kWaypointIdFieldNumber = 1,
    kPoseFieldNumber = 2,
    kMaxDurationAtWaypointFieldNumber = 4,
    kTypeFieldNumber = 3,
  };
  // repeated .agricultural.robot.navigation.v1.WaypointAction actions = 5 [json_name = "actions"];
  int actions_size() const;
  private:
  int _internal_actions_size() const;

  public:
  void clear_actions() ;
  ::agricultural::robot::navigation::v1::WaypointAction* PROTOBUF_NONNULL mutable_actions(int index);
  ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::WaypointAction>* PROTOBUF_NONNULL mutable_actions();

  private:
  const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::WaypointAction>& _internal_actions() const;
  ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::WaypointAction>* PROTOBUF_NONNULL _internal_mutable_actions();
  public:
  const ::agricultural::robot::navigation::v1::WaypointAction& actions(int index) const;
  ::agricultural::robot::navigation::v1::WaypointAction* PROTOBUF_NONNULL add_actions();
  const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::WaypointAction>& actions() const;
  // string waypoint_id = 1 [json_name = "waypointId"];
  void clear_waypoint_id() ;
  const ::std::string& waypoint_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_waypoint_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_waypoint_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_waypoint_id();
  void set_allocated_waypoint_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_waypoint_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_waypoint_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_waypoint_id();

  public:
  // .agricultural.robot.navigation.v1.PoseWithCovariance pose = 2 [json_name = "pose"];
  bool has_pose() const;
  void clear_pose() ;
  const ::agricultural::robot::navigation::v1::PoseWithCovariance& pose() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE release_pose();
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL mutable_pose();
  void set_allocated_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE unsafe_arena_release_pose();

  private:
  const ::agricultural::robot::navigation::v1::PoseWithCovariance& _internal_pose() const;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL _internal_mutable_pose();

  public:
  // .google.protobuf.Duration max_duration_at_waypoint = 4 [json_name = "maxDurationAtWaypoint"];
  bool has_max_duration_at_waypoint() const;
  void clear_max_duration_at_waypoint() ;
  const ::google::protobuf::Duration& max_duration_at_waypoint() const;
  [[nodiscard]] ::google::protobuf::Duration* PROTOBUF_NULLABLE release_max_duration_at_waypoint();
  ::google::protobuf::Duration* PROTOBUF_NONNULL mutable_max_duration_at_waypoint();
  void set_allocated_max_duration_at_waypoint(::google::protobuf::Duration* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_max_duration_at_waypoint(::google::protobuf::Duration* PROTOBUF_NULLABLE value);
  ::google::protobuf::Duration* PROTOBUF_NULLABLE unsafe_arena_release_max_duration_at_waypoint();

  private:
  const ::google::protobuf::Duration& _internal_max_duration_at_waypoint() const;
  ::google::protobuf::Duration* PROTOBUF_NONNULL _internal_mutable_max_duration_at_waypoint();

  public:
  // .agricultural.robot.navigation.v1.WaypointType type = 3 [json_name = "type"];
  void clear_type() ;
  ::agricultural::robot::navigation::v1::WaypointType type() const;
  void set_type(::agricultural::robot::navigation::v1::WaypointType value);

  private:
  ::agricultural::robot::navigation::v1::WaypointType _internal_type() const;
  void _internal_set_type(::agricultural::robot::navigation::v1::WaypointType value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.Waypoint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   3, 61,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Waypoint& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::agricultural::robot::navigation::v1::WaypointAction > actions_;
    ::google::protobuf::internal::ArenaStringPtr waypoint_id_;
    ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE pose_;
    ::google::protobuf::Duration* PROTOBUF_NULLABLE max_duration_at_waypoint_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Waypoint_class_data_;
// -------------------------------------------------------------------

class VideoFrame final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.VideoFrame) */ {
 public:
  inline VideoFrame() : VideoFrame(nullptr) {}
  ~VideoFrame() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(VideoFrame* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(VideoFrame));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VideoFrame(::google::protobuf::internal::ConstantInitialized);

  inline VideoFrame(const VideoFrame& from) : VideoFrame(nullptr, from) {}
  inline VideoFrame(VideoFrame&& from) noexcept
      : VideoFrame(nullptr, ::std::move(from)) {}
  inline VideoFrame& operator=(const VideoFrame& from) {
    CopyFrom(from);
    return *this;
  }
  inline VideoFrame& operator=(VideoFrame&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VideoFrame& default_instance() {
    return *reinterpret_cast<const VideoFrame*>(
        &_VideoFrame_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 48;
  friend void swap(VideoFrame& a, VideoFrame& b) { a.Swap(&b); }
  inline void Swap(VideoFrame* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VideoFrame* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VideoFrame* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<VideoFrame>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VideoFrame& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VideoFrame& from) { VideoFrame::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(VideoFrame* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.VideoFrame"; }

 protected:
  explicit VideoFrame(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  VideoFrame(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const VideoFrame& from);
  VideoFrame(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, VideoFrame&& from) noexcept
      : VideoFrame(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraIdFieldNumber = 1,
    kImageDataFieldNumber = 2,
    kResolutionFieldNumber = 4,
    kTimestampFieldNumber = 5,
    kMetadataFieldNumber = 7,
    kFrameNumberFieldNumber = 6,
    kFormatFieldNumber = 3,
  };
  // string camera_id = 1 [json_name = "cameraId"];
  void clear_camera_id() ;
  const ::std::string& camera_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_camera_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_camera_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_camera_id();
  void set_allocated_camera_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_camera_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_camera_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_camera_id();

  public:
  // bytes image_data = 2 [json_name = "imageData"];
  void clear_image_data() ;
  const ::std::string& image_data() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_image_data(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_image_data();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_image_data();
  void set_allocated_image_data(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_image_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_image_data(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_image_data();

  public:
  // .agricultural.robot.navigation.v1.Resolution resolution = 4 [json_name = "resolution"];
  bool has_resolution() const;
  void clear_resolution() ;
  const ::agricultural::robot::navigation::v1::Resolution& resolution() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE release_resolution();
  ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NONNULL mutable_resolution();
  void set_allocated_resolution(::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_resolution(::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE unsafe_arena_release_resolution();

  private:
  const ::agricultural::robot::navigation::v1::Resolution& _internal_resolution() const;
  ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NONNULL _internal_mutable_resolution();

  public:
  // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_timestamp();

  public:
  // .agricultural.robot.navigation.v1.FrameMetadata metadata = 7 [json_name = "metadata"];
  bool has_metadata() const;
  void clear_metadata() ;
  const ::agricultural::robot::navigation::v1::FrameMetadata& metadata() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::FrameMetadata* PROTOBUF_NULLABLE release_metadata();
  ::agricultural::robot::navigation::v1::FrameMetadata* PROTOBUF_NONNULL mutable_metadata();
  void set_allocated_metadata(::agricultural::robot::navigation::v1::FrameMetadata* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_metadata(::agricultural::robot::navigation::v1::FrameMetadata* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::FrameMetadata* PROTOBUF_NULLABLE unsafe_arena_release_metadata();

  private:
  const ::agricultural::robot::navigation::v1::FrameMetadata& _internal_metadata() const;
  ::agricultural::robot::navigation::v1::FrameMetadata* PROTOBUF_NONNULL _internal_mutable_metadata();

  public:
  // uint64 frame_number = 6 [json_name = "frameNumber"];
  void clear_frame_number() ;
  ::uint64_t frame_number() const;
  void set_frame_number(::uint64_t value);

  private:
  ::uint64_t _internal_frame_number() const;
  void _internal_set_frame_number(::uint64_t value);

  public:
  // .agricultural.robot.navigation.v1.VideoFormat format = 3 [json_name = "format"];
  void clear_format() ;
  ::agricultural::robot::navigation::v1::VideoFormat format() const;
  void set_format(::agricultural::robot::navigation::v1::VideoFormat value);

  private:
  ::agricultural::robot::navigation::v1::VideoFormat _internal_format() const;
  void _internal_set_format(::agricultural::robot::navigation::v1::VideoFormat value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.VideoFrame)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   3, 61,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const VideoFrame& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr camera_id_;
    ::google::protobuf::internal::ArenaStringPtr image_data_;
    ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE resolution_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE timestamp_;
    ::agricultural::robot::navigation::v1::FrameMetadata* PROTOBUF_NULLABLE metadata_;
    ::uint64_t frame_number_;
    int format_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull VideoFrame_class_data_;
// -------------------------------------------------------------------

class UpdateMapRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.UpdateMapRequest) */ {
 public:
  inline UpdateMapRequest() : UpdateMapRequest(nullptr) {}
  ~UpdateMapRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateMapRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateMapRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateMapRequest(::google::protobuf::internal::ConstantInitialized);

  inline UpdateMapRequest(const UpdateMapRequest& from) : UpdateMapRequest(nullptr, from) {}
  inline UpdateMapRequest(UpdateMapRequest&& from) noexcept
      : UpdateMapRequest(nullptr, ::std::move(from)) {}
  inline UpdateMapRequest& operator=(const UpdateMapRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateMapRequest& operator=(UpdateMapRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateMapRequest& default_instance() {
    return *reinterpret_cast<const UpdateMapRequest*>(
        &_UpdateMapRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(UpdateMapRequest& a, UpdateMapRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateMapRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateMapRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateMapRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateMapRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateMapRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateMapRequest& from) { UpdateMapRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateMapRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.UpdateMapRequest"; }

 protected:
  explicit UpdateMapRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  UpdateMapRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const UpdateMapRequest& from);
  UpdateMapRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, UpdateMapRequest&& from) noexcept
      : UpdateMapRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
    kUpdateFieldNumber = 2,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // .agricultural.robot.navigation.v1.MapUpdate update = 2 [json_name = "update"];
  bool has_update() const;
  void clear_update() ;
  const ::agricultural::robot::navigation::v1::MapUpdate& update() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::MapUpdate* PROTOBUF_NULLABLE release_update();
  ::agricultural::robot::navigation::v1::MapUpdate* PROTOBUF_NONNULL mutable_update();
  void set_allocated_update(::agricultural::robot::navigation::v1::MapUpdate* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_update(::agricultural::robot::navigation::v1::MapUpdate* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::MapUpdate* PROTOBUF_NULLABLE unsafe_arena_release_update();

  private:
  const ::agricultural::robot::navigation::v1::MapUpdate& _internal_update() const;
  ::agricultural::robot::navigation::v1::MapUpdate* PROTOBUF_NONNULL _internal_mutable_update();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.UpdateMapRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 66,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const UpdateMapRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    ::agricultural::robot::navigation::v1::MapUpdate* PROTOBUF_NULLABLE update_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull UpdateMapRequest_class_data_;
// -------------------------------------------------------------------

class TrajectoryCommand final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.TrajectoryCommand) */ {
 public:
  inline TrajectoryCommand() : TrajectoryCommand(nullptr) {}
  ~TrajectoryCommand() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrajectoryCommand* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrajectoryCommand));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrajectoryCommand(::google::protobuf::internal::ConstantInitialized);

  inline TrajectoryCommand(const TrajectoryCommand& from) : TrajectoryCommand(nullptr, from) {}
  inline TrajectoryCommand(TrajectoryCommand&& from) noexcept
      : TrajectoryCommand(nullptr, ::std::move(from)) {}
  inline TrajectoryCommand& operator=(const TrajectoryCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrajectoryCommand& operator=(TrajectoryCommand&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrajectoryCommand& default_instance() {
    return *reinterpret_cast<const TrajectoryCommand*>(
        &_TrajectoryCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(TrajectoryCommand& a, TrajectoryCommand& b) { a.Swap(&b); }
  inline void Swap(TrajectoryCommand* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrajectoryCommand* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrajectoryCommand* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrajectoryCommand>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrajectoryCommand& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrajectoryCommand& from) { TrajectoryCommand::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrajectoryCommand* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.TrajectoryCommand"; }

 protected:
  explicit TrajectoryCommand(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TrajectoryCommand(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TrajectoryCommand& from);
  TrajectoryCommand(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TrajectoryCommand&& from) noexcept
      : TrajectoryCommand(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPointsFieldNumber = 3,
    kRobotIdFieldNumber = 1,
    kTrajectoryIdFieldNumber = 2,
    kFrameIdFieldNumber = 5,
    kOptionsFieldNumber = 4,
  };
  // repeated .agricultural.robot.navigation.v1.TrajectoryPoint points = 3 [json_name = "points"];
  int points_size() const;
  private:
  int _internal_points_size() const;

  public:
  void clear_points() ;
  ::agricultural::robot::navigation::v1::TrajectoryPoint* PROTOBUF_NONNULL mutable_points(int index);
  ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::TrajectoryPoint>* PROTOBUF_NONNULL mutable_points();

  private:
  const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::TrajectoryPoint>& _internal_points() const;
  ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::TrajectoryPoint>* PROTOBUF_NONNULL _internal_mutable_points();
  public:
  const ::agricultural::robot::navigation::v1::TrajectoryPoint& points(int index) const;
  ::agricultural::robot::navigation::v1::TrajectoryPoint* PROTOBUF_NONNULL add_points();
  const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::TrajectoryPoint>& points() const;
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // string trajectory_id = 2 [json_name = "trajectoryId"];
  void clear_trajectory_id() ;
  const ::std::string& trajectory_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_trajectory_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_trajectory_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_trajectory_id();
  void set_allocated_trajectory_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_trajectory_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_trajectory_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_trajectory_id();

  public:
  // string frame_id = 5 [json_name = "frameId"];
  void clear_frame_id() ;
  const ::std::string& frame_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_frame_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_frame_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_frame_id();
  void set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_frame_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_frame_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_frame_id();

  public:
  // .agricultural.robot.navigation.v1.TrajectoryOptions options = 4 [json_name = "options"];
  bool has_options() const;
  void clear_options() ;
  const ::agricultural::robot::navigation::v1::TrajectoryOptions& options() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::TrajectoryOptions* PROTOBUF_NULLABLE release_options();
  ::agricultural::robot::navigation::v1::TrajectoryOptions* PROTOBUF_NONNULL mutable_options();
  void set_allocated_options(::agricultural::robot::navigation::v1::TrajectoryOptions* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_options(::agricultural::robot::navigation::v1::TrajectoryOptions* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::TrajectoryOptions* PROTOBUF_NULLABLE unsafe_arena_release_options();

  private:
  const ::agricultural::robot::navigation::v1::TrajectoryOptions& _internal_options() const;
  ::agricultural::robot::navigation::v1::TrajectoryOptions* PROTOBUF_NONNULL _internal_mutable_options();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.TrajectoryCommand)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   2, 88,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TrajectoryCommand& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::agricultural::robot::navigation::v1::TrajectoryPoint > points_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    ::google::protobuf::internal::ArenaStringPtr trajectory_id_;
    ::google::protobuf::internal::ArenaStringPtr frame_id_;
    ::agricultural::robot::navigation::v1::TrajectoryOptions* PROTOBUF_NULLABLE options_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TrajectoryCommand_class_data_;
// -------------------------------------------------------------------

class SetPositionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.SetPositionRequest) */ {
 public:
  inline SetPositionRequest() : SetPositionRequest(nullptr) {}
  ~SetPositionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetPositionRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetPositionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetPositionRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetPositionRequest(const SetPositionRequest& from) : SetPositionRequest(nullptr, from) {}
  inline SetPositionRequest(SetPositionRequest&& from) noexcept
      : SetPositionRequest(nullptr, ::std::move(from)) {}
  inline SetPositionRequest& operator=(const SetPositionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPositionRequest& operator=(SetPositionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPositionRequest& default_instance() {
    return *reinterpret_cast<const SetPositionRequest*>(
        &_SetPositionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(SetPositionRequest& a, SetPositionRequest& b) { a.Swap(&b); }
  inline void Swap(SetPositionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPositionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPositionRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetPositionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetPositionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetPositionRequest& from) { SetPositionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetPositionRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.SetPositionRequest"; }

 protected:
  explicit SetPositionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SetPositionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SetPositionRequest& from);
  SetPositionRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SetPositionRequest&& from) noexcept
      : SetPositionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
    kFrameIdFieldNumber = 3,
    kPoseFieldNumber = 2,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // string frame_id = 3 [json_name = "frameId"];
  void clear_frame_id() ;
  const ::std::string& frame_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_frame_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_frame_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_frame_id();
  void set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_frame_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_frame_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_frame_id();

  public:
  // .agricultural.robot.navigation.v1.PoseWithCovariance pose = 2 [json_name = "pose"];
  bool has_pose() const;
  void clear_pose() ;
  const ::agricultural::robot::navigation::v1::PoseWithCovariance& pose() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE release_pose();
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL mutable_pose();
  void set_allocated_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE unsafe_arena_release_pose();

  private:
  const ::agricultural::robot::navigation::v1::PoseWithCovariance& _internal_pose() const;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL _internal_mutable_pose();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.SetPositionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 76,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SetPositionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    ::google::protobuf::internal::ArenaStringPtr frame_id_;
    ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE pose_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SetPositionRequest_class_data_;
// -------------------------------------------------------------------

class PositionUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.PositionUpdate) */ {
 public:
  inline PositionUpdate() : PositionUpdate(nullptr) {}
  ~PositionUpdate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PositionUpdate* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PositionUpdate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PositionUpdate(::google::protobuf::internal::ConstantInitialized);

  inline PositionUpdate(const PositionUpdate& from) : PositionUpdate(nullptr, from) {}
  inline PositionUpdate(PositionUpdate&& from) noexcept
      : PositionUpdate(nullptr, ::std::move(from)) {}
  inline PositionUpdate& operator=(const PositionUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline PositionUpdate& operator=(PositionUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PositionUpdate& default_instance() {
    return *reinterpret_cast<const PositionUpdate*>(
        &_PositionUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(PositionUpdate& a, PositionUpdate& b) { a.Swap(&b); }
  inline void Swap(PositionUpdate* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PositionUpdate* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PositionUpdate* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PositionUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PositionUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PositionUpdate& from) { PositionUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PositionUpdate* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.PositionUpdate"; }

 protected:
  explicit PositionUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PositionUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PositionUpdate& from);
  PositionUpdate(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PositionUpdate&& from) noexcept
      : PositionUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
    kFrameIdFieldNumber = 4,
    kPoseFieldNumber = 2,
    kVelocityFieldNumber = 3,
    kTimestampFieldNumber = 5,
    kQualityFieldNumber = 6,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // string frame_id = 4 [json_name = "frameId"];
  void clear_frame_id() ;
  const ::std::string& frame_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_frame_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_frame_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_frame_id();
  void set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_frame_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_frame_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_frame_id();

  public:
  // .agricultural.robot.navigation.v1.PoseWithCovariance pose = 2 [json_name = "pose"];
  bool has_pose() const;
  void clear_pose() ;
  const ::agricultural::robot::navigation::v1::PoseWithCovariance& pose() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE release_pose();
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL mutable_pose();
  void set_allocated_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE unsafe_arena_release_pose();

  private:
  const ::agricultural::robot::navigation::v1::PoseWithCovariance& _internal_pose() const;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL _internal_mutable_pose();

  public:
  // .agricultural.robot.navigation.v1.Twist velocity = 3 [json_name = "velocity"];
  bool has_velocity() const;
  void clear_velocity() ;
  const ::agricultural::robot::navigation::v1::Twist& velocity() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE release_velocity();
  ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NONNULL mutable_velocity();
  void set_allocated_velocity(::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_velocity(::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE unsafe_arena_release_velocity();

  private:
  const ::agricultural::robot::navigation::v1::Twist& _internal_velocity() const;
  ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NONNULL _internal_mutable_velocity();

  public:
  // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_timestamp();

  public:
  // .agricultural.robot.navigation.v1.LocalizationQuality quality = 6 [json_name = "quality"];
  bool has_quality() const;
  void clear_quality() ;
  const ::agricultural::robot::navigation::v1::LocalizationQuality& quality() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NULLABLE release_quality();
  ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NONNULL mutable_quality();
  void set_allocated_quality(::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quality(::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NULLABLE unsafe_arena_release_quality();

  private:
  const ::agricultural::robot::navigation::v1::LocalizationQuality& _internal_quality() const;
  ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NONNULL _internal_mutable_quality();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.PositionUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   4, 72,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PositionUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    ::google::protobuf::internal::ArenaStringPtr frame_id_;
    ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE pose_;
    ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE velocity_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE timestamp_;
    ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NULLABLE quality_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PositionUpdate_class_data_;
// -------------------------------------------------------------------

class PositionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.PositionResponse) */ {
 public:
  inline PositionResponse() : PositionResponse(nullptr) {}
  ~PositionResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PositionResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PositionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PositionResponse(::google::protobuf::internal::ConstantInitialized);

  inline PositionResponse(const PositionResponse& from) : PositionResponse(nullptr, from) {}
  inline PositionResponse(PositionResponse&& from) noexcept
      : PositionResponse(nullptr, ::std::move(from)) {}
  inline PositionResponse& operator=(const PositionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PositionResponse& operator=(PositionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PositionResponse& default_instance() {
    return *reinterpret_cast<const PositionResponse*>(
        &_PositionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(PositionResponse& a, PositionResponse& b) { a.Swap(&b); }
  inline void Swap(PositionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PositionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PositionResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PositionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PositionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PositionResponse& from) { PositionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PositionResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.PositionResponse"; }

 protected:
  explicit PositionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PositionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PositionResponse& from);
  PositionResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PositionResponse&& from) noexcept
      : PositionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kPoseFieldNumber = 3,
    kTimestampFieldNumber = 4,
    kSuccessFieldNumber = 1,
  };
  // string message = 2 [json_name = "message"];
  void clear_message() ;
  const ::std::string& message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message();
  void set_allocated_message(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message();

  public:
  // optional .agricultural.robot.navigation.v1.PoseWithCovariance pose = 3 [json_name = "pose"];
  bool has_pose() const;
  void clear_pose() ;
  const ::agricultural::robot::navigation::v1::PoseWithCovariance& pose() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE release_pose();
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL mutable_pose();
  void set_allocated_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE unsafe_arena_release_pose();

  private:
  const ::agricultural::robot::navigation::v1::PoseWithCovariance& _internal_pose() const;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL _internal_mutable_pose();

  public:
  // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_timestamp();

  public:
  // bool success = 1 [json_name = "success"];
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.PositionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   2, 65,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PositionResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE pose_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE timestamp_;
    bool success_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PositionResponse_class_data_;
// -------------------------------------------------------------------

class OccupancyGridMap final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.OccupancyGridMap) */ {
 public:
  inline OccupancyGridMap() : OccupancyGridMap(nullptr) {}
  ~OccupancyGridMap() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OccupancyGridMap* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OccupancyGridMap));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OccupancyGridMap(::google::protobuf::internal::ConstantInitialized);

  inline OccupancyGridMap(const OccupancyGridMap& from) : OccupancyGridMap(nullptr, from) {}
  inline OccupancyGridMap(OccupancyGridMap&& from) noexcept
      : OccupancyGridMap(nullptr, ::std::move(from)) {}
  inline OccupancyGridMap& operator=(const OccupancyGridMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline OccupancyGridMap& operator=(OccupancyGridMap&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OccupancyGridMap& default_instance() {
    return *reinterpret_cast<const OccupancyGridMap*>(
        &_OccupancyGridMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(OccupancyGridMap& a, OccupancyGridMap& b) { a.Swap(&b); }
  inline void Swap(OccupancyGridMap* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OccupancyGridMap* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OccupancyGridMap* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OccupancyGridMap>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OccupancyGridMap& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OccupancyGridMap& from) { OccupancyGridMap::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OccupancyGridMap* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.OccupancyGridMap"; }

 protected:
  explicit OccupancyGridMap(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  OccupancyGridMap(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const OccupancyGridMap& from);
  OccupancyGridMap(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, OccupancyGridMap&& from) noexcept
      : OccupancyGridMap(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 2,
    kEncodingFieldNumber = 3,
    kInfoFieldNumber = 1,
  };
  // bytes data = 2 [json_name = "data"];
  void clear_data() ;
  const ::std::string& data() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_data();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_data();
  void set_allocated_data(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_data(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_data();

  public:
  // string encoding = 3 [json_name = "encoding"];
  void clear_encoding() ;
  const ::std::string& encoding() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_encoding(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_encoding();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_encoding();
  void set_allocated_encoding(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_encoding() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_encoding(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_encoding();

  public:
  // .agricultural.robot.navigation.v1.MapMetadata info = 1 [json_name = "info"];
  bool has_info() const;
  void clear_info() ;
  const ::agricultural::robot::navigation::v1::MapMetadata& info() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE release_info();
  ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NONNULL mutable_info();
  void set_allocated_info(::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_info(::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE unsafe_arena_release_info();

  private:
  const ::agricultural::robot::navigation::v1::MapMetadata& _internal_info() const;
  ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NONNULL _internal_mutable_info();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.OccupancyGridMap)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 66,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const OccupancyGridMap& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr encoding_;
    ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull OccupancyGridMap_class_data_;
// -------------------------------------------------------------------

class LocalizationStatusResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.LocalizationStatusResponse) */ {
 public:
  inline LocalizationStatusResponse() : LocalizationStatusResponse(nullptr) {}
  ~LocalizationStatusResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LocalizationStatusResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LocalizationStatusResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LocalizationStatusResponse(::google::protobuf::internal::ConstantInitialized);

  inline LocalizationStatusResponse(const LocalizationStatusResponse& from) : LocalizationStatusResponse(nullptr, from) {}
  inline LocalizationStatusResponse(LocalizationStatusResponse&& from) noexcept
      : LocalizationStatusResponse(nullptr, ::std::move(from)) {}
  inline LocalizationStatusResponse& operator=(const LocalizationStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocalizationStatusResponse& operator=(LocalizationStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LocalizationStatusResponse& default_instance() {
    return *reinterpret_cast<const LocalizationStatusResponse*>(
        &_LocalizationStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 62;
  friend void swap(LocalizationStatusResponse& a, LocalizationStatusResponse& b) { a.Swap(&b); }
  inline void Swap(LocalizationStatusResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocalizationStatusResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LocalizationStatusResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LocalizationStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LocalizationStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LocalizationStatusResponse& from) { LocalizationStatusResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LocalizationStatusResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.LocalizationStatusResponse"; }

 protected:
  explicit LocalizationStatusResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LocalizationStatusResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LocalizationStatusResponse& from);
  LocalizationStatusResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LocalizationStatusResponse&& from) noexcept
      : LocalizationStatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kQualityFieldNumber = 2,
    kCurrentPoseFieldNumber = 3,
    kMetricsFieldNumber = 5,
    kTimestampFieldNumber = 6,
    kStatusFieldNumber = 1,
    kMethodFieldNumber = 4,
  };
  // .agricultural.robot.navigation.v1.LocalizationQuality quality = 2 [json_name = "quality"];
  bool has_quality() const;
  void clear_quality() ;
  const ::agricultural::robot::navigation::v1::LocalizationQuality& quality() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NULLABLE release_quality();
  ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NONNULL mutable_quality();
  void set_allocated_quality(::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quality(::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NULLABLE unsafe_arena_release_quality();

  private:
  const ::agricultural::robot::navigation::v1::LocalizationQuality& _internal_quality() const;
  ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NONNULL _internal_mutable_quality();

  public:
  // .agricultural.robot.navigation.v1.PoseWithCovariance current_pose = 3 [json_name = "currentPose"];
  bool has_current_pose() const;
  void clear_current_pose() ;
  const ::agricultural::robot::navigation::v1::PoseWithCovariance& current_pose() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE release_current_pose();
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL mutable_current_pose();
  void set_allocated_current_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_current_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE unsafe_arena_release_current_pose();

  private:
  const ::agricultural::robot::navigation::v1::PoseWithCovariance& _internal_current_pose() const;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL _internal_mutable_current_pose();

  public:
  // .agricultural.robot.navigation.v1.LocalizationMetrics metrics = 5 [json_name = "metrics"];
  bool has_metrics() const;
  void clear_metrics() ;
  const ::agricultural::robot::navigation::v1::LocalizationMetrics& metrics() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::LocalizationMetrics* PROTOBUF_NULLABLE release_metrics();
  ::agricultural::robot::navigation::v1::LocalizationMetrics* PROTOBUF_NONNULL mutable_metrics();
  void set_allocated_metrics(::agricultural::robot::navigation::v1::LocalizationMetrics* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_metrics(::agricultural::robot::navigation::v1::LocalizationMetrics* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::LocalizationMetrics* PROTOBUF_NULLABLE unsafe_arena_release_metrics();

  private:
  const ::agricultural::robot::navigation::v1::LocalizationMetrics& _internal_metrics() const;
  ::agricultural::robot::navigation::v1::LocalizationMetrics* PROTOBUF_NONNULL _internal_mutable_metrics();

  public:
  // .google.protobuf.Timestamp timestamp = 6 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_timestamp();

  public:
  // .agricultural.robot.navigation.v1.LocalizationStatus status = 1 [json_name = "status"];
  void clear_status() ;
  ::agricultural::robot::navigation::v1::LocalizationStatus status() const;
  void set_status(::agricultural::robot::navigation::v1::LocalizationStatus value);

  private:
  ::agricultural::robot::navigation::v1::LocalizationStatus _internal_status() const;
  void _internal_set_status(::agricultural::robot::navigation::v1::LocalizationStatus value);

  public:
  // .agricultural.robot.navigation.v1.LocalizationMethod method = 4 [json_name = "method"];
  void clear_method() ;
  ::agricultural::robot::navigation::v1::LocalizationMethod method() const;
  void set_method(::agricultural::robot::navigation::v1::LocalizationMethod value);

  private:
  ::agricultural::robot::navigation::v1::LocalizationMethod _internal_method() const;
  void _internal_set_method(::agricultural::robot::navigation::v1::LocalizationMethod value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.LocalizationStatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   4, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LocalizationStatusResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NULLABLE quality_;
    ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE current_pose_;
    ::agricultural::robot::navigation::v1::LocalizationMetrics* PROTOBUF_NULLABLE metrics_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE timestamp_;
    int status_;
    int method_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LocalizationStatusResponse_class_data_;
// -------------------------------------------------------------------

class InitializeLocalizationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.InitializeLocalizationRequest) */ {
 public:
  inline InitializeLocalizationRequest() : InitializeLocalizationRequest(nullptr) {}
  ~InitializeLocalizationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InitializeLocalizationRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InitializeLocalizationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InitializeLocalizationRequest(::google::protobuf::internal::ConstantInitialized);

  inline InitializeLocalizationRequest(const InitializeLocalizationRequest& from) : InitializeLocalizationRequest(nullptr, from) {}
  inline InitializeLocalizationRequest(InitializeLocalizationRequest&& from) noexcept
      : InitializeLocalizationRequest(nullptr, ::std::move(from)) {}
  inline InitializeLocalizationRequest& operator=(const InitializeLocalizationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InitializeLocalizationRequest& operator=(InitializeLocalizationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InitializeLocalizationRequest& default_instance() {
    return *reinterpret_cast<const InitializeLocalizationRequest*>(
        &_InitializeLocalizationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 60;
  friend void swap(InitializeLocalizationRequest& a, InitializeLocalizationRequest& b) { a.Swap(&b); }
  inline void Swap(InitializeLocalizationRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InitializeLocalizationRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InitializeLocalizationRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InitializeLocalizationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InitializeLocalizationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InitializeLocalizationRequest& from) { InitializeLocalizationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InitializeLocalizationRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.InitializeLocalizationRequest"; }

 protected:
  explicit InitializeLocalizationRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  InitializeLocalizationRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const InitializeLocalizationRequest& from);
  InitializeLocalizationRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, InitializeLocalizationRequest&& from) noexcept
      : InitializeLocalizationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParametersFieldNumber = 4,
    kRobotIdFieldNumber = 1,
    kInitialPoseFieldNumber = 2,
    kMethodFieldNumber = 3,
  };
  // map<string, string> parameters = 4 [json_name = "parameters"];
  int parameters_size() const;
  private:
  int _internal_parameters_size() const;

  public:
  void clear_parameters() ;
  const ::google::protobuf::Map<std::string, std::string>& parameters() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_parameters();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_parameters() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_parameters();

  public:
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // optional .agricultural.robot.navigation.v1.PoseWithCovariance initial_pose = 2 [json_name = "initialPose"];
  bool has_initial_pose() const;
  void clear_initial_pose() ;
  const ::agricultural::robot::navigation::v1::PoseWithCovariance& initial_pose() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE release_initial_pose();
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL mutable_initial_pose();
  void set_allocated_initial_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_initial_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE unsafe_arena_release_initial_pose();

  private:
  const ::agricultural::robot::navigation::v1::PoseWithCovariance& _internal_initial_pose() const;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL _internal_mutable_initial_pose();

  public:
  // .agricultural.robot.navigation.v1.LocalizationMethod method = 3 [json_name = "method"];
  void clear_method() ;
  ::agricultural::robot::navigation::v1::LocalizationMethod method() const;
  void set_method(::agricultural::robot::navigation::v1::LocalizationMethod value);

  private:
  ::agricultural::robot::navigation::v1::LocalizationMethod _internal_method() const;
  void _internal_set_method(::agricultural::robot::navigation::v1::LocalizationMethod value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.InitializeLocalizationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   2, 89,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const InitializeLocalizationRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<InitializeLocalizationRequest_ParametersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        parameters_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE initial_pose_;
    int method_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull InitializeLocalizationRequest_class_data_;
// -------------------------------------------------------------------

class SetMapRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.SetMapRequest) */ {
 public:
  inline SetMapRequest() : SetMapRequest(nullptr) {}
  ~SetMapRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetMapRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetMapRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetMapRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetMapRequest(const SetMapRequest& from) : SetMapRequest(nullptr, from) {}
  inline SetMapRequest(SetMapRequest&& from) noexcept
      : SetMapRequest(nullptr, ::std::move(from)) {}
  inline SetMapRequest& operator=(const SetMapRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMapRequest& operator=(SetMapRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMapRequest& default_instance() {
    return *reinterpret_cast<const SetMapRequest*>(
        &_SetMapRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SetMapRequest& a, SetMapRequest& b) { a.Swap(&b); }
  inline void Swap(SetMapRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMapRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMapRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetMapRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetMapRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetMapRequest& from) { SetMapRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetMapRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.SetMapRequest"; }

 protected:
  explicit SetMapRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SetMapRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SetMapRequest& from);
  SetMapRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SetMapRequest&& from) noexcept
      : SetMapRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRobotIdFieldNumber = 1,
    kMapDataFieldNumber = 2,
    kMetadataFieldNumber = 3,
  };
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // .agricultural.robot.navigation.v1.OccupancyGridMap map_data = 2 [json_name = "mapData"];
  bool has_map_data() const;
  void clear_map_data() ;
  const ::agricultural::robot::navigation::v1::OccupancyGridMap& map_data() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NULLABLE release_map_data();
  ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NONNULL mutable_map_data();
  void set_allocated_map_data(::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_map_data(::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NULLABLE unsafe_arena_release_map_data();

  private:
  const ::agricultural::robot::navigation::v1::OccupancyGridMap& _internal_map_data() const;
  ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NONNULL _internal_mutable_map_data();

  public:
  // .agricultural.robot.navigation.v1.MapMetadata metadata = 3 [json_name = "metadata"];
  bool has_metadata() const;
  void clear_metadata() ;
  const ::agricultural::robot::navigation::v1::MapMetadata& metadata() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE release_metadata();
  ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NONNULL mutable_metadata();
  void set_allocated_metadata(::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_metadata(::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE unsafe_arena_release_metadata();

  private:
  const ::agricultural::robot::navigation::v1::MapMetadata& _internal_metadata() const;
  ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NONNULL _internal_mutable_metadata();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.SetMapRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 63,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SetMapRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NULLABLE map_data_;
    ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE metadata_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SetMapRequest_class_data_;
// -------------------------------------------------------------------

class NavigationGoal final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.NavigationGoal) */ {
 public:
  inline NavigationGoal() : NavigationGoal(nullptr) {}
  ~NavigationGoal() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NavigationGoal* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NavigationGoal));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NavigationGoal(::google::protobuf::internal::ConstantInitialized);

  inline NavigationGoal(const NavigationGoal& from) : NavigationGoal(nullptr, from) {}
  inline NavigationGoal(NavigationGoal&& from) noexcept
      : NavigationGoal(nullptr, ::std::move(from)) {}
  inline NavigationGoal& operator=(const NavigationGoal& from) {
    CopyFrom(from);
    return *this;
  }
  inline NavigationGoal& operator=(NavigationGoal&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NavigationGoal& default_instance() {
    return *reinterpret_cast<const NavigationGoal*>(
        &_NavigationGoal_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(NavigationGoal& a, NavigationGoal& b) { a.Swap(&b); }
  inline void Swap(NavigationGoal* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NavigationGoal* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NavigationGoal* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NavigationGoal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NavigationGoal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NavigationGoal& from) { NavigationGoal::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NavigationGoal* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.NavigationGoal"; }

 protected:
  explicit NavigationGoal(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  NavigationGoal(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NavigationGoal& from);
  NavigationGoal(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, NavigationGoal&& from) noexcept
      : NavigationGoal(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWaypointsFieldNumber = 6,
    kRobotIdFieldNumber = 1,
    kGoalIdFieldNumber = 2,
    kFrameIdFieldNumber = 4,
    kTargetPoseFieldNumber = 3,
    kOptionsFieldNumber = 5,
    kDeadlineFieldNumber = 7,
  };
  // repeated .agricultural.robot.navigation.v1.Waypoint waypoints = 6 [json_name = "waypoints"];
  int waypoints_size() const;
  private:
  int _internal_waypoints_size() const;

  public:
  void clear_waypoints() ;
  ::agricultural::robot::navigation::v1::Waypoint* PROTOBUF_NONNULL mutable_waypoints(int index);
  ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::Waypoint>* PROTOBUF_NONNULL mutable_waypoints();

  private:
  const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::Waypoint>& _internal_waypoints() const;
  ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::Waypoint>* PROTOBUF_NONNULL _internal_mutable_waypoints();
  public:
  const ::agricultural::robot::navigation::v1::Waypoint& waypoints(int index) const;
  ::agricultural::robot::navigation::v1::Waypoint* PROTOBUF_NONNULL add_waypoints();
  const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::Waypoint>& waypoints() const;
  // string robot_id = 1 [json_name = "robotId"];
  void clear_robot_id() ;
  const ::std::string& robot_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_robot_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_robot_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_robot_id();
  void set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_robot_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_robot_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_robot_id();

  public:
  // string goal_id = 2 [json_name = "goalId"];
  void clear_goal_id() ;
  const ::std::string& goal_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_goal_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_goal_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_goal_id();
  void set_allocated_goal_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_goal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_goal_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_goal_id();

  public:
  // string frame_id = 4 [json_name = "frameId"];
  void clear_frame_id() ;
  const ::std::string& frame_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_frame_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_frame_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_frame_id();
  void set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_frame_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_frame_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_frame_id();

  public:
  // .agricultural.robot.navigation.v1.PoseWithCovariance target_pose = 3 [json_name = "targetPose"];
  bool has_target_pose() const;
  void clear_target_pose() ;
  const ::agricultural::robot::navigation::v1::PoseWithCovariance& target_pose() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE release_target_pose();
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL mutable_target_pose();
  void set_allocated_target_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_target_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE unsafe_arena_release_target_pose();

  private:
  const ::agricultural::robot::navigation::v1::PoseWithCovariance& _internal_target_pose() const;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL _internal_mutable_target_pose();

  public:
  // .agricultural.robot.navigation.v1.NavigationOptions options = 5 [json_name = "options"];
  bool has_options() const;
  void clear_options() ;
  const ::agricultural::robot::navigation::v1::NavigationOptions& options() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::NavigationOptions* PROTOBUF_NULLABLE release_options();
  ::agricultural::robot::navigation::v1::NavigationOptions* PROTOBUF_NONNULL mutable_options();
  void set_allocated_options(::agricultural::robot::navigation::v1::NavigationOptions* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_options(::agricultural::robot::navigation::v1::NavigationOptions* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::NavigationOptions* PROTOBUF_NULLABLE unsafe_arena_release_options();

  private:
  const ::agricultural::robot::navigation::v1::NavigationOptions& _internal_options() const;
  ::agricultural::robot::navigation::v1::NavigationOptions* PROTOBUF_NONNULL _internal_mutable_options();

  public:
  // .google.protobuf.Timestamp deadline = 7 [json_name = "deadline"];
  bool has_deadline() const;
  void clear_deadline() ;
  const ::google::protobuf::Timestamp& deadline() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_deadline();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_deadline();
  void set_allocated_deadline(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_deadline(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_deadline();

  private:
  const ::google::protobuf::Timestamp& _internal_deadline() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_deadline();

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.NavigationGoal)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   4, 79,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const NavigationGoal& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::agricultural::robot::navigation::v1::Waypoint > waypoints_;
    ::google::protobuf::internal::ArenaStringPtr robot_id_;
    ::google::protobuf::internal::ArenaStringPtr goal_id_;
    ::google::protobuf::internal::ArenaStringPtr frame_id_;
    ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE target_pose_;
    ::agricultural::robot::navigation::v1::NavigationOptions* PROTOBUF_NULLABLE options_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE deadline_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull NavigationGoal_class_data_;
// -------------------------------------------------------------------

class MapResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.MapResponse) */ {
 public:
  inline MapResponse() : MapResponse(nullptr) {}
  ~MapResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MapResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MapResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MapResponse(::google::protobuf::internal::ConstantInitialized);

  inline MapResponse(const MapResponse& from) : MapResponse(nullptr, from) {}
  inline MapResponse(MapResponse&& from) noexcept
      : MapResponse(nullptr, ::std::move(from)) {}
  inline MapResponse& operator=(const MapResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapResponse& operator=(MapResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MapResponse& default_instance() {
    return *reinterpret_cast<const MapResponse*>(
        &_MapResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MapResponse& a, MapResponse& b) { a.Swap(&b); }
  inline void Swap(MapResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MapResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MapResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MapResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MapResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MapResponse& from) { MapResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MapResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.MapResponse"; }

 protected:
  explicit MapResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MapResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MapResponse& from);
  MapResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MapResponse&& from) noexcept
      : MapResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kMapDataFieldNumber = 3,
    kMetadataFieldNumber = 4,
    kTimestampFieldNumber = 5,
    kSuccessFieldNumber = 1,
  };
  // string message = 2 [json_name = "message"];
  void clear_message() ;
  const ::std::string& message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message();
  void set_allocated_message(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message();

  public:
  // optional .agricultural.robot.navigation.v1.OccupancyGridMap map_data = 3 [json_name = "mapData"];
  bool has_map_data() const;
  void clear_map_data() ;
  const ::agricultural::robot::navigation::v1::OccupancyGridMap& map_data() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NULLABLE release_map_data();
  ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NONNULL mutable_map_data();
  void set_allocated_map_data(::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_map_data(::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NULLABLE unsafe_arena_release_map_data();

  private:
  const ::agricultural::robot::navigation::v1::OccupancyGridMap& _internal_map_data() const;
  ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NONNULL _internal_mutable_map_data();

  public:
  // optional .agricultural.robot.navigation.v1.MapMetadata metadata = 4 [json_name = "metadata"];
  bool has_metadata() const;
  void clear_metadata() ;
  const ::agricultural::robot::navigation::v1::MapMetadata& metadata() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE release_metadata();
  ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NONNULL mutable_metadata();
  void set_allocated_metadata(::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_metadata(::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE unsafe_arena_release_metadata();

  private:
  const ::agricultural::robot::navigation::v1::MapMetadata& _internal_metadata() const;
  ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NONNULL _internal_mutable_metadata();

  public:
  // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_timestamp();

  public:
  // bool success = 1 [json_name = "success"];
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.MapResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   3, 60,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MapResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NULLABLE map_data_;
    ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE metadata_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE timestamp_;
    bool success_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MapResponse_class_data_;
// -------------------------------------------------------------------

class NavigationStatusResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:agricultural.robot.navigation.v1.NavigationStatusResponse) */ {
 public:
  inline NavigationStatusResponse() : NavigationStatusResponse(nullptr) {}
  ~NavigationStatusResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NavigationStatusResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NavigationStatusResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NavigationStatusResponse(::google::protobuf::internal::ConstantInitialized);

  inline NavigationStatusResponse(const NavigationStatusResponse& from) : NavigationStatusResponse(nullptr, from) {}
  inline NavigationStatusResponse(NavigationStatusResponse&& from) noexcept
      : NavigationStatusResponse(nullptr, ::std::move(from)) {}
  inline NavigationStatusResponse& operator=(const NavigationStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NavigationStatusResponse& operator=(NavigationStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NavigationStatusResponse& default_instance() {
    return *reinterpret_cast<const NavigationStatusResponse*>(
        &_NavigationStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(NavigationStatusResponse& a, NavigationStatusResponse& b) { a.Swap(&b); }
  inline void Swap(NavigationStatusResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NavigationStatusResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NavigationStatusResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NavigationStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NavigationStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NavigationStatusResponse& from) { NavigationStatusResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NavigationStatusResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "agricultural.robot.navigation.v1.NavigationStatusResponse"; }

 protected:
  explicit NavigationStatusResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  NavigationStatusResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NavigationStatusResponse& from);
  NavigationStatusResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, NavigationStatusResponse&& from) noexcept
      : NavigationStatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorsFieldNumber = 4,
    kProgressFieldNumber = 2,
    kCurrentGoalFieldNumber = 3,
    kTimestampFieldNumber = 5,
    kStatusFieldNumber = 1,
  };
  // repeated .agricultural.robot.navigation.v1.NavigationError errors = 4 [json_name = "errors"];
  int errors_size() const;
  private:
  int _internal_errors_size() const;

  public:
  void clear_errors() ;
  ::agricultural::robot::navigation::v1::NavigationError* PROTOBUF_NONNULL mutable_errors(int index);
  ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::NavigationError>* PROTOBUF_NONNULL mutable_errors();

  private:
  const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::NavigationError>& _internal_errors() const;
  ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::NavigationError>* PROTOBUF_NONNULL _internal_mutable_errors();
  public:
  const ::agricultural::robot::navigation::v1::NavigationError& errors(int index) const;
  ::agricultural::robot::navigation::v1::NavigationError* PROTOBUF_NONNULL add_errors();
  const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::NavigationError>& errors() const;
  // .agricultural.robot.navigation.v1.NavigationProgress progress = 2 [json_name = "progress"];
  bool has_progress() const;
  void clear_progress() ;
  const ::agricultural::robot::navigation::v1::NavigationProgress& progress() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NULLABLE release_progress();
  ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NONNULL mutable_progress();
  void set_allocated_progress(::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_progress(::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NULLABLE unsafe_arena_release_progress();

  private:
  const ::agricultural::robot::navigation::v1::NavigationProgress& _internal_progress() const;
  ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NONNULL _internal_mutable_progress();

  public:
  // optional .agricultural.robot.navigation.v1.NavigationGoal current_goal = 3 [json_name = "currentGoal"];
  bool has_current_goal() const;
  void clear_current_goal() ;
  const ::agricultural::robot::navigation::v1::NavigationGoal& current_goal() const;
  [[nodiscard]] ::agricultural::robot::navigation::v1::NavigationGoal* PROTOBUF_NULLABLE release_current_goal();
  ::agricultural::robot::navigation::v1::NavigationGoal* PROTOBUF_NONNULL mutable_current_goal();
  void set_allocated_current_goal(::agricultural::robot::navigation::v1::NavigationGoal* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_current_goal(::agricultural::robot::navigation::v1::NavigationGoal* PROTOBUF_NULLABLE value);
  ::agricultural::robot::navigation::v1::NavigationGoal* PROTOBUF_NULLABLE unsafe_arena_release_current_goal();

  private:
  const ::agricultural::robot::navigation::v1::NavigationGoal& _internal_current_goal() const;
  ::agricultural::robot::navigation::v1::NavigationGoal* PROTOBUF_NONNULL _internal_mutable_current_goal();

  public:
  // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_timestamp();

  public:
  // .agricultural.robot.navigation.v1.NavigationStatus status = 1 [json_name = "status"];
  void clear_status() ;
  ::agricultural::robot::navigation::v1::NavigationStatus status() const;
  void set_status(::agricultural::robot::navigation::v1::NavigationStatus value);

  private:
  ::agricultural::robot::navigation::v1::NavigationStatus _internal_status() const;
  void _internal_set_status(::agricultural::robot::navigation::v1::NavigationStatus value);

  public:
  // @@protoc_insertion_point(class_scope:agricultural.robot.navigation.v1.NavigationStatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   4, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const NavigationStatusResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::agricultural::robot::navigation::v1::NavigationError > errors_;
    ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NULLABLE progress_;
    ::agricultural::robot::navigation::v1::NavigationGoal* PROTOBUF_NULLABLE current_goal_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE timestamp_;
    int status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull NavigationStatusResponse_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetMapRequest

// string robot_id = 1 [json_name = "robotId"];
inline void GetMapRequest::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetMapRequest::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.GetMapRequest.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetMapRequest::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.GetMapRequest.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL GetMapRequest::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.GetMapRequest.robot_id)
  return _s;
}
inline const ::std::string& GetMapRequest::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void GetMapRequest::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetMapRequest::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetMapRequest::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.GetMapRequest.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void GetMapRequest::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.GetMapRequest.robot_id)
}

// .agricultural.robot.navigation.v1.MapType map_type = 2 [json_name = "mapType"];
inline void GetMapRequest::clear_map_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::agricultural::robot::navigation::v1::MapType GetMapRequest::map_type() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.GetMapRequest.map_type)
  return _internal_map_type();
}
inline void GetMapRequest::set_map_type(::agricultural::robot::navigation::v1::MapType value) {
  _internal_set_map_type(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.GetMapRequest.map_type)
}
inline ::agricultural::robot::navigation::v1::MapType GetMapRequest::_internal_map_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::MapType>(_impl_.map_type_);
}
inline void GetMapRequest::_internal_set_map_type(::agricultural::robot::navigation::v1::MapType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_type_ = value;
}

// optional string frame_id = 3 [json_name = "frameId"];
inline bool GetMapRequest::has_frame_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void GetMapRequest::clear_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& GetMapRequest::frame_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.GetMapRequest.frame_id)
  return _internal_frame_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetMapRequest::set_frame_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.frame_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.GetMapRequest.frame_id)
}
inline ::std::string* PROTOBUF_NONNULL GetMapRequest::mutable_frame_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_frame_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.GetMapRequest.frame_id)
  return _s;
}
inline const ::std::string& GetMapRequest::_internal_frame_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_id_.Get();
}
inline void GetMapRequest::_internal_set_frame_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.frame_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetMapRequest::_internal_mutable_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.frame_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetMapRequest::release_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.GetMapRequest.frame_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.frame_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  return released;
}
inline void GetMapRequest::set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.frame_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.frame_id_.IsDefault()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.GetMapRequest.frame_id)
}

// -------------------------------------------------------------------

// SetMapRequest

// string robot_id = 1 [json_name = "robotId"];
inline void SetMapRequest::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SetMapRequest::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.SetMapRequest.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SetMapRequest::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.SetMapRequest.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL SetMapRequest::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.SetMapRequest.robot_id)
  return _s;
}
inline const ::std::string& SetMapRequest::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void SetMapRequest::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SetMapRequest::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SetMapRequest::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.SetMapRequest.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void SetMapRequest::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.SetMapRequest.robot_id)
}

// .agricultural.robot.navigation.v1.OccupancyGridMap map_data = 2 [json_name = "mapData"];
inline bool SetMapRequest::has_map_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.map_data_ != nullptr);
  return value;
}
inline void SetMapRequest::clear_map_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.map_data_ != nullptr) _impl_.map_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::agricultural::robot::navigation::v1::OccupancyGridMap& SetMapRequest::_internal_map_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::OccupancyGridMap* p = _impl_.map_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::OccupancyGridMap&>(::agricultural::robot::navigation::v1::_OccupancyGridMap_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::OccupancyGridMap& SetMapRequest::map_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.SetMapRequest.map_data)
  return _internal_map_data();
}
inline void SetMapRequest::unsafe_arena_set_allocated_map_data(
    ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.map_data_);
  }
  _impl_.map_data_ = reinterpret_cast<::agricultural::robot::navigation::v1::OccupancyGridMap*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.SetMapRequest.map_data)
}
inline ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NULLABLE SetMapRequest::release_map_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::OccupancyGridMap* released = _impl_.map_data_;
  _impl_.map_data_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NULLABLE SetMapRequest::unsafe_arena_release_map_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.SetMapRequest.map_data)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::OccupancyGridMap* temp = _impl_.map_data_;
  _impl_.map_data_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NONNULL SetMapRequest::_internal_mutable_map_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.map_data_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::OccupancyGridMap>(GetArena());
    _impl_.map_data_ = reinterpret_cast<::agricultural::robot::navigation::v1::OccupancyGridMap*>(p);
  }
  return _impl_.map_data_;
}
inline ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NONNULL SetMapRequest::mutable_map_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::agricultural::robot::navigation::v1::OccupancyGridMap* _msg = _internal_mutable_map_data();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.SetMapRequest.map_data)
  return _msg;
}
inline void SetMapRequest::set_allocated_map_data(::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.map_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.map_data_ = reinterpret_cast<::agricultural::robot::navigation::v1::OccupancyGridMap*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.SetMapRequest.map_data)
}

// .agricultural.robot.navigation.v1.MapMetadata metadata = 3 [json_name = "metadata"];
inline bool SetMapRequest::has_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metadata_ != nullptr);
  return value;
}
inline void SetMapRequest::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::agricultural::robot::navigation::v1::MapMetadata& SetMapRequest::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::MapMetadata* p = _impl_.metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::MapMetadata&>(::agricultural::robot::navigation::v1::_MapMetadata_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::MapMetadata& SetMapRequest::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.SetMapRequest.metadata)
  return _internal_metadata();
}
inline void SetMapRequest::unsafe_arena_set_allocated_metadata(
    ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }
  _impl_.metadata_ = reinterpret_cast<::agricultural::robot::navigation::v1::MapMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.SetMapRequest.metadata)
}
inline ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE SetMapRequest::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::MapMetadata* released = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE SetMapRequest::unsafe_arena_release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.SetMapRequest.metadata)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::MapMetadata* temp = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NONNULL SetMapRequest::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::MapMetadata>(GetArena());
    _impl_.metadata_ = reinterpret_cast<::agricultural::robot::navigation::v1::MapMetadata*>(p);
  }
  return _impl_.metadata_;
}
inline ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NONNULL SetMapRequest::mutable_metadata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::agricultural::robot::navigation::v1::MapMetadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.SetMapRequest.metadata)
  return _msg;
}
inline void SetMapRequest::set_allocated_metadata(::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.metadata_ = reinterpret_cast<::agricultural::robot::navigation::v1::MapMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.SetMapRequest.metadata)
}

// -------------------------------------------------------------------

// UpdateMapRequest

// string robot_id = 1 [json_name = "robotId"];
inline void UpdateMapRequest::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& UpdateMapRequest::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.UpdateMapRequest.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void UpdateMapRequest::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.UpdateMapRequest.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL UpdateMapRequest::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.UpdateMapRequest.robot_id)
  return _s;
}
inline const ::std::string& UpdateMapRequest::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void UpdateMapRequest::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL UpdateMapRequest::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE UpdateMapRequest::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.UpdateMapRequest.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void UpdateMapRequest::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.UpdateMapRequest.robot_id)
}

// .agricultural.robot.navigation.v1.MapUpdate update = 2 [json_name = "update"];
inline bool UpdateMapRequest::has_update() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_ != nullptr);
  return value;
}
inline void UpdateMapRequest::clear_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_ != nullptr) _impl_.update_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::agricultural::robot::navigation::v1::MapUpdate& UpdateMapRequest::_internal_update() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::MapUpdate* p = _impl_.update_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::MapUpdate&>(::agricultural::robot::navigation::v1::_MapUpdate_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::MapUpdate& UpdateMapRequest::update() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.UpdateMapRequest.update)
  return _internal_update();
}
inline void UpdateMapRequest::unsafe_arena_set_allocated_update(
    ::agricultural::robot::navigation::v1::MapUpdate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_);
  }
  _impl_.update_ = reinterpret_cast<::agricultural::robot::navigation::v1::MapUpdate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.UpdateMapRequest.update)
}
inline ::agricultural::robot::navigation::v1::MapUpdate* PROTOBUF_NULLABLE UpdateMapRequest::release_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::MapUpdate* released = _impl_.update_;
  _impl_.update_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::MapUpdate* PROTOBUF_NULLABLE UpdateMapRequest::unsafe_arena_release_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.UpdateMapRequest.update)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::MapUpdate* temp = _impl_.update_;
  _impl_.update_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::MapUpdate* PROTOBUF_NONNULL UpdateMapRequest::_internal_mutable_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::MapUpdate>(GetArena());
    _impl_.update_ = reinterpret_cast<::agricultural::robot::navigation::v1::MapUpdate*>(p);
  }
  return _impl_.update_;
}
inline ::agricultural::robot::navigation::v1::MapUpdate* PROTOBUF_NONNULL UpdateMapRequest::mutable_update()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::agricultural::robot::navigation::v1::MapUpdate* _msg = _internal_mutable_update();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.UpdateMapRequest.update)
  return _msg;
}
inline void UpdateMapRequest::set_allocated_update(::agricultural::robot::navigation::v1::MapUpdate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.update_ = reinterpret_cast<::agricultural::robot::navigation::v1::MapUpdate*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.UpdateMapRequest.update)
}

// -------------------------------------------------------------------

// ClearMapRequest

// string robot_id = 1 [json_name = "robotId"];
inline void ClearMapRequest::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ClearMapRequest::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.ClearMapRequest.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ClearMapRequest::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.ClearMapRequest.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL ClearMapRequest::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.ClearMapRequest.robot_id)
  return _s;
}
inline const ::std::string& ClearMapRequest::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void ClearMapRequest::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ClearMapRequest::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ClearMapRequest::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.ClearMapRequest.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void ClearMapRequest::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.ClearMapRequest.robot_id)
}

// .agricultural.robot.navigation.v1.MapType map_type = 2 [json_name = "mapType"];
inline void ClearMapRequest::clear_map_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::agricultural::robot::navigation::v1::MapType ClearMapRequest::map_type() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.ClearMapRequest.map_type)
  return _internal_map_type();
}
inline void ClearMapRequest::set_map_type(::agricultural::robot::navigation::v1::MapType value) {
  _internal_set_map_type(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.ClearMapRequest.map_type)
}
inline ::agricultural::robot::navigation::v1::MapType ClearMapRequest::_internal_map_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::MapType>(_impl_.map_type_);
}
inline void ClearMapRequest::_internal_set_map_type(::agricultural::robot::navigation::v1::MapType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_type_ = value;
}

// -------------------------------------------------------------------

// MapResponse

// bool success = 1 [json_name = "success"];
inline void MapResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool MapResponse::success() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.MapResponse.success)
  return _internal_success();
}
inline void MapResponse::set_success(bool value) {
  _internal_set_success(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.MapResponse.success)
}
inline bool MapResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void MapResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2 [json_name = "message"];
inline void MapResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MapResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.MapResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MapResponse::set_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.MapResponse.message)
}
inline ::std::string* PROTOBUF_NONNULL MapResponse::mutable_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.MapResponse.message)
  return _s;
}
inline const ::std::string& MapResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void MapResponse::_internal_set_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MapResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MapResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.MapResponse.message)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_.Set("", GetArena());
  }
  return released;
}
inline void MapResponse::set_allocated_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.MapResponse.message)
}

// optional .agricultural.robot.navigation.v1.OccupancyGridMap map_data = 3 [json_name = "mapData"];
inline bool MapResponse::has_map_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.map_data_ != nullptr);
  return value;
}
inline void MapResponse::clear_map_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.map_data_ != nullptr) _impl_.map_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::agricultural::robot::navigation::v1::OccupancyGridMap& MapResponse::_internal_map_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::OccupancyGridMap* p = _impl_.map_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::OccupancyGridMap&>(::agricultural::robot::navigation::v1::_OccupancyGridMap_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::OccupancyGridMap& MapResponse::map_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.MapResponse.map_data)
  return _internal_map_data();
}
inline void MapResponse::unsafe_arena_set_allocated_map_data(
    ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.map_data_);
  }
  _impl_.map_data_ = reinterpret_cast<::agricultural::robot::navigation::v1::OccupancyGridMap*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.MapResponse.map_data)
}
inline ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NULLABLE MapResponse::release_map_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::OccupancyGridMap* released = _impl_.map_data_;
  _impl_.map_data_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NULLABLE MapResponse::unsafe_arena_release_map_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.MapResponse.map_data)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::OccupancyGridMap* temp = _impl_.map_data_;
  _impl_.map_data_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NONNULL MapResponse::_internal_mutable_map_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.map_data_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::OccupancyGridMap>(GetArena());
    _impl_.map_data_ = reinterpret_cast<::agricultural::robot::navigation::v1::OccupancyGridMap*>(p);
  }
  return _impl_.map_data_;
}
inline ::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NONNULL MapResponse::mutable_map_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::agricultural::robot::navigation::v1::OccupancyGridMap* _msg = _internal_mutable_map_data();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.MapResponse.map_data)
  return _msg;
}
inline void MapResponse::set_allocated_map_data(::agricultural::robot::navigation::v1::OccupancyGridMap* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.map_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.map_data_ = reinterpret_cast<::agricultural::robot::navigation::v1::OccupancyGridMap*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.MapResponse.map_data)
}

// optional .agricultural.robot.navigation.v1.MapMetadata metadata = 4 [json_name = "metadata"];
inline bool MapResponse::has_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metadata_ != nullptr);
  return value;
}
inline void MapResponse::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::agricultural::robot::navigation::v1::MapMetadata& MapResponse::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::MapMetadata* p = _impl_.metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::MapMetadata&>(::agricultural::robot::navigation::v1::_MapMetadata_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::MapMetadata& MapResponse::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.MapResponse.metadata)
  return _internal_metadata();
}
inline void MapResponse::unsafe_arena_set_allocated_metadata(
    ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }
  _impl_.metadata_ = reinterpret_cast<::agricultural::robot::navigation::v1::MapMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.MapResponse.metadata)
}
inline ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE MapResponse::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::MapMetadata* released = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE MapResponse::unsafe_arena_release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.MapResponse.metadata)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::MapMetadata* temp = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NONNULL MapResponse::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::MapMetadata>(GetArena());
    _impl_.metadata_ = reinterpret_cast<::agricultural::robot::navigation::v1::MapMetadata*>(p);
  }
  return _impl_.metadata_;
}
inline ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NONNULL MapResponse::mutable_metadata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::agricultural::robot::navigation::v1::MapMetadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.MapResponse.metadata)
  return _msg;
}
inline void MapResponse::set_allocated_metadata(::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.metadata_ = reinterpret_cast<::agricultural::robot::navigation::v1::MapMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.MapResponse.metadata)
}

// .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
inline bool MapResponse::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MapResponse::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MapResponse::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.MapResponse.timestamp)
  return _internal_timestamp();
}
inline void MapResponse::unsafe_arena_set_allocated_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.MapResponse.timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MapResponse::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MapResponse::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.MapResponse.timestamp)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MapResponse::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MapResponse::mutable_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.MapResponse.timestamp)
  return _msg;
}
inline void MapResponse::set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.MapResponse.timestamp)
}

// -------------------------------------------------------------------

// OccupancyGridMap

// .agricultural.robot.navigation.v1.MapMetadata info = 1 [json_name = "info"];
inline bool OccupancyGridMap::has_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.info_ != nullptr);
  return value;
}
inline void OccupancyGridMap::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.info_ != nullptr) _impl_.info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::agricultural::robot::navigation::v1::MapMetadata& OccupancyGridMap::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::MapMetadata* p = _impl_.info_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::MapMetadata&>(::agricultural::robot::navigation::v1::_MapMetadata_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::MapMetadata& OccupancyGridMap::info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.OccupancyGridMap.info)
  return _internal_info();
}
inline void OccupancyGridMap::unsafe_arena_set_allocated_info(
    ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.info_);
  }
  _impl_.info_ = reinterpret_cast<::agricultural::robot::navigation::v1::MapMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.OccupancyGridMap.info)
}
inline ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE OccupancyGridMap::release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::MapMetadata* released = _impl_.info_;
  _impl_.info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE OccupancyGridMap::unsafe_arena_release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.OccupancyGridMap.info)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::MapMetadata* temp = _impl_.info_;
  _impl_.info_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NONNULL OccupancyGridMap::_internal_mutable_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::MapMetadata>(GetArena());
    _impl_.info_ = reinterpret_cast<::agricultural::robot::navigation::v1::MapMetadata*>(p);
  }
  return _impl_.info_;
}
inline ::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NONNULL OccupancyGridMap::mutable_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::agricultural::robot::navigation::v1::MapMetadata* _msg = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.OccupancyGridMap.info)
  return _msg;
}
inline void OccupancyGridMap::set_allocated_info(::agricultural::robot::navigation::v1::MapMetadata* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.info_ = reinterpret_cast<::agricultural::robot::navigation::v1::MapMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.OccupancyGridMap.info)
}

// bytes data = 2 [json_name = "data"];
inline void OccupancyGridMap::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& OccupancyGridMap::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.OccupancyGridMap.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void OccupancyGridMap::set_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.OccupancyGridMap.data)
}
inline ::std::string* PROTOBUF_NONNULL OccupancyGridMap::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.OccupancyGridMap.data)
  return _s;
}
inline const ::std::string& OccupancyGridMap::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void OccupancyGridMap::_internal_set_data(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL OccupancyGridMap::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.data_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE OccupancyGridMap::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.OccupancyGridMap.data)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.data_.Set("", GetArena());
  }
  return released;
}
inline void OccupancyGridMap::set_allocated_data(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.OccupancyGridMap.data)
}

// string encoding = 3 [json_name = "encoding"];
inline void OccupancyGridMap::clear_encoding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encoding_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& OccupancyGridMap::encoding() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.OccupancyGridMap.encoding)
  return _internal_encoding();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void OccupancyGridMap::set_encoding(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.encoding_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.OccupancyGridMap.encoding)
}
inline ::std::string* PROTOBUF_NONNULL OccupancyGridMap::mutable_encoding()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_encoding();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.OccupancyGridMap.encoding)
  return _s;
}
inline const ::std::string& OccupancyGridMap::_internal_encoding() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.encoding_.Get();
}
inline void OccupancyGridMap::_internal_set_encoding(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.encoding_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL OccupancyGridMap::_internal_mutable_encoding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.encoding_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE OccupancyGridMap::release_encoding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.OccupancyGridMap.encoding)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.encoding_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.encoding_.Set("", GetArena());
  }
  return released;
}
inline void OccupancyGridMap::set_allocated_encoding(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.encoding_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.encoding_.IsDefault()) {
    _impl_.encoding_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.OccupancyGridMap.encoding)
}

// -------------------------------------------------------------------

// MapMetadata

// .google.protobuf.Timestamp map_load_time = 1 [json_name = "mapLoadTime"];
inline bool MapMetadata::has_map_load_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.map_load_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MapMetadata::_internal_map_load_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.map_load_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MapMetadata::map_load_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.MapMetadata.map_load_time)
  return _internal_map_load_time();
}
inline void MapMetadata::unsafe_arena_set_allocated_map_load_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.map_load_time_);
  }
  _impl_.map_load_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.MapMetadata.map_load_time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MapMetadata::release_map_load_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.map_load_time_;
  _impl_.map_load_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MapMetadata::unsafe_arena_release_map_load_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.MapMetadata.map_load_time)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.map_load_time_;
  _impl_.map_load_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MapMetadata::_internal_mutable_map_load_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.map_load_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.map_load_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.map_load_time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MapMetadata::mutable_map_load_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_map_load_time();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.MapMetadata.map_load_time)
  return _msg;
}
inline void MapMetadata::set_allocated_map_load_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.map_load_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.map_load_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.MapMetadata.map_load_time)
}

// float resolution = 2 [json_name = "resolution"];
inline void MapMetadata::clear_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolution_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float MapMetadata::resolution() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.MapMetadata.resolution)
  return _internal_resolution();
}
inline void MapMetadata::set_resolution(float value) {
  _internal_set_resolution(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.MapMetadata.resolution)
}
inline float MapMetadata::_internal_resolution() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resolution_;
}
inline void MapMetadata::_internal_set_resolution(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolution_ = value;
}

// uint32 width = 3 [json_name = "width"];
inline void MapMetadata::clear_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t MapMetadata::width() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.MapMetadata.width)
  return _internal_width();
}
inline void MapMetadata::set_width(::uint32_t value) {
  _internal_set_width(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.MapMetadata.width)
}
inline ::uint32_t MapMetadata::_internal_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.width_;
}
inline void MapMetadata::_internal_set_width(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = value;
}

// uint32 height = 4 [json_name = "height"];
inline void MapMetadata::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t MapMetadata::height() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.MapMetadata.height)
  return _internal_height();
}
inline void MapMetadata::set_height(::uint32_t value) {
  _internal_set_height(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.MapMetadata.height)
}
inline ::uint32_t MapMetadata::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void MapMetadata::_internal_set_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// .agricultural.robot.navigation.v1.Pose origin = 5 [json_name = "origin"];
inline bool MapMetadata::has_origin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.origin_ != nullptr);
  return value;
}
inline void MapMetadata::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::agricultural::robot::navigation::v1::Pose& MapMetadata::_internal_origin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::Pose* p = _impl_.origin_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::Pose&>(::agricultural::robot::navigation::v1::_Pose_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::Pose& MapMetadata::origin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.MapMetadata.origin)
  return _internal_origin();
}
inline void MapMetadata::unsafe_arena_set_allocated_origin(
    ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.origin_);
  }
  _impl_.origin_ = reinterpret_cast<::agricultural::robot::navigation::v1::Pose*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.MapMetadata.origin)
}
inline ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE MapMetadata::release_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::Pose* released = _impl_.origin_;
  _impl_.origin_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE MapMetadata::unsafe_arena_release_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.MapMetadata.origin)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::Pose* temp = _impl_.origin_;
  _impl_.origin_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NONNULL MapMetadata::_internal_mutable_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::Pose>(GetArena());
    _impl_.origin_ = reinterpret_cast<::agricultural::robot::navigation::v1::Pose*>(p);
  }
  return _impl_.origin_;
}
inline ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NONNULL MapMetadata::mutable_origin()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::agricultural::robot::navigation::v1::Pose* _msg = _internal_mutable_origin();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.MapMetadata.origin)
  return _msg;
}
inline void MapMetadata::set_allocated_origin(::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.origin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.origin_ = reinterpret_cast<::agricultural::robot::navigation::v1::Pose*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.MapMetadata.origin)
}

// string frame_id = 6 [json_name = "frameId"];
inline void MapMetadata::clear_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MapMetadata::frame_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.MapMetadata.frame_id)
  return _internal_frame_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MapMetadata::set_frame_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.frame_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.MapMetadata.frame_id)
}
inline ::std::string* PROTOBUF_NONNULL MapMetadata::mutable_frame_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_frame_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.MapMetadata.frame_id)
  return _s;
}
inline const ::std::string& MapMetadata::_internal_frame_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_id_.Get();
}
inline void MapMetadata::_internal_set_frame_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.frame_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MapMetadata::_internal_mutable_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.frame_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MapMetadata::release_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.MapMetadata.frame_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.frame_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  return released;
}
inline void MapMetadata::set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.frame_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.frame_id_.IsDefault()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.MapMetadata.frame_id)
}

// uint32 version = 7 [json_name = "version"];
inline void MapMetadata::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t MapMetadata::version() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.MapMetadata.version)
  return _internal_version();
}
inline void MapMetadata::set_version(::uint32_t value) {
  _internal_set_version(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.MapMetadata.version)
}
inline ::uint32_t MapMetadata::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void MapMetadata::_internal_set_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// .agricultural.robot.navigation.v1.MapSource source = 8 [json_name = "source"];
inline void MapMetadata::clear_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::agricultural::robot::navigation::v1::MapSource MapMetadata::source() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.MapMetadata.source)
  return _internal_source();
}
inline void MapMetadata::set_source(::agricultural::robot::navigation::v1::MapSource value) {
  _internal_set_source(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.MapMetadata.source)
}
inline ::agricultural::robot::navigation::v1::MapSource MapMetadata::_internal_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::MapSource>(_impl_.source_);
}
inline void MapMetadata::_internal_set_source(::agricultural::robot::navigation::v1::MapSource value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_ = value;
}

// -------------------------------------------------------------------

// MapUpdate

// .agricultural.robot.navigation.v1.Rectangle update_region = 1 [json_name = "updateRegion"];
inline bool MapUpdate::has_update_region() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_region_ != nullptr);
  return value;
}
inline void MapUpdate::clear_update_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_region_ != nullptr) _impl_.update_region_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::agricultural::robot::navigation::v1::Rectangle& MapUpdate::_internal_update_region() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::Rectangle* p = _impl_.update_region_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::Rectangle&>(::agricultural::robot::navigation::v1::_Rectangle_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::Rectangle& MapUpdate::update_region() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.MapUpdate.update_region)
  return _internal_update_region();
}
inline void MapUpdate::unsafe_arena_set_allocated_update_region(
    ::agricultural::robot::navigation::v1::Rectangle* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_region_);
  }
  _impl_.update_region_ = reinterpret_cast<::agricultural::robot::navigation::v1::Rectangle*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.MapUpdate.update_region)
}
inline ::agricultural::robot::navigation::v1::Rectangle* PROTOBUF_NULLABLE MapUpdate::release_update_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::Rectangle* released = _impl_.update_region_;
  _impl_.update_region_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::Rectangle* PROTOBUF_NULLABLE MapUpdate::unsafe_arena_release_update_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.MapUpdate.update_region)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::Rectangle* temp = _impl_.update_region_;
  _impl_.update_region_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::Rectangle* PROTOBUF_NONNULL MapUpdate::_internal_mutable_update_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_region_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::Rectangle>(GetArena());
    _impl_.update_region_ = reinterpret_cast<::agricultural::robot::navigation::v1::Rectangle*>(p);
  }
  return _impl_.update_region_;
}
inline ::agricultural::robot::navigation::v1::Rectangle* PROTOBUF_NONNULL MapUpdate::mutable_update_region()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::agricultural::robot::navigation::v1::Rectangle* _msg = _internal_mutable_update_region();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.MapUpdate.update_region)
  return _msg;
}
inline void MapUpdate::set_allocated_update_region(::agricultural::robot::navigation::v1::Rectangle* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_region_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.update_region_ = reinterpret_cast<::agricultural::robot::navigation::v1::Rectangle*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.MapUpdate.update_region)
}

// bytes data = 2 [json_name = "data"];
inline void MapUpdate::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MapUpdate::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.MapUpdate.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MapUpdate::set_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.MapUpdate.data)
}
inline ::std::string* PROTOBUF_NONNULL MapUpdate::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.MapUpdate.data)
  return _s;
}
inline const ::std::string& MapUpdate::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void MapUpdate::_internal_set_data(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MapUpdate::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.data_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MapUpdate::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.MapUpdate.data)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.data_.Set("", GetArena());
  }
  return released;
}
inline void MapUpdate::set_allocated_data(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.MapUpdate.data)
}

// .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
inline bool MapUpdate::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MapUpdate::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MapUpdate::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.MapUpdate.timestamp)
  return _internal_timestamp();
}
inline void MapUpdate::unsafe_arena_set_allocated_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.MapUpdate.timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MapUpdate::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MapUpdate::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.MapUpdate.timestamp)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MapUpdate::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MapUpdate::mutable_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.MapUpdate.timestamp)
  return _msg;
}
inline void MapUpdate::set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.MapUpdate.timestamp)
}

// -------------------------------------------------------------------

// Rectangle

// .agricultural.robot.navigation.v1.Point2D min = 1 [json_name = "min"];
inline bool Rectangle::has_min() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.min_ != nullptr);
  return value;
}
inline void Rectangle::clear_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.min_ != nullptr) _impl_.min_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::agricultural::robot::navigation::v1::Point2D& Rectangle::_internal_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::Point2D* p = _impl_.min_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::Point2D&>(::agricultural::robot::navigation::v1::_Point2D_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::Point2D& Rectangle::min() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Rectangle.min)
  return _internal_min();
}
inline void Rectangle::unsafe_arena_set_allocated_min(
    ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.min_);
  }
  _impl_.min_ = reinterpret_cast<::agricultural::robot::navigation::v1::Point2D*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.Rectangle.min)
}
inline ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NULLABLE Rectangle::release_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::agricultural::robot::navigation::v1::Point2D* released = _impl_.min_;
  _impl_.min_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NULLABLE Rectangle::unsafe_arena_release_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.Rectangle.min)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::agricultural::robot::navigation::v1::Point2D* temp = _impl_.min_;
  _impl_.min_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NONNULL Rectangle::_internal_mutable_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.min_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::Point2D>(GetArena());
    _impl_.min_ = reinterpret_cast<::agricultural::robot::navigation::v1::Point2D*>(p);
  }
  return _impl_.min_;
}
inline ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NONNULL Rectangle::mutable_min()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::agricultural::robot::navigation::v1::Point2D* _msg = _internal_mutable_min();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.Rectangle.min)
  return _msg;
}
inline void Rectangle::set_allocated_min(::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.min_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.min_ = reinterpret_cast<::agricultural::robot::navigation::v1::Point2D*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.Rectangle.min)
}

// .agricultural.robot.navigation.v1.Point2D max = 2 [json_name = "max"];
inline bool Rectangle::has_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.max_ != nullptr);
  return value;
}
inline void Rectangle::clear_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.max_ != nullptr) _impl_.max_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::agricultural::robot::navigation::v1::Point2D& Rectangle::_internal_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::Point2D* p = _impl_.max_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::Point2D&>(::agricultural::robot::navigation::v1::_Point2D_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::Point2D& Rectangle::max() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Rectangle.max)
  return _internal_max();
}
inline void Rectangle::unsafe_arena_set_allocated_max(
    ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.max_);
  }
  _impl_.max_ = reinterpret_cast<::agricultural::robot::navigation::v1::Point2D*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.Rectangle.max)
}
inline ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NULLABLE Rectangle::release_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::Point2D* released = _impl_.max_;
  _impl_.max_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NULLABLE Rectangle::unsafe_arena_release_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.Rectangle.max)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::Point2D* temp = _impl_.max_;
  _impl_.max_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NONNULL Rectangle::_internal_mutable_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.max_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::Point2D>(GetArena());
    _impl_.max_ = reinterpret_cast<::agricultural::robot::navigation::v1::Point2D*>(p);
  }
  return _impl_.max_;
}
inline ::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NONNULL Rectangle::mutable_max()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::agricultural::robot::navigation::v1::Point2D* _msg = _internal_mutable_max();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.Rectangle.max)
  return _msg;
}
inline void Rectangle::set_allocated_max(::agricultural::robot::navigation::v1::Point2D* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.max_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.max_ = reinterpret_cast<::agricultural::robot::navigation::v1::Point2D*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.Rectangle.max)
}

// -------------------------------------------------------------------

// GetPositionRequest

// string robot_id = 1 [json_name = "robotId"];
inline void GetPositionRequest::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetPositionRequest::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.GetPositionRequest.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetPositionRequest::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.GetPositionRequest.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL GetPositionRequest::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.GetPositionRequest.robot_id)
  return _s;
}
inline const ::std::string& GetPositionRequest::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void GetPositionRequest::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetPositionRequest::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetPositionRequest::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.GetPositionRequest.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void GetPositionRequest::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.GetPositionRequest.robot_id)
}

// string frame_id = 2 [json_name = "frameId"];
inline void GetPositionRequest::clear_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& GetPositionRequest::frame_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.GetPositionRequest.frame_id)
  return _internal_frame_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetPositionRequest::set_frame_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.frame_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.GetPositionRequest.frame_id)
}
inline ::std::string* PROTOBUF_NONNULL GetPositionRequest::mutable_frame_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_frame_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.GetPositionRequest.frame_id)
  return _s;
}
inline const ::std::string& GetPositionRequest::_internal_frame_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_id_.Get();
}
inline void GetPositionRequest::_internal_set_frame_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.frame_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetPositionRequest::_internal_mutable_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.frame_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetPositionRequest::release_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.GetPositionRequest.frame_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.frame_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  return released;
}
inline void GetPositionRequest::set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.frame_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.frame_id_.IsDefault()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.GetPositionRequest.frame_id)
}

// -------------------------------------------------------------------

// SetPositionRequest

// string robot_id = 1 [json_name = "robotId"];
inline void SetPositionRequest::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SetPositionRequest::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.SetPositionRequest.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SetPositionRequest::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.SetPositionRequest.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL SetPositionRequest::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.SetPositionRequest.robot_id)
  return _s;
}
inline const ::std::string& SetPositionRequest::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void SetPositionRequest::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SetPositionRequest::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SetPositionRequest::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.SetPositionRequest.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void SetPositionRequest::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.SetPositionRequest.robot_id)
}

// .agricultural.robot.navigation.v1.PoseWithCovariance pose = 2 [json_name = "pose"];
inline bool SetPositionRequest::has_pose() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pose_ != nullptr);
  return value;
}
inline void SetPositionRequest::clear_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pose_ != nullptr) _impl_.pose_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::agricultural::robot::navigation::v1::PoseWithCovariance& SetPositionRequest::_internal_pose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::PoseWithCovariance* p = _impl_.pose_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::PoseWithCovariance&>(::agricultural::robot::navigation::v1::_PoseWithCovariance_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::PoseWithCovariance& SetPositionRequest::pose() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.SetPositionRequest.pose)
  return _internal_pose();
}
inline void SetPositionRequest::unsafe_arena_set_allocated_pose(
    ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose_);
  }
  _impl_.pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.SetPositionRequest.pose)
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE SetPositionRequest::release_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* released = _impl_.pose_;
  _impl_.pose_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE SetPositionRequest::unsafe_arena_release_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.SetPositionRequest.pose)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* temp = _impl_.pose_;
  _impl_.pose_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL SetPositionRequest::_internal_mutable_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pose_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::PoseWithCovariance>(GetArena());
    _impl_.pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(p);
  }
  return _impl_.pose_;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL SetPositionRequest::mutable_pose()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* _msg = _internal_mutable_pose();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.SetPositionRequest.pose)
  return _msg;
}
inline void SetPositionRequest::set_allocated_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.SetPositionRequest.pose)
}

// string frame_id = 3 [json_name = "frameId"];
inline void SetPositionRequest::clear_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& SetPositionRequest::frame_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.SetPositionRequest.frame_id)
  return _internal_frame_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SetPositionRequest::set_frame_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.frame_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.SetPositionRequest.frame_id)
}
inline ::std::string* PROTOBUF_NONNULL SetPositionRequest::mutable_frame_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_frame_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.SetPositionRequest.frame_id)
  return _s;
}
inline const ::std::string& SetPositionRequest::_internal_frame_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_id_.Get();
}
inline void SetPositionRequest::_internal_set_frame_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.frame_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SetPositionRequest::_internal_mutable_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.frame_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SetPositionRequest::release_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.SetPositionRequest.frame_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.frame_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  return released;
}
inline void SetPositionRequest::set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.frame_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.frame_id_.IsDefault()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.SetPositionRequest.frame_id)
}

// -------------------------------------------------------------------

// StreamPositionRequest

// string robot_id = 1 [json_name = "robotId"];
inline void StreamPositionRequest::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StreamPositionRequest::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.StreamPositionRequest.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void StreamPositionRequest::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.StreamPositionRequest.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL StreamPositionRequest::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.StreamPositionRequest.robot_id)
  return _s;
}
inline const ::std::string& StreamPositionRequest::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void StreamPositionRequest::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL StreamPositionRequest::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE StreamPositionRequest::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.StreamPositionRequest.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void StreamPositionRequest::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.StreamPositionRequest.robot_id)
}

// string frame_id = 2 [json_name = "frameId"];
inline void StreamPositionRequest::clear_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& StreamPositionRequest::frame_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.StreamPositionRequest.frame_id)
  return _internal_frame_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void StreamPositionRequest::set_frame_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.frame_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.StreamPositionRequest.frame_id)
}
inline ::std::string* PROTOBUF_NONNULL StreamPositionRequest::mutable_frame_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_frame_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.StreamPositionRequest.frame_id)
  return _s;
}
inline const ::std::string& StreamPositionRequest::_internal_frame_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_id_.Get();
}
inline void StreamPositionRequest::_internal_set_frame_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.frame_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL StreamPositionRequest::_internal_mutable_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.frame_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE StreamPositionRequest::release_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.StreamPositionRequest.frame_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.frame_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  return released;
}
inline void StreamPositionRequest::set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.frame_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.frame_id_.IsDefault()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.StreamPositionRequest.frame_id)
}

// uint32 frequency_hz = 3 [json_name = "frequencyHz"];
inline void StreamPositionRequest::clear_frequency_hz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frequency_hz_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t StreamPositionRequest::frequency_hz() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.StreamPositionRequest.frequency_hz)
  return _internal_frequency_hz();
}
inline void StreamPositionRequest::set_frequency_hz(::uint32_t value) {
  _internal_set_frequency_hz(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.StreamPositionRequest.frequency_hz)
}
inline ::uint32_t StreamPositionRequest::_internal_frequency_hz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frequency_hz_;
}
inline void StreamPositionRequest::_internal_set_frequency_hz(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frequency_hz_ = value;
}

// -------------------------------------------------------------------

// PositionResponse

// bool success = 1 [json_name = "success"];
inline void PositionResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool PositionResponse::success() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.PositionResponse.success)
  return _internal_success();
}
inline void PositionResponse::set_success(bool value) {
  _internal_set_success(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.PositionResponse.success)
}
inline bool PositionResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void PositionResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2 [json_name = "message"];
inline void PositionResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PositionResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.PositionResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PositionResponse::set_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.PositionResponse.message)
}
inline ::std::string* PROTOBUF_NONNULL PositionResponse::mutable_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.PositionResponse.message)
  return _s;
}
inline const ::std::string& PositionResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void PositionResponse::_internal_set_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PositionResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PositionResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.PositionResponse.message)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_.Set("", GetArena());
  }
  return released;
}
inline void PositionResponse::set_allocated_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.PositionResponse.message)
}

// optional .agricultural.robot.navigation.v1.PoseWithCovariance pose = 3 [json_name = "pose"];
inline bool PositionResponse::has_pose() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pose_ != nullptr);
  return value;
}
inline void PositionResponse::clear_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pose_ != nullptr) _impl_.pose_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::agricultural::robot::navigation::v1::PoseWithCovariance& PositionResponse::_internal_pose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::PoseWithCovariance* p = _impl_.pose_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::PoseWithCovariance&>(::agricultural::robot::navigation::v1::_PoseWithCovariance_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::PoseWithCovariance& PositionResponse::pose() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.PositionResponse.pose)
  return _internal_pose();
}
inline void PositionResponse::unsafe_arena_set_allocated_pose(
    ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose_);
  }
  _impl_.pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.PositionResponse.pose)
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE PositionResponse::release_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* released = _impl_.pose_;
  _impl_.pose_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE PositionResponse::unsafe_arena_release_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.PositionResponse.pose)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* temp = _impl_.pose_;
  _impl_.pose_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL PositionResponse::_internal_mutable_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pose_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::PoseWithCovariance>(GetArena());
    _impl_.pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(p);
  }
  return _impl_.pose_;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL PositionResponse::mutable_pose()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* _msg = _internal_mutable_pose();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.PositionResponse.pose)
  return _msg;
}
inline void PositionResponse::set_allocated_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.PositionResponse.pose)
}

// .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
inline bool PositionResponse::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& PositionResponse::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& PositionResponse::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.PositionResponse.timestamp)
  return _internal_timestamp();
}
inline void PositionResponse::unsafe_arena_set_allocated_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.PositionResponse.timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE PositionResponse::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE PositionResponse::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.PositionResponse.timestamp)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL PositionResponse::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL PositionResponse::mutable_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.PositionResponse.timestamp)
  return _msg;
}
inline void PositionResponse::set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.PositionResponse.timestamp)
}

// -------------------------------------------------------------------

// PositionUpdate

// string robot_id = 1 [json_name = "robotId"];
inline void PositionUpdate::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PositionUpdate::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.PositionUpdate.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PositionUpdate::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.PositionUpdate.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL PositionUpdate::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.PositionUpdate.robot_id)
  return _s;
}
inline const ::std::string& PositionUpdate::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void PositionUpdate::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PositionUpdate::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PositionUpdate::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.PositionUpdate.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void PositionUpdate::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.PositionUpdate.robot_id)
}

// .agricultural.robot.navigation.v1.PoseWithCovariance pose = 2 [json_name = "pose"];
inline bool PositionUpdate::has_pose() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pose_ != nullptr);
  return value;
}
inline void PositionUpdate::clear_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pose_ != nullptr) _impl_.pose_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::agricultural::robot::navigation::v1::PoseWithCovariance& PositionUpdate::_internal_pose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::PoseWithCovariance* p = _impl_.pose_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::PoseWithCovariance&>(::agricultural::robot::navigation::v1::_PoseWithCovariance_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::PoseWithCovariance& PositionUpdate::pose() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.PositionUpdate.pose)
  return _internal_pose();
}
inline void PositionUpdate::unsafe_arena_set_allocated_pose(
    ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose_);
  }
  _impl_.pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.PositionUpdate.pose)
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE PositionUpdate::release_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* released = _impl_.pose_;
  _impl_.pose_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE PositionUpdate::unsafe_arena_release_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.PositionUpdate.pose)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* temp = _impl_.pose_;
  _impl_.pose_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL PositionUpdate::_internal_mutable_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pose_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::PoseWithCovariance>(GetArena());
    _impl_.pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(p);
  }
  return _impl_.pose_;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL PositionUpdate::mutable_pose()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* _msg = _internal_mutable_pose();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.PositionUpdate.pose)
  return _msg;
}
inline void PositionUpdate::set_allocated_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.PositionUpdate.pose)
}

// .agricultural.robot.navigation.v1.Twist velocity = 3 [json_name = "velocity"];
inline bool PositionUpdate::has_velocity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.velocity_ != nullptr);
  return value;
}
inline void PositionUpdate::clear_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.velocity_ != nullptr) _impl_.velocity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::agricultural::robot::navigation::v1::Twist& PositionUpdate::_internal_velocity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::Twist* p = _impl_.velocity_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::Twist&>(::agricultural::robot::navigation::v1::_Twist_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::Twist& PositionUpdate::velocity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.PositionUpdate.velocity)
  return _internal_velocity();
}
inline void PositionUpdate::unsafe_arena_set_allocated_velocity(
    ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.velocity_);
  }
  _impl_.velocity_ = reinterpret_cast<::agricultural::robot::navigation::v1::Twist*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.PositionUpdate.velocity)
}
inline ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE PositionUpdate::release_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::agricultural::robot::navigation::v1::Twist* released = _impl_.velocity_;
  _impl_.velocity_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE PositionUpdate::unsafe_arena_release_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.PositionUpdate.velocity)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::agricultural::robot::navigation::v1::Twist* temp = _impl_.velocity_;
  _impl_.velocity_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NONNULL PositionUpdate::_internal_mutable_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.velocity_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::Twist>(GetArena());
    _impl_.velocity_ = reinterpret_cast<::agricultural::robot::navigation::v1::Twist*>(p);
  }
  return _impl_.velocity_;
}
inline ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NONNULL PositionUpdate::mutable_velocity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::agricultural::robot::navigation::v1::Twist* _msg = _internal_mutable_velocity();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.PositionUpdate.velocity)
  return _msg;
}
inline void PositionUpdate::set_allocated_velocity(::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.velocity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.velocity_ = reinterpret_cast<::agricultural::robot::navigation::v1::Twist*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.PositionUpdate.velocity)
}

// string frame_id = 4 [json_name = "frameId"];
inline void PositionUpdate::clear_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& PositionUpdate::frame_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.PositionUpdate.frame_id)
  return _internal_frame_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PositionUpdate::set_frame_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.frame_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.PositionUpdate.frame_id)
}
inline ::std::string* PROTOBUF_NONNULL PositionUpdate::mutable_frame_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_frame_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.PositionUpdate.frame_id)
  return _s;
}
inline const ::std::string& PositionUpdate::_internal_frame_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_id_.Get();
}
inline void PositionUpdate::_internal_set_frame_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.frame_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PositionUpdate::_internal_mutable_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.frame_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PositionUpdate::release_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.PositionUpdate.frame_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.frame_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  return released;
}
inline void PositionUpdate::set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.frame_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.frame_id_.IsDefault()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.PositionUpdate.frame_id)
}

// .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
inline bool PositionUpdate::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& PositionUpdate::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& PositionUpdate::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.PositionUpdate.timestamp)
  return _internal_timestamp();
}
inline void PositionUpdate::unsafe_arena_set_allocated_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.PositionUpdate.timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE PositionUpdate::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE PositionUpdate::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.PositionUpdate.timestamp)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL PositionUpdate::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL PositionUpdate::mutable_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.PositionUpdate.timestamp)
  return _msg;
}
inline void PositionUpdate::set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.PositionUpdate.timestamp)
}

// .agricultural.robot.navigation.v1.LocalizationQuality quality = 6 [json_name = "quality"];
inline bool PositionUpdate::has_quality() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quality_ != nullptr);
  return value;
}
inline void PositionUpdate::clear_quality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_ != nullptr) _impl_.quality_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::agricultural::robot::navigation::v1::LocalizationQuality& PositionUpdate::_internal_quality() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::LocalizationQuality* p = _impl_.quality_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::LocalizationQuality&>(::agricultural::robot::navigation::v1::_LocalizationQuality_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::LocalizationQuality& PositionUpdate::quality() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.PositionUpdate.quality)
  return _internal_quality();
}
inline void PositionUpdate::unsafe_arena_set_allocated_quality(
    ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_);
  }
  _impl_.quality_ = reinterpret_cast<::agricultural::robot::navigation::v1::LocalizationQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.PositionUpdate.quality)
}
inline ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NULLABLE PositionUpdate::release_quality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::agricultural::robot::navigation::v1::LocalizationQuality* released = _impl_.quality_;
  _impl_.quality_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NULLABLE PositionUpdate::unsafe_arena_release_quality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.PositionUpdate.quality)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::agricultural::robot::navigation::v1::LocalizationQuality* temp = _impl_.quality_;
  _impl_.quality_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NONNULL PositionUpdate::_internal_mutable_quality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::LocalizationQuality>(GetArena());
    _impl_.quality_ = reinterpret_cast<::agricultural::robot::navigation::v1::LocalizationQuality*>(p);
  }
  return _impl_.quality_;
}
inline ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NONNULL PositionUpdate::mutable_quality()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::agricultural::robot::navigation::v1::LocalizationQuality* _msg = _internal_mutable_quality();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.PositionUpdate.quality)
  return _msg;
}
inline void PositionUpdate::set_allocated_quality(::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.quality_ = reinterpret_cast<::agricultural::robot::navigation::v1::LocalizationQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.PositionUpdate.quality)
}

// -------------------------------------------------------------------

// Pose

// .agricultural.robot.navigation.v1.Point3D position = 1 [json_name = "position"];
inline bool Pose::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline void Pose::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::agricultural::robot::navigation::v1::Point3D& Pose::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::Point3D* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::Point3D&>(::agricultural::robot::navigation::v1::_Point3D_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::Point3D& Pose::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Pose.position)
  return _internal_position();
}
inline void Pose::unsafe_arena_set_allocated_position(
    ::agricultural::robot::navigation::v1::Point3D* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::agricultural::robot::navigation::v1::Point3D*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.Pose.position)
}
inline ::agricultural::robot::navigation::v1::Point3D* PROTOBUF_NULLABLE Pose::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::agricultural::robot::navigation::v1::Point3D* released = _impl_.position_;
  _impl_.position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::Point3D* PROTOBUF_NULLABLE Pose::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.Pose.position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::agricultural::robot::navigation::v1::Point3D* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::Point3D* PROTOBUF_NONNULL Pose::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::Point3D>(GetArena());
    _impl_.position_ = reinterpret_cast<::agricultural::robot::navigation::v1::Point3D*>(p);
  }
  return _impl_.position_;
}
inline ::agricultural::robot::navigation::v1::Point3D* PROTOBUF_NONNULL Pose::mutable_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::agricultural::robot::navigation::v1::Point3D* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.Pose.position)
  return _msg;
}
inline void Pose::set_allocated_position(::agricultural::robot::navigation::v1::Point3D* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.position_ = reinterpret_cast<::agricultural::robot::navigation::v1::Point3D*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.Pose.position)
}

// .agricultural.robot.navigation.v1.Quaternion orientation = 2 [json_name = "orientation"];
inline bool Pose::has_orientation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.orientation_ != nullptr);
  return value;
}
inline void Pose::clear_orientation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.orientation_ != nullptr) _impl_.orientation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::agricultural::robot::navigation::v1::Quaternion& Pose::_internal_orientation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::Quaternion* p = _impl_.orientation_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::Quaternion&>(::agricultural::robot::navigation::v1::_Quaternion_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::Quaternion& Pose::orientation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Pose.orientation)
  return _internal_orientation();
}
inline void Pose::unsafe_arena_set_allocated_orientation(
    ::agricultural::robot::navigation::v1::Quaternion* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.orientation_);
  }
  _impl_.orientation_ = reinterpret_cast<::agricultural::robot::navigation::v1::Quaternion*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.Pose.orientation)
}
inline ::agricultural::robot::navigation::v1::Quaternion* PROTOBUF_NULLABLE Pose::release_orientation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::Quaternion* released = _impl_.orientation_;
  _impl_.orientation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::Quaternion* PROTOBUF_NULLABLE Pose::unsafe_arena_release_orientation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.Pose.orientation)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::Quaternion* temp = _impl_.orientation_;
  _impl_.orientation_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::Quaternion* PROTOBUF_NONNULL Pose::_internal_mutable_orientation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.orientation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::Quaternion>(GetArena());
    _impl_.orientation_ = reinterpret_cast<::agricultural::robot::navigation::v1::Quaternion*>(p);
  }
  return _impl_.orientation_;
}
inline ::agricultural::robot::navigation::v1::Quaternion* PROTOBUF_NONNULL Pose::mutable_orientation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::agricultural::robot::navigation::v1::Quaternion* _msg = _internal_mutable_orientation();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.Pose.orientation)
  return _msg;
}
inline void Pose::set_allocated_orientation(::agricultural::robot::navigation::v1::Quaternion* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.orientation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.orientation_ = reinterpret_cast<::agricultural::robot::navigation::v1::Quaternion*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.Pose.orientation)
}

// -------------------------------------------------------------------

// PoseWithCovariance

// .agricultural.robot.navigation.v1.Pose pose = 1 [json_name = "pose"];
inline bool PoseWithCovariance::has_pose() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pose_ != nullptr);
  return value;
}
inline void PoseWithCovariance::clear_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pose_ != nullptr) _impl_.pose_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::agricultural::robot::navigation::v1::Pose& PoseWithCovariance::_internal_pose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::Pose* p = _impl_.pose_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::Pose&>(::agricultural::robot::navigation::v1::_Pose_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::Pose& PoseWithCovariance::pose() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.PoseWithCovariance.pose)
  return _internal_pose();
}
inline void PoseWithCovariance::unsafe_arena_set_allocated_pose(
    ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose_);
  }
  _impl_.pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::Pose*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.PoseWithCovariance.pose)
}
inline ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE PoseWithCovariance::release_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::agricultural::robot::navigation::v1::Pose* released = _impl_.pose_;
  _impl_.pose_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE PoseWithCovariance::unsafe_arena_release_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.PoseWithCovariance.pose)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::agricultural::robot::navigation::v1::Pose* temp = _impl_.pose_;
  _impl_.pose_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NONNULL PoseWithCovariance::_internal_mutable_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pose_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::Pose>(GetArena());
    _impl_.pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::Pose*>(p);
  }
  return _impl_.pose_;
}
inline ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NONNULL PoseWithCovariance::mutable_pose()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::agricultural::robot::navigation::v1::Pose* _msg = _internal_mutable_pose();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.PoseWithCovariance.pose)
  return _msg;
}
inline void PoseWithCovariance::set_allocated_pose(::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::Pose*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.PoseWithCovariance.pose)
}

// repeated double covariance = 2 [json_name = "covariance"];
inline int PoseWithCovariance::_internal_covariance_size() const {
  return _internal_covariance().size();
}
inline int PoseWithCovariance::covariance_size() const {
  return _internal_covariance_size();
}
inline void PoseWithCovariance::clear_covariance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.covariance_.Clear();
}
inline double PoseWithCovariance::covariance(int index) const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.PoseWithCovariance.covariance)
  return _internal_covariance().Get(index);
}
inline void PoseWithCovariance::set_covariance(int index, double value) {
  _internal_mutable_covariance()->Set(index, value);
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.PoseWithCovariance.covariance)
}
inline void PoseWithCovariance::add_covariance(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_covariance()->Add(value);
  // @@protoc_insertion_point(field_add:agricultural.robot.navigation.v1.PoseWithCovariance.covariance)
}
inline const ::google::protobuf::RepeatedField<double>& PoseWithCovariance::covariance() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:agricultural.robot.navigation.v1.PoseWithCovariance.covariance)
  return _internal_covariance();
}
inline ::google::protobuf::RepeatedField<double>* PROTOBUF_NONNULL PoseWithCovariance::mutable_covariance()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:agricultural.robot.navigation.v1.PoseWithCovariance.covariance)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_covariance();
}
inline const ::google::protobuf::RepeatedField<double>&
PoseWithCovariance::_internal_covariance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.covariance_;
}
inline ::google::protobuf::RepeatedField<double>* PROTOBUF_NONNULL
PoseWithCovariance::_internal_mutable_covariance() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.covariance_;
}

// -------------------------------------------------------------------

// Point2D

// double x = 1 [json_name = "x"];
inline void Point2D::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double Point2D::x() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Point2D.x)
  return _internal_x();
}
inline void Point2D::set_x(double value) {
  _internal_set_x(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.Point2D.x)
}
inline double Point2D::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Point2D::_internal_set_x(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// double y = 2 [json_name = "y"];
inline void Point2D::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double Point2D::y() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Point2D.y)
  return _internal_y();
}
inline void Point2D::set_y(double value) {
  _internal_set_y(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.Point2D.y)
}
inline double Point2D::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Point2D::_internal_set_y(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// -------------------------------------------------------------------

// Point3D

// double x = 1 [json_name = "x"];
inline void Point3D::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double Point3D::x() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Point3D.x)
  return _internal_x();
}
inline void Point3D::set_x(double value) {
  _internal_set_x(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.Point3D.x)
}
inline double Point3D::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Point3D::_internal_set_x(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// double y = 2 [json_name = "y"];
inline void Point3D::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double Point3D::y() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Point3D.y)
  return _internal_y();
}
inline void Point3D::set_y(double value) {
  _internal_set_y(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.Point3D.y)
}
inline double Point3D::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Point3D::_internal_set_y(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// double z = 3 [json_name = "z"];
inline void Point3D::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double Point3D::z() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Point3D.z)
  return _internal_z();
}
inline void Point3D::set_z(double value) {
  _internal_set_z(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.Point3D.z)
}
inline double Point3D::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void Point3D::_internal_set_z(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// Quaternion

// double x = 1 [json_name = "x"];
inline void Quaternion::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double Quaternion::x() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Quaternion.x)
  return _internal_x();
}
inline void Quaternion::set_x(double value) {
  _internal_set_x(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.Quaternion.x)
}
inline double Quaternion::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Quaternion::_internal_set_x(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// double y = 2 [json_name = "y"];
inline void Quaternion::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double Quaternion::y() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Quaternion.y)
  return _internal_y();
}
inline void Quaternion::set_y(double value) {
  _internal_set_y(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.Quaternion.y)
}
inline double Quaternion::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Quaternion::_internal_set_y(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// double z = 3 [json_name = "z"];
inline void Quaternion::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double Quaternion::z() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Quaternion.z)
  return _internal_z();
}
inline void Quaternion::set_z(double value) {
  _internal_set_z(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.Quaternion.z)
}
inline double Quaternion::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void Quaternion::_internal_set_z(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// double w = 4 [json_name = "w"];
inline void Quaternion::clear_w() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.w_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double Quaternion::w() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Quaternion.w)
  return _internal_w();
}
inline void Quaternion::set_w(double value) {
  _internal_set_w(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.Quaternion.w)
}
inline double Quaternion::_internal_w() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.w_;
}
inline void Quaternion::_internal_set_w(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.w_ = value;
}

// -------------------------------------------------------------------

// Twist

// .agricultural.robot.navigation.v1.Vector3 linear = 1 [json_name = "linear"];
inline bool Twist::has_linear() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.linear_ != nullptr);
  return value;
}
inline void Twist::clear_linear() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.linear_ != nullptr) _impl_.linear_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::agricultural::robot::navigation::v1::Vector3& Twist::_internal_linear() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::Vector3* p = _impl_.linear_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::Vector3&>(::agricultural::robot::navigation::v1::_Vector3_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::Vector3& Twist::linear() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Twist.linear)
  return _internal_linear();
}
inline void Twist::unsafe_arena_set_allocated_linear(
    ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.linear_);
  }
  _impl_.linear_ = reinterpret_cast<::agricultural::robot::navigation::v1::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.Twist.linear)
}
inline ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NULLABLE Twist::release_linear() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::agricultural::robot::navigation::v1::Vector3* released = _impl_.linear_;
  _impl_.linear_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NULLABLE Twist::unsafe_arena_release_linear() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.Twist.linear)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::agricultural::robot::navigation::v1::Vector3* temp = _impl_.linear_;
  _impl_.linear_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NONNULL Twist::_internal_mutable_linear() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.linear_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::Vector3>(GetArena());
    _impl_.linear_ = reinterpret_cast<::agricultural::robot::navigation::v1::Vector3*>(p);
  }
  return _impl_.linear_;
}
inline ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NONNULL Twist::mutable_linear()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::agricultural::robot::navigation::v1::Vector3* _msg = _internal_mutable_linear();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.Twist.linear)
  return _msg;
}
inline void Twist::set_allocated_linear(::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.linear_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.linear_ = reinterpret_cast<::agricultural::robot::navigation::v1::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.Twist.linear)
}

// .agricultural.robot.navigation.v1.Vector3 angular = 2 [json_name = "angular"];
inline bool Twist::has_angular() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.angular_ != nullptr);
  return value;
}
inline void Twist::clear_angular() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.angular_ != nullptr) _impl_.angular_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::agricultural::robot::navigation::v1::Vector3& Twist::_internal_angular() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::Vector3* p = _impl_.angular_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::Vector3&>(::agricultural::robot::navigation::v1::_Vector3_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::Vector3& Twist::angular() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Twist.angular)
  return _internal_angular();
}
inline void Twist::unsafe_arena_set_allocated_angular(
    ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.angular_);
  }
  _impl_.angular_ = reinterpret_cast<::agricultural::robot::navigation::v1::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.Twist.angular)
}
inline ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NULLABLE Twist::release_angular() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::Vector3* released = _impl_.angular_;
  _impl_.angular_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NULLABLE Twist::unsafe_arena_release_angular() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.Twist.angular)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::Vector3* temp = _impl_.angular_;
  _impl_.angular_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NONNULL Twist::_internal_mutable_angular() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.angular_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::Vector3>(GetArena());
    _impl_.angular_ = reinterpret_cast<::agricultural::robot::navigation::v1::Vector3*>(p);
  }
  return _impl_.angular_;
}
inline ::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NONNULL Twist::mutable_angular()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::agricultural::robot::navigation::v1::Vector3* _msg = _internal_mutable_angular();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.Twist.angular)
  return _msg;
}
inline void Twist::set_allocated_angular(::agricultural::robot::navigation::v1::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.angular_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.angular_ = reinterpret_cast<::agricultural::robot::navigation::v1::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.Twist.angular)
}

// -------------------------------------------------------------------

// Vector3

// double x = 1 [json_name = "x"];
inline void Vector3::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double Vector3::x() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Vector3.x)
  return _internal_x();
}
inline void Vector3::set_x(double value) {
  _internal_set_x(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.Vector3.x)
}
inline double Vector3::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Vector3::_internal_set_x(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// double y = 2 [json_name = "y"];
inline void Vector3::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double Vector3::y() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Vector3.y)
  return _internal_y();
}
inline void Vector3::set_y(double value) {
  _internal_set_y(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.Vector3.y)
}
inline double Vector3::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Vector3::_internal_set_y(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// double z = 3 [json_name = "z"];
inline void Vector3::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double Vector3::z() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Vector3.z)
  return _internal_z();
}
inline void Vector3::set_z(double value) {
  _internal_set_z(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.Vector3.z)
}
inline double Vector3::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void Vector3::_internal_set_z(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// VelocityCommand

// string robot_id = 1 [json_name = "robotId"];
inline void VelocityCommand::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& VelocityCommand::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VelocityCommand.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void VelocityCommand::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.VelocityCommand.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL VelocityCommand::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.VelocityCommand.robot_id)
  return _s;
}
inline const ::std::string& VelocityCommand::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void VelocityCommand::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL VelocityCommand::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE VelocityCommand::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.VelocityCommand.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void VelocityCommand::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.VelocityCommand.robot_id)
}

// .agricultural.robot.navigation.v1.Twist cmd_vel = 2 [json_name = "cmdVel"];
inline bool VelocityCommand::has_cmd_vel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cmd_vel_ != nullptr);
  return value;
}
inline void VelocityCommand::clear_cmd_vel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cmd_vel_ != nullptr) _impl_.cmd_vel_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::agricultural::robot::navigation::v1::Twist& VelocityCommand::_internal_cmd_vel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::Twist* p = _impl_.cmd_vel_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::Twist&>(::agricultural::robot::navigation::v1::_Twist_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::Twist& VelocityCommand::cmd_vel() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VelocityCommand.cmd_vel)
  return _internal_cmd_vel();
}
inline void VelocityCommand::unsafe_arena_set_allocated_cmd_vel(
    ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cmd_vel_);
  }
  _impl_.cmd_vel_ = reinterpret_cast<::agricultural::robot::navigation::v1::Twist*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.VelocityCommand.cmd_vel)
}
inline ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE VelocityCommand::release_cmd_vel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::Twist* released = _impl_.cmd_vel_;
  _impl_.cmd_vel_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE VelocityCommand::unsafe_arena_release_cmd_vel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.VelocityCommand.cmd_vel)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::Twist* temp = _impl_.cmd_vel_;
  _impl_.cmd_vel_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NONNULL VelocityCommand::_internal_mutable_cmd_vel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cmd_vel_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::Twist>(GetArena());
    _impl_.cmd_vel_ = reinterpret_cast<::agricultural::robot::navigation::v1::Twist*>(p);
  }
  return _impl_.cmd_vel_;
}
inline ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NONNULL VelocityCommand::mutable_cmd_vel()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::agricultural::robot::navigation::v1::Twist* _msg = _internal_mutable_cmd_vel();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.VelocityCommand.cmd_vel)
  return _msg;
}
inline void VelocityCommand::set_allocated_cmd_vel(::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cmd_vel_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.cmd_vel_ = reinterpret_cast<::agricultural::robot::navigation::v1::Twist*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.VelocityCommand.cmd_vel)
}

// .google.protobuf.Duration timeout = 3 [json_name = "timeout"];
inline bool VelocityCommand::has_timeout() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timeout_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& VelocityCommand::_internal_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.timeout_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& VelocityCommand::timeout() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VelocityCommand.timeout)
  return _internal_timeout();
}
inline void VelocityCommand::unsafe_arena_set_allocated_timeout(
    ::google::protobuf::Duration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timeout_);
  }
  _impl_.timeout_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.VelocityCommand.timeout)
}
inline ::google::protobuf::Duration* PROTOBUF_NULLABLE VelocityCommand::release_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Duration* released = _impl_.timeout_;
  _impl_.timeout_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* PROTOBUF_NULLABLE VelocityCommand::unsafe_arena_release_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.VelocityCommand.timeout)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Duration* temp = _impl_.timeout_;
  _impl_.timeout_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* PROTOBUF_NONNULL VelocityCommand::_internal_mutable_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timeout_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.timeout_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.timeout_;
}
inline ::google::protobuf::Duration* PROTOBUF_NONNULL VelocityCommand::mutable_timeout()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Duration* _msg = _internal_mutable_timeout();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.VelocityCommand.timeout)
  return _msg;
}
inline void VelocityCommand::set_allocated_timeout(::google::protobuf::Duration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timeout_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.timeout_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.VelocityCommand.timeout)
}

// .agricultural.robot.navigation.v1.JoystickInput joystick_input = 4 [json_name = "joystickInput"];
inline bool VelocityCommand::has_joystick_input() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.joystick_input_ != nullptr);
  return value;
}
inline void VelocityCommand::clear_joystick_input() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.joystick_input_ != nullptr) _impl_.joystick_input_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::agricultural::robot::navigation::v1::JoystickInput& VelocityCommand::_internal_joystick_input() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::JoystickInput* p = _impl_.joystick_input_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::JoystickInput&>(::agricultural::robot::navigation::v1::_JoystickInput_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::JoystickInput& VelocityCommand::joystick_input() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VelocityCommand.joystick_input)
  return _internal_joystick_input();
}
inline void VelocityCommand::unsafe_arena_set_allocated_joystick_input(
    ::agricultural::robot::navigation::v1::JoystickInput* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.joystick_input_);
  }
  _impl_.joystick_input_ = reinterpret_cast<::agricultural::robot::navigation::v1::JoystickInput*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.VelocityCommand.joystick_input)
}
inline ::agricultural::robot::navigation::v1::JoystickInput* PROTOBUF_NULLABLE VelocityCommand::release_joystick_input() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::agricultural::robot::navigation::v1::JoystickInput* released = _impl_.joystick_input_;
  _impl_.joystick_input_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::JoystickInput* PROTOBUF_NULLABLE VelocityCommand::unsafe_arena_release_joystick_input() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.VelocityCommand.joystick_input)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::agricultural::robot::navigation::v1::JoystickInput* temp = _impl_.joystick_input_;
  _impl_.joystick_input_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::JoystickInput* PROTOBUF_NONNULL VelocityCommand::_internal_mutable_joystick_input() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.joystick_input_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::JoystickInput>(GetArena());
    _impl_.joystick_input_ = reinterpret_cast<::agricultural::robot::navigation::v1::JoystickInput*>(p);
  }
  return _impl_.joystick_input_;
}
inline ::agricultural::robot::navigation::v1::JoystickInput* PROTOBUF_NONNULL VelocityCommand::mutable_joystick_input()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::agricultural::robot::navigation::v1::JoystickInput* _msg = _internal_mutable_joystick_input();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.VelocityCommand.joystick_input)
  return _msg;
}
inline void VelocityCommand::set_allocated_joystick_input(::agricultural::robot::navigation::v1::JoystickInput* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.joystick_input_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.joystick_input_ = reinterpret_cast<::agricultural::robot::navigation::v1::JoystickInput*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.VelocityCommand.joystick_input)
}

// .agricultural.robot.navigation.v1.SafetyConstraints safety = 5 [json_name = "safety"];
inline bool VelocityCommand::has_safety() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.safety_ != nullptr);
  return value;
}
inline void VelocityCommand::clear_safety() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.safety_ != nullptr) _impl_.safety_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::agricultural::robot::navigation::v1::SafetyConstraints& VelocityCommand::_internal_safety() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::SafetyConstraints* p = _impl_.safety_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::SafetyConstraints&>(::agricultural::robot::navigation::v1::_SafetyConstraints_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::SafetyConstraints& VelocityCommand::safety() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VelocityCommand.safety)
  return _internal_safety();
}
inline void VelocityCommand::unsafe_arena_set_allocated_safety(
    ::agricultural::robot::navigation::v1::SafetyConstraints* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.safety_);
  }
  _impl_.safety_ = reinterpret_cast<::agricultural::robot::navigation::v1::SafetyConstraints*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.VelocityCommand.safety)
}
inline ::agricultural::robot::navigation::v1::SafetyConstraints* PROTOBUF_NULLABLE VelocityCommand::release_safety() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::agricultural::robot::navigation::v1::SafetyConstraints* released = _impl_.safety_;
  _impl_.safety_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::SafetyConstraints* PROTOBUF_NULLABLE VelocityCommand::unsafe_arena_release_safety() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.VelocityCommand.safety)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::agricultural::robot::navigation::v1::SafetyConstraints* temp = _impl_.safety_;
  _impl_.safety_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::SafetyConstraints* PROTOBUF_NONNULL VelocityCommand::_internal_mutable_safety() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.safety_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::SafetyConstraints>(GetArena());
    _impl_.safety_ = reinterpret_cast<::agricultural::robot::navigation::v1::SafetyConstraints*>(p);
  }
  return _impl_.safety_;
}
inline ::agricultural::robot::navigation::v1::SafetyConstraints* PROTOBUF_NONNULL VelocityCommand::mutable_safety()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::agricultural::robot::navigation::v1::SafetyConstraints* _msg = _internal_mutable_safety();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.VelocityCommand.safety)
  return _msg;
}
inline void VelocityCommand::set_allocated_safety(::agricultural::robot::navigation::v1::SafetyConstraints* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.safety_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.safety_ = reinterpret_cast<::agricultural::robot::navigation::v1::SafetyConstraints*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.VelocityCommand.safety)
}

// .agricultural.robot.navigation.v1.ControlMode control_mode = 6 [json_name = "controlMode"];
inline void VelocityCommand::clear_control_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::agricultural::robot::navigation::v1::ControlMode VelocityCommand::control_mode() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VelocityCommand.control_mode)
  return _internal_control_mode();
}
inline void VelocityCommand::set_control_mode(::agricultural::robot::navigation::v1::ControlMode value) {
  _internal_set_control_mode(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.VelocityCommand.control_mode)
}
inline ::agricultural::robot::navigation::v1::ControlMode VelocityCommand::_internal_control_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::ControlMode>(_impl_.control_mode_);
}
inline void VelocityCommand::_internal_set_control_mode(::agricultural::robot::navigation::v1::ControlMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_mode_ = value;
}

// -------------------------------------------------------------------

// JoystickInput

// repeated float axes = 1 [json_name = "axes"];
inline int JoystickInput::_internal_axes_size() const {
  return _internal_axes().size();
}
inline int JoystickInput::axes_size() const {
  return _internal_axes_size();
}
inline void JoystickInput::clear_axes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.axes_.Clear();
}
inline float JoystickInput::axes(int index) const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.JoystickInput.axes)
  return _internal_axes().Get(index);
}
inline void JoystickInput::set_axes(int index, float value) {
  _internal_mutable_axes()->Set(index, value);
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.JoystickInput.axes)
}
inline void JoystickInput::add_axes(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_axes()->Add(value);
  // @@protoc_insertion_point(field_add:agricultural.robot.navigation.v1.JoystickInput.axes)
}
inline const ::google::protobuf::RepeatedField<float>& JoystickInput::axes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:agricultural.robot.navigation.v1.JoystickInput.axes)
  return _internal_axes();
}
inline ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL JoystickInput::mutable_axes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:agricultural.robot.navigation.v1.JoystickInput.axes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_axes();
}
inline const ::google::protobuf::RepeatedField<float>&
JoystickInput::_internal_axes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.axes_;
}
inline ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL
JoystickInput::_internal_mutable_axes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.axes_;
}

// repeated bool buttons = 2 [json_name = "buttons"];
inline int JoystickInput::_internal_buttons_size() const {
  return _internal_buttons().size();
}
inline int JoystickInput::buttons_size() const {
  return _internal_buttons_size();
}
inline void JoystickInput::clear_buttons() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buttons_.Clear();
}
inline bool JoystickInput::buttons(int index) const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.JoystickInput.buttons)
  return _internal_buttons().Get(index);
}
inline void JoystickInput::set_buttons(int index, bool value) {
  _internal_mutable_buttons()->Set(index, value);
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.JoystickInput.buttons)
}
inline void JoystickInput::add_buttons(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_buttons()->Add(value);
  // @@protoc_insertion_point(field_add:agricultural.robot.navigation.v1.JoystickInput.buttons)
}
inline const ::google::protobuf::RepeatedField<bool>& JoystickInput::buttons() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:agricultural.robot.navigation.v1.JoystickInput.buttons)
  return _internal_buttons();
}
inline ::google::protobuf::RepeatedField<bool>* PROTOBUF_NONNULL JoystickInput::mutable_buttons()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:agricultural.robot.navigation.v1.JoystickInput.buttons)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_buttons();
}
inline const ::google::protobuf::RepeatedField<bool>&
JoystickInput::_internal_buttons() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.buttons_;
}
inline ::google::protobuf::RepeatedField<bool>* PROTOBUF_NONNULL
JoystickInput::_internal_mutable_buttons() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.buttons_;
}

// .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
inline bool JoystickInput::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& JoystickInput::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& JoystickInput::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.JoystickInput.timestamp)
  return _internal_timestamp();
}
inline void JoystickInput::unsafe_arena_set_allocated_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.JoystickInput.timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE JoystickInput::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE JoystickInput::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.JoystickInput.timestamp)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL JoystickInput::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL JoystickInput::mutable_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.JoystickInput.timestamp)
  return _msg;
}
inline void JoystickInput::set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.JoystickInput.timestamp)
}

// string controller_id = 4 [json_name = "controllerId"];
inline void JoystickInput::clear_controller_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.controller_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& JoystickInput::controller_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.JoystickInput.controller_id)
  return _internal_controller_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void JoystickInput::set_controller_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.controller_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.JoystickInput.controller_id)
}
inline ::std::string* PROTOBUF_NONNULL JoystickInput::mutable_controller_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_controller_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.JoystickInput.controller_id)
  return _s;
}
inline const ::std::string& JoystickInput::_internal_controller_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.controller_id_.Get();
}
inline void JoystickInput::_internal_set_controller_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.controller_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL JoystickInput::_internal_mutable_controller_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.controller_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE JoystickInput::release_controller_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.JoystickInput.controller_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.controller_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.controller_id_.Set("", GetArena());
  }
  return released;
}
inline void JoystickInput::set_allocated_controller_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.controller_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.controller_id_.IsDefault()) {
    _impl_.controller_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.JoystickInput.controller_id)
}

// -------------------------------------------------------------------

// VelocityResponse

// bool success = 1 [json_name = "success"];
inline void VelocityResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool VelocityResponse::success() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VelocityResponse.success)
  return _internal_success();
}
inline void VelocityResponse::set_success(bool value) {
  _internal_set_success(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.VelocityResponse.success)
}
inline bool VelocityResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void VelocityResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2 [json_name = "message"];
inline void VelocityResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& VelocityResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VelocityResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void VelocityResponse::set_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.VelocityResponse.message)
}
inline ::std::string* PROTOBUF_NONNULL VelocityResponse::mutable_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.VelocityResponse.message)
  return _s;
}
inline const ::std::string& VelocityResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void VelocityResponse::_internal_set_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL VelocityResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE VelocityResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.VelocityResponse.message)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_.Set("", GetArena());
  }
  return released;
}
inline void VelocityResponse::set_allocated_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.VelocityResponse.message)
}

// .agricultural.robot.navigation.v1.Twist actual_velocity = 3 [json_name = "actualVelocity"];
inline bool VelocityResponse::has_actual_velocity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.actual_velocity_ != nullptr);
  return value;
}
inline void VelocityResponse::clear_actual_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.actual_velocity_ != nullptr) _impl_.actual_velocity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::agricultural::robot::navigation::v1::Twist& VelocityResponse::_internal_actual_velocity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::Twist* p = _impl_.actual_velocity_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::Twist&>(::agricultural::robot::navigation::v1::_Twist_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::Twist& VelocityResponse::actual_velocity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VelocityResponse.actual_velocity)
  return _internal_actual_velocity();
}
inline void VelocityResponse::unsafe_arena_set_allocated_actual_velocity(
    ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.actual_velocity_);
  }
  _impl_.actual_velocity_ = reinterpret_cast<::agricultural::robot::navigation::v1::Twist*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.VelocityResponse.actual_velocity)
}
inline ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE VelocityResponse::release_actual_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::Twist* released = _impl_.actual_velocity_;
  _impl_.actual_velocity_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE VelocityResponse::unsafe_arena_release_actual_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.VelocityResponse.actual_velocity)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::Twist* temp = _impl_.actual_velocity_;
  _impl_.actual_velocity_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NONNULL VelocityResponse::_internal_mutable_actual_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.actual_velocity_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::Twist>(GetArena());
    _impl_.actual_velocity_ = reinterpret_cast<::agricultural::robot::navigation::v1::Twist*>(p);
  }
  return _impl_.actual_velocity_;
}
inline ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NONNULL VelocityResponse::mutable_actual_velocity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::agricultural::robot::navigation::v1::Twist* _msg = _internal_mutable_actual_velocity();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.VelocityResponse.actual_velocity)
  return _msg;
}
inline void VelocityResponse::set_allocated_actual_velocity(::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.actual_velocity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.actual_velocity_ = reinterpret_cast<::agricultural::robot::navigation::v1::Twist*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.VelocityResponse.actual_velocity)
}

// .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
inline bool VelocityResponse::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& VelocityResponse::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& VelocityResponse::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VelocityResponse.timestamp)
  return _internal_timestamp();
}
inline void VelocityResponse::unsafe_arena_set_allocated_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.VelocityResponse.timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE VelocityResponse::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE VelocityResponse::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.VelocityResponse.timestamp)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL VelocityResponse::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL VelocityResponse::mutable_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.VelocityResponse.timestamp)
  return _msg;
}
inline void VelocityResponse::set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.VelocityResponse.timestamp)
}

// repeated .agricultural.robot.navigation.v1.SafetyViolation safety_violations = 5 [json_name = "safetyViolations"];
inline int VelocityResponse::_internal_safety_violations_size() const {
  return _internal_safety_violations().size();
}
inline int VelocityResponse::safety_violations_size() const {
  return _internal_safety_violations_size();
}
inline void VelocityResponse::clear_safety_violations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.safety_violations_.Clear();
}
inline ::agricultural::robot::navigation::v1::SafetyViolation* PROTOBUF_NONNULL VelocityResponse::mutable_safety_violations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.VelocityResponse.safety_violations)
  return _internal_mutable_safety_violations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::SafetyViolation>* PROTOBUF_NONNULL VelocityResponse::mutable_safety_violations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:agricultural.robot.navigation.v1.VelocityResponse.safety_violations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_safety_violations();
}
inline const ::agricultural::robot::navigation::v1::SafetyViolation& VelocityResponse::safety_violations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VelocityResponse.safety_violations)
  return _internal_safety_violations().Get(index);
}
inline ::agricultural::robot::navigation::v1::SafetyViolation* PROTOBUF_NONNULL VelocityResponse::add_safety_violations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::agricultural::robot::navigation::v1::SafetyViolation* _add = _internal_mutable_safety_violations()->Add();
  // @@protoc_insertion_point(field_add:agricultural.robot.navigation.v1.VelocityResponse.safety_violations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::SafetyViolation>& VelocityResponse::safety_violations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:agricultural.robot.navigation.v1.VelocityResponse.safety_violations)
  return _internal_safety_violations();
}
inline const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::SafetyViolation>&
VelocityResponse::_internal_safety_violations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.safety_violations_;
}
inline ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::SafetyViolation>* PROTOBUF_NONNULL
VelocityResponse::_internal_mutable_safety_violations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.safety_violations_;
}

// -------------------------------------------------------------------

// StopMovementRequest

// string robot_id = 1 [json_name = "robotId"];
inline void StopMovementRequest::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StopMovementRequest::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.StopMovementRequest.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void StopMovementRequest::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.StopMovementRequest.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL StopMovementRequest::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.StopMovementRequest.robot_id)
  return _s;
}
inline const ::std::string& StopMovementRequest::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void StopMovementRequest::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL StopMovementRequest::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE StopMovementRequest::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.StopMovementRequest.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void StopMovementRequest::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.StopMovementRequest.robot_id)
}

// .agricultural.robot.navigation.v1.EmergencyStopType stop_type = 2 [json_name = "stopType"];
inline void StopMovementRequest::clear_stop_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stop_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::agricultural::robot::navigation::v1::EmergencyStopType StopMovementRequest::stop_type() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.StopMovementRequest.stop_type)
  return _internal_stop_type();
}
inline void StopMovementRequest::set_stop_type(::agricultural::robot::navigation::v1::EmergencyStopType value) {
  _internal_set_stop_type(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.StopMovementRequest.stop_type)
}
inline ::agricultural::robot::navigation::v1::EmergencyStopType StopMovementRequest::_internal_stop_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::EmergencyStopType>(_impl_.stop_type_);
}
inline void StopMovementRequest::_internal_set_stop_type(::agricultural::robot::navigation::v1::EmergencyStopType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stop_type_ = value;
}

// -------------------------------------------------------------------

// SafetyConstraints

// double max_linear_velocity = 1 [json_name = "maxLinearVelocity"];
inline void SafetyConstraints::clear_max_linear_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_linear_velocity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double SafetyConstraints::max_linear_velocity() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.SafetyConstraints.max_linear_velocity)
  return _internal_max_linear_velocity();
}
inline void SafetyConstraints::set_max_linear_velocity(double value) {
  _internal_set_max_linear_velocity(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.SafetyConstraints.max_linear_velocity)
}
inline double SafetyConstraints::_internal_max_linear_velocity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_linear_velocity_;
}
inline void SafetyConstraints::_internal_set_max_linear_velocity(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_linear_velocity_ = value;
}

// double max_angular_velocity = 2 [json_name = "maxAngularVelocity"];
inline void SafetyConstraints::clear_max_angular_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_angular_velocity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double SafetyConstraints::max_angular_velocity() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.SafetyConstraints.max_angular_velocity)
  return _internal_max_angular_velocity();
}
inline void SafetyConstraints::set_max_angular_velocity(double value) {
  _internal_set_max_angular_velocity(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.SafetyConstraints.max_angular_velocity)
}
inline double SafetyConstraints::_internal_max_angular_velocity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_angular_velocity_;
}
inline void SafetyConstraints::_internal_set_max_angular_velocity(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_angular_velocity_ = value;
}

// double max_acceleration = 3 [json_name = "maxAcceleration"];
inline void SafetyConstraints::clear_max_acceleration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_acceleration_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double SafetyConstraints::max_acceleration() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.SafetyConstraints.max_acceleration)
  return _internal_max_acceleration();
}
inline void SafetyConstraints::set_max_acceleration(double value) {
  _internal_set_max_acceleration(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.SafetyConstraints.max_acceleration)
}
inline double SafetyConstraints::_internal_max_acceleration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_acceleration_;
}
inline void SafetyConstraints::_internal_set_max_acceleration(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_acceleration_ = value;
}

// bool obstacle_avoidance_enabled = 4 [json_name = "obstacleAvoidanceEnabled"];
inline void SafetyConstraints::clear_obstacle_avoidance_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.obstacle_avoidance_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool SafetyConstraints::obstacle_avoidance_enabled() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.SafetyConstraints.obstacle_avoidance_enabled)
  return _internal_obstacle_avoidance_enabled();
}
inline void SafetyConstraints::set_obstacle_avoidance_enabled(bool value) {
  _internal_set_obstacle_avoidance_enabled(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.SafetyConstraints.obstacle_avoidance_enabled)
}
inline bool SafetyConstraints::_internal_obstacle_avoidance_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.obstacle_avoidance_enabled_;
}
inline void SafetyConstraints::_internal_set_obstacle_avoidance_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.obstacle_avoidance_enabled_ = value;
}

// double safety_margin = 5 [json_name = "safetyMargin"];
inline void SafetyConstraints::clear_safety_margin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.safety_margin_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double SafetyConstraints::safety_margin() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.SafetyConstraints.safety_margin)
  return _internal_safety_margin();
}
inline void SafetyConstraints::set_safety_margin(double value) {
  _internal_set_safety_margin(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.SafetyConstraints.safety_margin)
}
inline double SafetyConstraints::_internal_safety_margin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.safety_margin_;
}
inline void SafetyConstraints::_internal_set_safety_margin(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.safety_margin_ = value;
}

// repeated string forbidden_zones = 6 [json_name = "forbiddenZones"];
inline int SafetyConstraints::_internal_forbidden_zones_size() const {
  return _internal_forbidden_zones().size();
}
inline int SafetyConstraints::forbidden_zones_size() const {
  return _internal_forbidden_zones_size();
}
inline void SafetyConstraints::clear_forbidden_zones() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.forbidden_zones_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL SafetyConstraints::add_forbidden_zones()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_forbidden_zones()->Add();
  // @@protoc_insertion_point(field_add_mutable:agricultural.robot.navigation.v1.SafetyConstraints.forbidden_zones)
  return _s;
}
inline const ::std::string& SafetyConstraints::forbidden_zones(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.SafetyConstraints.forbidden_zones)
  return _internal_forbidden_zones().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL SafetyConstraints::mutable_forbidden_zones(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.SafetyConstraints.forbidden_zones)
  return _internal_mutable_forbidden_zones()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SafetyConstraints::set_forbidden_zones(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_forbidden_zones()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.SafetyConstraints.forbidden_zones)
}
template <typename Arg_, typename... Args_>
inline void SafetyConstraints::add_forbidden_zones(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_forbidden_zones(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:agricultural.robot.navigation.v1.SafetyConstraints.forbidden_zones)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& SafetyConstraints::forbidden_zones()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:agricultural.robot.navigation.v1.SafetyConstraints.forbidden_zones)
  return _internal_forbidden_zones();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SafetyConstraints::mutable_forbidden_zones() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:agricultural.robot.navigation.v1.SafetyConstraints.forbidden_zones)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_forbidden_zones();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
SafetyConstraints::_internal_forbidden_zones() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.forbidden_zones_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SafetyConstraints::_internal_mutable_forbidden_zones() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.forbidden_zones_;
}

// -------------------------------------------------------------------

// SafetyViolation

// .agricultural.robot.navigation.v1.SafetyViolationType type = 1 [json_name = "type"];
inline void SafetyViolation::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::agricultural::robot::navigation::v1::SafetyViolationType SafetyViolation::type() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.SafetyViolation.type)
  return _internal_type();
}
inline void SafetyViolation::set_type(::agricultural::robot::navigation::v1::SafetyViolationType value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.SafetyViolation.type)
}
inline ::agricultural::robot::navigation::v1::SafetyViolationType SafetyViolation::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::SafetyViolationType>(_impl_.type_);
}
inline void SafetyViolation::_internal_set_type(::agricultural::robot::navigation::v1::SafetyViolationType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// string description = 2 [json_name = "description"];
inline void SafetyViolation::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SafetyViolation::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.SafetyViolation.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SafetyViolation::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.SafetyViolation.description)
}
inline ::std::string* PROTOBUF_NONNULL SafetyViolation::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.SafetyViolation.description)
  return _s;
}
inline const ::std::string& SafetyViolation::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void SafetyViolation::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SafetyViolation::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SafetyViolation::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.SafetyViolation.description)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void SafetyViolation::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.SafetyViolation.description)
}

// double severity = 3 [json_name = "severity"];
inline void SafetyViolation::clear_severity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.severity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double SafetyViolation::severity() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.SafetyViolation.severity)
  return _internal_severity();
}
inline void SafetyViolation::set_severity(double value) {
  _internal_set_severity(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.SafetyViolation.severity)
}
inline double SafetyViolation::_internal_severity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.severity_;
}
inline void SafetyViolation::_internal_set_severity(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.severity_ = value;
}

// .google.protobuf.Timestamp detected_at = 4 [json_name = "detectedAt"];
inline bool SafetyViolation::has_detected_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.detected_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& SafetyViolation::_internal_detected_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.detected_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& SafetyViolation::detected_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.SafetyViolation.detected_at)
  return _internal_detected_at();
}
inline void SafetyViolation::unsafe_arena_set_allocated_detected_at(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.detected_at_);
  }
  _impl_.detected_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.SafetyViolation.detected_at)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE SafetyViolation::release_detected_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.detected_at_;
  _impl_.detected_at_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE SafetyViolation::unsafe_arena_release_detected_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.SafetyViolation.detected_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.detected_at_;
  _impl_.detected_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL SafetyViolation::_internal_mutable_detected_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.detected_at_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.detected_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.detected_at_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL SafetyViolation::mutable_detected_at()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_detected_at();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.SafetyViolation.detected_at)
  return _msg;
}
inline void SafetyViolation::set_allocated_detected_at(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.detected_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.detected_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.SafetyViolation.detected_at)
}

// -------------------------------------------------------------------

// NavigationGoal

// string robot_id = 1 [json_name = "robotId"];
inline void NavigationGoal::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& NavigationGoal::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationGoal.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void NavigationGoal::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationGoal.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL NavigationGoal::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationGoal.robot_id)
  return _s;
}
inline const ::std::string& NavigationGoal::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void NavigationGoal::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL NavigationGoal::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE NavigationGoal::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationGoal.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void NavigationGoal::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationGoal.robot_id)
}

// string goal_id = 2 [json_name = "goalId"];
inline void NavigationGoal::clear_goal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.goal_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& NavigationGoal::goal_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationGoal.goal_id)
  return _internal_goal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void NavigationGoal::set_goal_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.goal_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationGoal.goal_id)
}
inline ::std::string* PROTOBUF_NONNULL NavigationGoal::mutable_goal_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_goal_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationGoal.goal_id)
  return _s;
}
inline const ::std::string& NavigationGoal::_internal_goal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.goal_id_.Get();
}
inline void NavigationGoal::_internal_set_goal_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.goal_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL NavigationGoal::_internal_mutable_goal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.goal_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE NavigationGoal::release_goal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationGoal.goal_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.goal_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.goal_id_.Set("", GetArena());
  }
  return released;
}
inline void NavigationGoal::set_allocated_goal_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.goal_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.goal_id_.IsDefault()) {
    _impl_.goal_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationGoal.goal_id)
}

// .agricultural.robot.navigation.v1.PoseWithCovariance target_pose = 3 [json_name = "targetPose"];
inline bool NavigationGoal::has_target_pose() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.target_pose_ != nullptr);
  return value;
}
inline void NavigationGoal::clear_target_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_pose_ != nullptr) _impl_.target_pose_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::agricultural::robot::navigation::v1::PoseWithCovariance& NavigationGoal::_internal_target_pose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::PoseWithCovariance* p = _impl_.target_pose_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::PoseWithCovariance&>(::agricultural::robot::navigation::v1::_PoseWithCovariance_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::PoseWithCovariance& NavigationGoal::target_pose() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationGoal.target_pose)
  return _internal_target_pose();
}
inline void NavigationGoal::unsafe_arena_set_allocated_target_pose(
    ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.target_pose_);
  }
  _impl_.target_pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.NavigationGoal.target_pose)
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE NavigationGoal::release_target_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* released = _impl_.target_pose_;
  _impl_.target_pose_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE NavigationGoal::unsafe_arena_release_target_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationGoal.target_pose)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* temp = _impl_.target_pose_;
  _impl_.target_pose_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL NavigationGoal::_internal_mutable_target_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_pose_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::PoseWithCovariance>(GetArena());
    _impl_.target_pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(p);
  }
  return _impl_.target_pose_;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL NavigationGoal::mutable_target_pose()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* _msg = _internal_mutable_target_pose();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationGoal.target_pose)
  return _msg;
}
inline void NavigationGoal::set_allocated_target_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.target_pose_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.target_pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationGoal.target_pose)
}

// string frame_id = 4 [json_name = "frameId"];
inline void NavigationGoal::clear_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& NavigationGoal::frame_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationGoal.frame_id)
  return _internal_frame_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void NavigationGoal::set_frame_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.frame_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationGoal.frame_id)
}
inline ::std::string* PROTOBUF_NONNULL NavigationGoal::mutable_frame_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_frame_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationGoal.frame_id)
  return _s;
}
inline const ::std::string& NavigationGoal::_internal_frame_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_id_.Get();
}
inline void NavigationGoal::_internal_set_frame_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.frame_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL NavigationGoal::_internal_mutable_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.frame_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE NavigationGoal::release_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationGoal.frame_id)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.frame_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  return released;
}
inline void NavigationGoal::set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.frame_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.frame_id_.IsDefault()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationGoal.frame_id)
}

// .agricultural.robot.navigation.v1.NavigationOptions options = 5 [json_name = "options"];
inline bool NavigationGoal::has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline void NavigationGoal::clear_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::agricultural::robot::navigation::v1::NavigationOptions& NavigationGoal::_internal_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::NavigationOptions* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::NavigationOptions&>(::agricultural::robot::navigation::v1::_NavigationOptions_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::NavigationOptions& NavigationGoal::options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationGoal.options)
  return _internal_options();
}
inline void NavigationGoal::unsafe_arena_set_allocated_options(
    ::agricultural::robot::navigation::v1::NavigationOptions* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = reinterpret_cast<::agricultural::robot::navigation::v1::NavigationOptions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.NavigationGoal.options)
}
inline ::agricultural::robot::navigation::v1::NavigationOptions* PROTOBUF_NULLABLE NavigationGoal::release_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::agricultural::robot::navigation::v1::NavigationOptions* released = _impl_.options_;
  _impl_.options_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::NavigationOptions* PROTOBUF_NULLABLE NavigationGoal::unsafe_arena_release_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationGoal.options)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::agricultural::robot::navigation::v1::NavigationOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::NavigationOptions* PROTOBUF_NONNULL NavigationGoal::_internal_mutable_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::NavigationOptions>(GetArena());
    _impl_.options_ = reinterpret_cast<::agricultural::robot::navigation::v1::NavigationOptions*>(p);
  }
  return _impl_.options_;
}
inline ::agricultural::robot::navigation::v1::NavigationOptions* PROTOBUF_NONNULL NavigationGoal::mutable_options()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::agricultural::robot::navigation::v1::NavigationOptions* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationGoal.options)
  return _msg;
}
inline void NavigationGoal::set_allocated_options(::agricultural::robot::navigation::v1::NavigationOptions* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.options_ = reinterpret_cast<::agricultural::robot::navigation::v1::NavigationOptions*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationGoal.options)
}

// repeated .agricultural.robot.navigation.v1.Waypoint waypoints = 6 [json_name = "waypoints"];
inline int NavigationGoal::_internal_waypoints_size() const {
  return _internal_waypoints().size();
}
inline int NavigationGoal::waypoints_size() const {
  return _internal_waypoints_size();
}
inline void NavigationGoal::clear_waypoints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.waypoints_.Clear();
}
inline ::agricultural::robot::navigation::v1::Waypoint* PROTOBUF_NONNULL NavigationGoal::mutable_waypoints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationGoal.waypoints)
  return _internal_mutable_waypoints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::Waypoint>* PROTOBUF_NONNULL NavigationGoal::mutable_waypoints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:agricultural.robot.navigation.v1.NavigationGoal.waypoints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_waypoints();
}
inline const ::agricultural::robot::navigation::v1::Waypoint& NavigationGoal::waypoints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationGoal.waypoints)
  return _internal_waypoints().Get(index);
}
inline ::agricultural::robot::navigation::v1::Waypoint* PROTOBUF_NONNULL NavigationGoal::add_waypoints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::agricultural::robot::navigation::v1::Waypoint* _add = _internal_mutable_waypoints()->Add();
  // @@protoc_insertion_point(field_add:agricultural.robot.navigation.v1.NavigationGoal.waypoints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::Waypoint>& NavigationGoal::waypoints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:agricultural.robot.navigation.v1.NavigationGoal.waypoints)
  return _internal_waypoints();
}
inline const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::Waypoint>&
NavigationGoal::_internal_waypoints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.waypoints_;
}
inline ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::Waypoint>* PROTOBUF_NONNULL
NavigationGoal::_internal_mutable_waypoints() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.waypoints_;
}

// .google.protobuf.Timestamp deadline = 7 [json_name = "deadline"];
inline bool NavigationGoal::has_deadline() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.deadline_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& NavigationGoal::_internal_deadline() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.deadline_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& NavigationGoal::deadline() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationGoal.deadline)
  return _internal_deadline();
}
inline void NavigationGoal::unsafe_arena_set_allocated_deadline(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deadline_);
  }
  _impl_.deadline_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.NavigationGoal.deadline)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE NavigationGoal::release_deadline() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::google::protobuf::Timestamp* released = _impl_.deadline_;
  _impl_.deadline_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE NavigationGoal::unsafe_arena_release_deadline() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationGoal.deadline)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::google::protobuf::Timestamp* temp = _impl_.deadline_;
  _impl_.deadline_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL NavigationGoal::_internal_mutable_deadline() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.deadline_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.deadline_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.deadline_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL NavigationGoal::mutable_deadline()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_deadline();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationGoal.deadline)
  return _msg;
}
inline void NavigationGoal::set_allocated_deadline(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deadline_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.deadline_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationGoal.deadline)
}

// -------------------------------------------------------------------

// TrajectoryCommand

// string robot_id = 1 [json_name = "robotId"];
inline void TrajectoryCommand::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& TrajectoryCommand::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.TrajectoryCommand.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void TrajectoryCommand::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.TrajectoryCommand.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL TrajectoryCommand::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.TrajectoryCommand.robot_id)
  return _s;
}
inline const ::std::string& TrajectoryCommand::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void TrajectoryCommand::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL TrajectoryCommand::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE TrajectoryCommand::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.TrajectoryCommand.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void TrajectoryCommand::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.TrajectoryCommand.robot_id)
}

// string trajectory_id = 2 [json_name = "trajectoryId"];
inline void TrajectoryCommand::clear_trajectory_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trajectory_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& TrajectoryCommand::trajectory_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.TrajectoryCommand.trajectory_id)
  return _internal_trajectory_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void TrajectoryCommand::set_trajectory_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.trajectory_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.TrajectoryCommand.trajectory_id)
}
inline ::std::string* PROTOBUF_NONNULL TrajectoryCommand::mutable_trajectory_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_trajectory_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.TrajectoryCommand.trajectory_id)
  return _s;
}
inline const ::std::string& TrajectoryCommand::_internal_trajectory_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trajectory_id_.Get();
}
inline void TrajectoryCommand::_internal_set_trajectory_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.trajectory_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL TrajectoryCommand::_internal_mutable_trajectory_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.trajectory_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE TrajectoryCommand::release_trajectory_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.TrajectoryCommand.trajectory_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.trajectory_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.trajectory_id_.Set("", GetArena());
  }
  return released;
}
inline void TrajectoryCommand::set_allocated_trajectory_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.trajectory_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.trajectory_id_.IsDefault()) {
    _impl_.trajectory_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.TrajectoryCommand.trajectory_id)
}

// repeated .agricultural.robot.navigation.v1.TrajectoryPoint points = 3 [json_name = "points"];
inline int TrajectoryCommand::_internal_points_size() const {
  return _internal_points().size();
}
inline int TrajectoryCommand::points_size() const {
  return _internal_points_size();
}
inline void TrajectoryCommand::clear_points() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.points_.Clear();
}
inline ::agricultural::robot::navigation::v1::TrajectoryPoint* PROTOBUF_NONNULL TrajectoryCommand::mutable_points(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.TrajectoryCommand.points)
  return _internal_mutable_points()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::TrajectoryPoint>* PROTOBUF_NONNULL TrajectoryCommand::mutable_points()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:agricultural.robot.navigation.v1.TrajectoryCommand.points)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_points();
}
inline const ::agricultural::robot::navigation::v1::TrajectoryPoint& TrajectoryCommand::points(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.TrajectoryCommand.points)
  return _internal_points().Get(index);
}
inline ::agricultural::robot::navigation::v1::TrajectoryPoint* PROTOBUF_NONNULL TrajectoryCommand::add_points()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::agricultural::robot::navigation::v1::TrajectoryPoint* _add = _internal_mutable_points()->Add();
  // @@protoc_insertion_point(field_add:agricultural.robot.navigation.v1.TrajectoryCommand.points)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::TrajectoryPoint>& TrajectoryCommand::points() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:agricultural.robot.navigation.v1.TrajectoryCommand.points)
  return _internal_points();
}
inline const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::TrajectoryPoint>&
TrajectoryCommand::_internal_points() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.points_;
}
inline ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::TrajectoryPoint>* PROTOBUF_NONNULL
TrajectoryCommand::_internal_mutable_points() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.points_;
}

// .agricultural.robot.navigation.v1.TrajectoryOptions options = 4 [json_name = "options"];
inline bool TrajectoryCommand::has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline void TrajectoryCommand::clear_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::agricultural::robot::navigation::v1::TrajectoryOptions& TrajectoryCommand::_internal_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::TrajectoryOptions* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::TrajectoryOptions&>(::agricultural::robot::navigation::v1::_TrajectoryOptions_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::TrajectoryOptions& TrajectoryCommand::options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.TrajectoryCommand.options)
  return _internal_options();
}
inline void TrajectoryCommand::unsafe_arena_set_allocated_options(
    ::agricultural::robot::navigation::v1::TrajectoryOptions* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = reinterpret_cast<::agricultural::robot::navigation::v1::TrajectoryOptions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.TrajectoryCommand.options)
}
inline ::agricultural::robot::navigation::v1::TrajectoryOptions* PROTOBUF_NULLABLE TrajectoryCommand::release_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::agricultural::robot::navigation::v1::TrajectoryOptions* released = _impl_.options_;
  _impl_.options_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::TrajectoryOptions* PROTOBUF_NULLABLE TrajectoryCommand::unsafe_arena_release_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.TrajectoryCommand.options)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::agricultural::robot::navigation::v1::TrajectoryOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::TrajectoryOptions* PROTOBUF_NONNULL TrajectoryCommand::_internal_mutable_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::TrajectoryOptions>(GetArena());
    _impl_.options_ = reinterpret_cast<::agricultural::robot::navigation::v1::TrajectoryOptions*>(p);
  }
  return _impl_.options_;
}
inline ::agricultural::robot::navigation::v1::TrajectoryOptions* PROTOBUF_NONNULL TrajectoryCommand::mutable_options()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::agricultural::robot::navigation::v1::TrajectoryOptions* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.TrajectoryCommand.options)
  return _msg;
}
inline void TrajectoryCommand::set_allocated_options(::agricultural::robot::navigation::v1::TrajectoryOptions* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.options_ = reinterpret_cast<::agricultural::robot::navigation::v1::TrajectoryOptions*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.TrajectoryCommand.options)
}

// string frame_id = 5 [json_name = "frameId"];
inline void TrajectoryCommand::clear_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& TrajectoryCommand::frame_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.TrajectoryCommand.frame_id)
  return _internal_frame_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void TrajectoryCommand::set_frame_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.frame_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.TrajectoryCommand.frame_id)
}
inline ::std::string* PROTOBUF_NONNULL TrajectoryCommand::mutable_frame_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_frame_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.TrajectoryCommand.frame_id)
  return _s;
}
inline const ::std::string& TrajectoryCommand::_internal_frame_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_id_.Get();
}
inline void TrajectoryCommand::_internal_set_frame_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.frame_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL TrajectoryCommand::_internal_mutable_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.frame_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE TrajectoryCommand::release_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.TrajectoryCommand.frame_id)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.frame_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  return released;
}
inline void TrajectoryCommand::set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.frame_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.frame_id_.IsDefault()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.TrajectoryCommand.frame_id)
}

// -------------------------------------------------------------------

// Waypoint

// string waypoint_id = 1 [json_name = "waypointId"];
inline void Waypoint::clear_waypoint_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.waypoint_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Waypoint::waypoint_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Waypoint.waypoint_id)
  return _internal_waypoint_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Waypoint::set_waypoint_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.waypoint_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.Waypoint.waypoint_id)
}
inline ::std::string* PROTOBUF_NONNULL Waypoint::mutable_waypoint_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_waypoint_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.Waypoint.waypoint_id)
  return _s;
}
inline const ::std::string& Waypoint::_internal_waypoint_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.waypoint_id_.Get();
}
inline void Waypoint::_internal_set_waypoint_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.waypoint_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Waypoint::_internal_mutable_waypoint_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.waypoint_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Waypoint::release_waypoint_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.Waypoint.waypoint_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.waypoint_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.waypoint_id_.Set("", GetArena());
  }
  return released;
}
inline void Waypoint::set_allocated_waypoint_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.waypoint_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.waypoint_id_.IsDefault()) {
    _impl_.waypoint_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.Waypoint.waypoint_id)
}

// .agricultural.robot.navigation.v1.PoseWithCovariance pose = 2 [json_name = "pose"];
inline bool Waypoint::has_pose() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pose_ != nullptr);
  return value;
}
inline void Waypoint::clear_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pose_ != nullptr) _impl_.pose_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::agricultural::robot::navigation::v1::PoseWithCovariance& Waypoint::_internal_pose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::PoseWithCovariance* p = _impl_.pose_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::PoseWithCovariance&>(::agricultural::robot::navigation::v1::_PoseWithCovariance_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::PoseWithCovariance& Waypoint::pose() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Waypoint.pose)
  return _internal_pose();
}
inline void Waypoint::unsafe_arena_set_allocated_pose(
    ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose_);
  }
  _impl_.pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.Waypoint.pose)
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE Waypoint::release_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* released = _impl_.pose_;
  _impl_.pose_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE Waypoint::unsafe_arena_release_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.Waypoint.pose)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* temp = _impl_.pose_;
  _impl_.pose_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL Waypoint::_internal_mutable_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pose_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::PoseWithCovariance>(GetArena());
    _impl_.pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(p);
  }
  return _impl_.pose_;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL Waypoint::mutable_pose()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* _msg = _internal_mutable_pose();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.Waypoint.pose)
  return _msg;
}
inline void Waypoint::set_allocated_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.Waypoint.pose)
}

// .agricultural.robot.navigation.v1.WaypointType type = 3 [json_name = "type"];
inline void Waypoint::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::agricultural::robot::navigation::v1::WaypointType Waypoint::type() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Waypoint.type)
  return _internal_type();
}
inline void Waypoint::set_type(::agricultural::robot::navigation::v1::WaypointType value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.Waypoint.type)
}
inline ::agricultural::robot::navigation::v1::WaypointType Waypoint::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::WaypointType>(_impl_.type_);
}
inline void Waypoint::_internal_set_type(::agricultural::robot::navigation::v1::WaypointType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .google.protobuf.Duration max_duration_at_waypoint = 4 [json_name = "maxDurationAtWaypoint"];
inline bool Waypoint::has_max_duration_at_waypoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.max_duration_at_waypoint_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& Waypoint::_internal_max_duration_at_waypoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.max_duration_at_waypoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& Waypoint::max_duration_at_waypoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Waypoint.max_duration_at_waypoint)
  return _internal_max_duration_at_waypoint();
}
inline void Waypoint::unsafe_arena_set_allocated_max_duration_at_waypoint(
    ::google::protobuf::Duration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.max_duration_at_waypoint_);
  }
  _impl_.max_duration_at_waypoint_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.Waypoint.max_duration_at_waypoint)
}
inline ::google::protobuf::Duration* PROTOBUF_NULLABLE Waypoint::release_max_duration_at_waypoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Duration* released = _impl_.max_duration_at_waypoint_;
  _impl_.max_duration_at_waypoint_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* PROTOBUF_NULLABLE Waypoint::unsafe_arena_release_max_duration_at_waypoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.Waypoint.max_duration_at_waypoint)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Duration* temp = _impl_.max_duration_at_waypoint_;
  _impl_.max_duration_at_waypoint_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* PROTOBUF_NONNULL Waypoint::_internal_mutable_max_duration_at_waypoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.max_duration_at_waypoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.max_duration_at_waypoint_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.max_duration_at_waypoint_;
}
inline ::google::protobuf::Duration* PROTOBUF_NONNULL Waypoint::mutable_max_duration_at_waypoint()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Duration* _msg = _internal_mutable_max_duration_at_waypoint();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.Waypoint.max_duration_at_waypoint)
  return _msg;
}
inline void Waypoint::set_allocated_max_duration_at_waypoint(::google::protobuf::Duration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.max_duration_at_waypoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.max_duration_at_waypoint_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.Waypoint.max_duration_at_waypoint)
}

// repeated .agricultural.robot.navigation.v1.WaypointAction actions = 5 [json_name = "actions"];
inline int Waypoint::_internal_actions_size() const {
  return _internal_actions().size();
}
inline int Waypoint::actions_size() const {
  return _internal_actions_size();
}
inline void Waypoint::clear_actions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.actions_.Clear();
}
inline ::agricultural::robot::navigation::v1::WaypointAction* PROTOBUF_NONNULL Waypoint::mutable_actions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.Waypoint.actions)
  return _internal_mutable_actions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::WaypointAction>* PROTOBUF_NONNULL Waypoint::mutable_actions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:agricultural.robot.navigation.v1.Waypoint.actions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_actions();
}
inline const ::agricultural::robot::navigation::v1::WaypointAction& Waypoint::actions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Waypoint.actions)
  return _internal_actions().Get(index);
}
inline ::agricultural::robot::navigation::v1::WaypointAction* PROTOBUF_NONNULL Waypoint::add_actions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::agricultural::robot::navigation::v1::WaypointAction* _add = _internal_mutable_actions()->Add();
  // @@protoc_insertion_point(field_add:agricultural.robot.navigation.v1.Waypoint.actions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::WaypointAction>& Waypoint::actions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:agricultural.robot.navigation.v1.Waypoint.actions)
  return _internal_actions();
}
inline const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::WaypointAction>&
Waypoint::_internal_actions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.actions_;
}
inline ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::WaypointAction>* PROTOBUF_NONNULL
Waypoint::_internal_mutable_actions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.actions_;
}

// -------------------------------------------------------------------

// TrajectoryPoint

// .agricultural.robot.navigation.v1.Pose pose = 1 [json_name = "pose"];
inline bool TrajectoryPoint::has_pose() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pose_ != nullptr);
  return value;
}
inline void TrajectoryPoint::clear_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pose_ != nullptr) _impl_.pose_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::agricultural::robot::navigation::v1::Pose& TrajectoryPoint::_internal_pose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::Pose* p = _impl_.pose_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::Pose&>(::agricultural::robot::navigation::v1::_Pose_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::Pose& TrajectoryPoint::pose() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.TrajectoryPoint.pose)
  return _internal_pose();
}
inline void TrajectoryPoint::unsafe_arena_set_allocated_pose(
    ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose_);
  }
  _impl_.pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::Pose*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.TrajectoryPoint.pose)
}
inline ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE TrajectoryPoint::release_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::agricultural::robot::navigation::v1::Pose* released = _impl_.pose_;
  _impl_.pose_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE TrajectoryPoint::unsafe_arena_release_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.TrajectoryPoint.pose)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::agricultural::robot::navigation::v1::Pose* temp = _impl_.pose_;
  _impl_.pose_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NONNULL TrajectoryPoint::_internal_mutable_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pose_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::Pose>(GetArena());
    _impl_.pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::Pose*>(p);
  }
  return _impl_.pose_;
}
inline ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NONNULL TrajectoryPoint::mutable_pose()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::agricultural::robot::navigation::v1::Pose* _msg = _internal_mutable_pose();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.TrajectoryPoint.pose)
  return _msg;
}
inline void TrajectoryPoint::set_allocated_pose(::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::Pose*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.TrajectoryPoint.pose)
}

// .agricultural.robot.navigation.v1.Twist velocity = 2 [json_name = "velocity"];
inline bool TrajectoryPoint::has_velocity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.velocity_ != nullptr);
  return value;
}
inline void TrajectoryPoint::clear_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.velocity_ != nullptr) _impl_.velocity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::agricultural::robot::navigation::v1::Twist& TrajectoryPoint::_internal_velocity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::Twist* p = _impl_.velocity_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::Twist&>(::agricultural::robot::navigation::v1::_Twist_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::Twist& TrajectoryPoint::velocity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.TrajectoryPoint.velocity)
  return _internal_velocity();
}
inline void TrajectoryPoint::unsafe_arena_set_allocated_velocity(
    ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.velocity_);
  }
  _impl_.velocity_ = reinterpret_cast<::agricultural::robot::navigation::v1::Twist*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.TrajectoryPoint.velocity)
}
inline ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE TrajectoryPoint::release_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::Twist* released = _impl_.velocity_;
  _impl_.velocity_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE TrajectoryPoint::unsafe_arena_release_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.TrajectoryPoint.velocity)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::Twist* temp = _impl_.velocity_;
  _impl_.velocity_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NONNULL TrajectoryPoint::_internal_mutable_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.velocity_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::Twist>(GetArena());
    _impl_.velocity_ = reinterpret_cast<::agricultural::robot::navigation::v1::Twist*>(p);
  }
  return _impl_.velocity_;
}
inline ::agricultural::robot::navigation::v1::Twist* PROTOBUF_NONNULL TrajectoryPoint::mutable_velocity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::agricultural::robot::navigation::v1::Twist* _msg = _internal_mutable_velocity();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.TrajectoryPoint.velocity)
  return _msg;
}
inline void TrajectoryPoint::set_allocated_velocity(::agricultural::robot::navigation::v1::Twist* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.velocity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.velocity_ = reinterpret_cast<::agricultural::robot::navigation::v1::Twist*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.TrajectoryPoint.velocity)
}

// .google.protobuf.Timestamp time_from_start = 3 [json_name = "timeFromStart"];
inline bool TrajectoryPoint::has_time_from_start() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_from_start_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& TrajectoryPoint::_internal_time_from_start() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.time_from_start_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& TrajectoryPoint::time_from_start() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.TrajectoryPoint.time_from_start)
  return _internal_time_from_start();
}
inline void TrajectoryPoint::unsafe_arena_set_allocated_time_from_start(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_from_start_);
  }
  _impl_.time_from_start_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.TrajectoryPoint.time_from_start)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE TrajectoryPoint::release_time_from_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.time_from_start_;
  _impl_.time_from_start_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE TrajectoryPoint::unsafe_arena_release_time_from_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.TrajectoryPoint.time_from_start)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.time_from_start_;
  _impl_.time_from_start_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL TrajectoryPoint::_internal_mutable_time_from_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_from_start_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.time_from_start_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.time_from_start_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL TrajectoryPoint::mutable_time_from_start()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_time_from_start();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.TrajectoryPoint.time_from_start)
  return _msg;
}
inline void TrajectoryPoint::set_allocated_time_from_start(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_from_start_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.time_from_start_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.TrajectoryPoint.time_from_start)
}

// repeated double accelerations = 4 [json_name = "accelerations"];
inline int TrajectoryPoint::_internal_accelerations_size() const {
  return _internal_accelerations().size();
}
inline int TrajectoryPoint::accelerations_size() const {
  return _internal_accelerations_size();
}
inline void TrajectoryPoint::clear_accelerations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accelerations_.Clear();
}
inline double TrajectoryPoint::accelerations(int index) const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.TrajectoryPoint.accelerations)
  return _internal_accelerations().Get(index);
}
inline void TrajectoryPoint::set_accelerations(int index, double value) {
  _internal_mutable_accelerations()->Set(index, value);
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.TrajectoryPoint.accelerations)
}
inline void TrajectoryPoint::add_accelerations(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_accelerations()->Add(value);
  // @@protoc_insertion_point(field_add:agricultural.robot.navigation.v1.TrajectoryPoint.accelerations)
}
inline const ::google::protobuf::RepeatedField<double>& TrajectoryPoint::accelerations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:agricultural.robot.navigation.v1.TrajectoryPoint.accelerations)
  return _internal_accelerations();
}
inline ::google::protobuf::RepeatedField<double>* PROTOBUF_NONNULL TrajectoryPoint::mutable_accelerations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:agricultural.robot.navigation.v1.TrajectoryPoint.accelerations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_accelerations();
}
inline const ::google::protobuf::RepeatedField<double>&
TrajectoryPoint::_internal_accelerations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accelerations_;
}
inline ::google::protobuf::RepeatedField<double>* PROTOBUF_NONNULL
TrajectoryPoint::_internal_mutable_accelerations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.accelerations_;
}

// -------------------------------------------------------------------

// NavigationOptions

// .agricultural.robot.navigation.v1.PlannerType planner = 1 [json_name = "planner"];
inline void NavigationOptions::clear_planner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.planner_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::agricultural::robot::navigation::v1::PlannerType NavigationOptions::planner() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationOptions.planner)
  return _internal_planner();
}
inline void NavigationOptions::set_planner(::agricultural::robot::navigation::v1::PlannerType value) {
  _internal_set_planner(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationOptions.planner)
}
inline ::agricultural::robot::navigation::v1::PlannerType NavigationOptions::_internal_planner() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::PlannerType>(_impl_.planner_);
}
inline void NavigationOptions::_internal_set_planner(::agricultural::robot::navigation::v1::PlannerType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.planner_ = value;
}

// double tolerance_linear = 2 [json_name = "toleranceLinear"];
inline void NavigationOptions::clear_tolerance_linear() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tolerance_linear_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double NavigationOptions::tolerance_linear() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationOptions.tolerance_linear)
  return _internal_tolerance_linear();
}
inline void NavigationOptions::set_tolerance_linear(double value) {
  _internal_set_tolerance_linear(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationOptions.tolerance_linear)
}
inline double NavigationOptions::_internal_tolerance_linear() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tolerance_linear_;
}
inline void NavigationOptions::_internal_set_tolerance_linear(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tolerance_linear_ = value;
}

// double tolerance_angular = 3 [json_name = "toleranceAngular"];
inline void NavigationOptions::clear_tolerance_angular() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tolerance_angular_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double NavigationOptions::tolerance_angular() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationOptions.tolerance_angular)
  return _internal_tolerance_angular();
}
inline void NavigationOptions::set_tolerance_angular(double value) {
  _internal_set_tolerance_angular(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationOptions.tolerance_angular)
}
inline double NavigationOptions::_internal_tolerance_angular() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tolerance_angular_;
}
inline void NavigationOptions::_internal_set_tolerance_angular(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tolerance_angular_ = value;
}

// bool use_obstacle_avoidance = 4 [json_name = "useObstacleAvoidance"];
inline void NavigationOptions::clear_use_obstacle_avoidance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_obstacle_avoidance_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool NavigationOptions::use_obstacle_avoidance() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationOptions.use_obstacle_avoidance)
  return _internal_use_obstacle_avoidance();
}
inline void NavigationOptions::set_use_obstacle_avoidance(bool value) {
  _internal_set_use_obstacle_avoidance(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationOptions.use_obstacle_avoidance)
}
inline bool NavigationOptions::_internal_use_obstacle_avoidance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_obstacle_avoidance_;
}
inline void NavigationOptions::_internal_set_use_obstacle_avoidance(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_obstacle_avoidance_ = value;
}

// repeated string avoid_zones = 5 [json_name = "avoidZones"];
inline int NavigationOptions::_internal_avoid_zones_size() const {
  return _internal_avoid_zones().size();
}
inline int NavigationOptions::avoid_zones_size() const {
  return _internal_avoid_zones_size();
}
inline void NavigationOptions::clear_avoid_zones() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avoid_zones_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL NavigationOptions::add_avoid_zones()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_avoid_zones()->Add();
  // @@protoc_insertion_point(field_add_mutable:agricultural.robot.navigation.v1.NavigationOptions.avoid_zones)
  return _s;
}
inline const ::std::string& NavigationOptions::avoid_zones(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationOptions.avoid_zones)
  return _internal_avoid_zones().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL NavigationOptions::mutable_avoid_zones(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationOptions.avoid_zones)
  return _internal_mutable_avoid_zones()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void NavigationOptions::set_avoid_zones(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_avoid_zones()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationOptions.avoid_zones)
}
template <typename Arg_, typename... Args_>
inline void NavigationOptions::add_avoid_zones(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_avoid_zones(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:agricultural.robot.navigation.v1.NavigationOptions.avoid_zones)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& NavigationOptions::avoid_zones()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:agricultural.robot.navigation.v1.NavigationOptions.avoid_zones)
  return _internal_avoid_zones();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
NavigationOptions::mutable_avoid_zones() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:agricultural.robot.navigation.v1.NavigationOptions.avoid_zones)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_avoid_zones();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
NavigationOptions::_internal_avoid_zones() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.avoid_zones_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
NavigationOptions::_internal_mutable_avoid_zones() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.avoid_zones_;
}

// .agricultural.robot.navigation.v1.NavigationBehavior behavior = 6 [json_name = "behavior"];
inline void NavigationOptions::clear_behavior() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.behavior_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::agricultural::robot::navigation::v1::NavigationBehavior NavigationOptions::behavior() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationOptions.behavior)
  return _internal_behavior();
}
inline void NavigationOptions::set_behavior(::agricultural::robot::navigation::v1::NavigationBehavior value) {
  _internal_set_behavior(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationOptions.behavior)
}
inline ::agricultural::robot::navigation::v1::NavigationBehavior NavigationOptions::_internal_behavior() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::NavigationBehavior>(_impl_.behavior_);
}
inline void NavigationOptions::_internal_set_behavior(::agricultural::robot::navigation::v1::NavigationBehavior value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.behavior_ = value;
}

// uint32 max_planning_time_ms = 7 [json_name = "maxPlanningTimeMs"];
inline void NavigationOptions::clear_max_planning_time_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_planning_time_ms_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t NavigationOptions::max_planning_time_ms() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationOptions.max_planning_time_ms)
  return _internal_max_planning_time_ms();
}
inline void NavigationOptions::set_max_planning_time_ms(::uint32_t value) {
  _internal_set_max_planning_time_ms(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationOptions.max_planning_time_ms)
}
inline ::uint32_t NavigationOptions::_internal_max_planning_time_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_planning_time_ms_;
}
inline void NavigationOptions::_internal_set_max_planning_time_ms(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_planning_time_ms_ = value;
}

// uint32 max_retries = 8 [json_name = "maxRetries"];
inline void NavigationOptions::clear_max_retries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_retries_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t NavigationOptions::max_retries() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationOptions.max_retries)
  return _internal_max_retries();
}
inline void NavigationOptions::set_max_retries(::uint32_t value) {
  _internal_set_max_retries(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationOptions.max_retries)
}
inline ::uint32_t NavigationOptions::_internal_max_retries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_retries_;
}
inline void NavigationOptions::_internal_set_max_retries(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_retries_ = value;
}

// -------------------------------------------------------------------

// TrajectoryOptions

// bool interpolate_path = 1 [json_name = "interpolatePath"];
inline void TrajectoryOptions::clear_interpolate_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interpolate_path_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool TrajectoryOptions::interpolate_path() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.TrajectoryOptions.interpolate_path)
  return _internal_interpolate_path();
}
inline void TrajectoryOptions::set_interpolate_path(bool value) {
  _internal_set_interpolate_path(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.TrajectoryOptions.interpolate_path)
}
inline bool TrajectoryOptions::_internal_interpolate_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interpolate_path_;
}
inline void TrajectoryOptions::_internal_set_interpolate_path(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interpolate_path_ = value;
}

// double velocity_scaling = 2 [json_name = "velocityScaling"];
inline void TrajectoryOptions::clear_velocity_scaling() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.velocity_scaling_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double TrajectoryOptions::velocity_scaling() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.TrajectoryOptions.velocity_scaling)
  return _internal_velocity_scaling();
}
inline void TrajectoryOptions::set_velocity_scaling(double value) {
  _internal_set_velocity_scaling(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.TrajectoryOptions.velocity_scaling)
}
inline double TrajectoryOptions::_internal_velocity_scaling() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.velocity_scaling_;
}
inline void TrajectoryOptions::_internal_set_velocity_scaling(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.velocity_scaling_ = value;
}

// bool check_collisions = 3 [json_name = "checkCollisions"];
inline void TrajectoryOptions::clear_check_collisions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.check_collisions_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool TrajectoryOptions::check_collisions() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.TrajectoryOptions.check_collisions)
  return _internal_check_collisions();
}
inline void TrajectoryOptions::set_check_collisions(bool value) {
  _internal_set_check_collisions(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.TrajectoryOptions.check_collisions)
}
inline bool TrajectoryOptions::_internal_check_collisions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.check_collisions_;
}
inline void TrajectoryOptions::_internal_set_check_collisions(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.check_collisions_ = value;
}

// .agricultural.robot.navigation.v1.TrajectoryExecutionMode execution_mode = 4 [json_name = "executionMode"];
inline void TrajectoryOptions::clear_execution_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::agricultural::robot::navigation::v1::TrajectoryExecutionMode TrajectoryOptions::execution_mode() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.TrajectoryOptions.execution_mode)
  return _internal_execution_mode();
}
inline void TrajectoryOptions::set_execution_mode(::agricultural::robot::navigation::v1::TrajectoryExecutionMode value) {
  _internal_set_execution_mode(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.TrajectoryOptions.execution_mode)
}
inline ::agricultural::robot::navigation::v1::TrajectoryExecutionMode TrajectoryOptions::_internal_execution_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::TrajectoryExecutionMode>(_impl_.execution_mode_);
}
inline void TrajectoryOptions::_internal_set_execution_mode(::agricultural::robot::navigation::v1::TrajectoryExecutionMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_mode_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// WaypointAction

// .agricultural.robot.navigation.v1.WaypointActionType type = 1 [json_name = "type"];
inline void WaypointAction::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::agricultural::robot::navigation::v1::WaypointActionType WaypointAction::type() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.WaypointAction.type)
  return _internal_type();
}
inline void WaypointAction::set_type(::agricultural::robot::navigation::v1::WaypointActionType value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.WaypointAction.type)
}
inline ::agricultural::robot::navigation::v1::WaypointActionType WaypointAction::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::WaypointActionType>(_impl_.type_);
}
inline void WaypointAction::_internal_set_type(::agricultural::robot::navigation::v1::WaypointActionType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .google.protobuf.Duration duration = 2 [json_name = "duration"];
inline bool WaypointAction::has_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.duration_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& WaypointAction::_internal_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& WaypointAction::duration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.WaypointAction.duration)
  return _internal_duration();
}
inline void WaypointAction::unsafe_arena_set_allocated_duration(
    ::google::protobuf::Duration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.duration_);
  }
  _impl_.duration_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.WaypointAction.duration)
}
inline ::google::protobuf::Duration* PROTOBUF_NULLABLE WaypointAction::release_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.duration_;
  _impl_.duration_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* PROTOBUF_NULLABLE WaypointAction::unsafe_arena_release_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.WaypointAction.duration)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.duration_;
  _impl_.duration_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* PROTOBUF_NONNULL WaypointAction::_internal_mutable_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.duration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.duration_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.duration_;
}
inline ::google::protobuf::Duration* PROTOBUF_NONNULL WaypointAction::mutable_duration()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Duration* _msg = _internal_mutable_duration();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.WaypointAction.duration)
  return _msg;
}
inline void WaypointAction::set_allocated_duration(::google::protobuf::Duration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.duration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.duration_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.WaypointAction.duration)
}

// map<string, string> parameters = 3 [json_name = "parameters"];
inline int WaypointAction::_internal_parameters_size() const {
  return _internal_parameters().size();
}
inline int WaypointAction::parameters_size() const {
  return _internal_parameters_size();
}
inline void WaypointAction::clear_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameters_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& WaypointAction::_internal_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parameters_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& WaypointAction::parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:agricultural.robot.navigation.v1.WaypointAction.parameters)
  return _internal_parameters();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL WaypointAction::_internal_mutable_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.parameters_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL WaypointAction::mutable_parameters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:agricultural.robot.navigation.v1.WaypointAction.parameters)
  return _internal_mutable_parameters();
}

// -------------------------------------------------------------------

// CancelGoalRequest

// string robot_id = 1 [json_name = "robotId"];
inline void CancelGoalRequest::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CancelGoalRequest::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CancelGoalRequest.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CancelGoalRequest::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CancelGoalRequest.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL CancelGoalRequest::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.CancelGoalRequest.robot_id)
  return _s;
}
inline const ::std::string& CancelGoalRequest::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void CancelGoalRequest::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CancelGoalRequest::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CancelGoalRequest::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.CancelGoalRequest.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void CancelGoalRequest::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.CancelGoalRequest.robot_id)
}

// optional string goal_id = 2 [json_name = "goalId"];
inline bool CancelGoalRequest::has_goal_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CancelGoalRequest::clear_goal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.goal_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CancelGoalRequest::goal_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CancelGoalRequest.goal_id)
  return _internal_goal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CancelGoalRequest::set_goal_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.goal_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CancelGoalRequest.goal_id)
}
inline ::std::string* PROTOBUF_NONNULL CancelGoalRequest::mutable_goal_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_goal_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.CancelGoalRequest.goal_id)
  return _s;
}
inline const ::std::string& CancelGoalRequest::_internal_goal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.goal_id_.Get();
}
inline void CancelGoalRequest::_internal_set_goal_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.goal_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CancelGoalRequest::_internal_mutable_goal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.goal_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CancelGoalRequest::release_goal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.CancelGoalRequest.goal_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.goal_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.goal_id_.Set("", GetArena());
  }
  return released;
}
inline void CancelGoalRequest::set_allocated_goal_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.goal_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.goal_id_.IsDefault()) {
    _impl_.goal_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.CancelGoalRequest.goal_id)
}

// -------------------------------------------------------------------

// GetNavigationStatusRequest

// string robot_id = 1 [json_name = "robotId"];
inline void GetNavigationStatusRequest::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetNavigationStatusRequest::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.GetNavigationStatusRequest.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetNavigationStatusRequest::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.GetNavigationStatusRequest.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL GetNavigationStatusRequest::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.GetNavigationStatusRequest.robot_id)
  return _s;
}
inline const ::std::string& GetNavigationStatusRequest::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void GetNavigationStatusRequest::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetNavigationStatusRequest::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetNavigationStatusRequest::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.GetNavigationStatusRequest.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void GetNavigationStatusRequest::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.GetNavigationStatusRequest.robot_id)
}

// -------------------------------------------------------------------

// StreamNavigationStatusRequest

// string robot_id = 1 [json_name = "robotId"];
inline void StreamNavigationStatusRequest::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StreamNavigationStatusRequest::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.StreamNavigationStatusRequest.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void StreamNavigationStatusRequest::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.StreamNavigationStatusRequest.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL StreamNavigationStatusRequest::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.StreamNavigationStatusRequest.robot_id)
  return _s;
}
inline const ::std::string& StreamNavigationStatusRequest::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void StreamNavigationStatusRequest::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL StreamNavigationStatusRequest::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE StreamNavigationStatusRequest::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.StreamNavigationStatusRequest.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void StreamNavigationStatusRequest::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.StreamNavigationStatusRequest.robot_id)
}

// uint32 frequency_hz = 2 [json_name = "frequencyHz"];
inline void StreamNavigationStatusRequest::clear_frequency_hz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frequency_hz_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t StreamNavigationStatusRequest::frequency_hz() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.StreamNavigationStatusRequest.frequency_hz)
  return _internal_frequency_hz();
}
inline void StreamNavigationStatusRequest::set_frequency_hz(::uint32_t value) {
  _internal_set_frequency_hz(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.StreamNavigationStatusRequest.frequency_hz)
}
inline ::uint32_t StreamNavigationStatusRequest::_internal_frequency_hz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frequency_hz_;
}
inline void StreamNavigationStatusRequest::_internal_set_frequency_hz(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frequency_hz_ = value;
}

// -------------------------------------------------------------------

// NavigationResponse

// bool success = 1 [json_name = "success"];
inline void NavigationResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool NavigationResponse::success() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationResponse.success)
  return _internal_success();
}
inline void NavigationResponse::set_success(bool value) {
  _internal_set_success(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationResponse.success)
}
inline bool NavigationResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void NavigationResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2 [json_name = "message"];
inline void NavigationResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& NavigationResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void NavigationResponse::set_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationResponse.message)
}
inline ::std::string* PROTOBUF_NONNULL NavigationResponse::mutable_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationResponse.message)
  return _s;
}
inline const ::std::string& NavigationResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void NavigationResponse::_internal_set_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL NavigationResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE NavigationResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationResponse.message)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_.Set("", GetArena());
  }
  return released;
}
inline void NavigationResponse::set_allocated_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationResponse.message)
}

// string goal_id = 3 [json_name = "goalId"];
inline void NavigationResponse::clear_goal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.goal_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& NavigationResponse::goal_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationResponse.goal_id)
  return _internal_goal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void NavigationResponse::set_goal_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.goal_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationResponse.goal_id)
}
inline ::std::string* PROTOBUF_NONNULL NavigationResponse::mutable_goal_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_goal_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationResponse.goal_id)
  return _s;
}
inline const ::std::string& NavigationResponse::_internal_goal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.goal_id_.Get();
}
inline void NavigationResponse::_internal_set_goal_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.goal_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL NavigationResponse::_internal_mutable_goal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.goal_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE NavigationResponse::release_goal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationResponse.goal_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.goal_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.goal_id_.Set("", GetArena());
  }
  return released;
}
inline void NavigationResponse::set_allocated_goal_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.goal_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.goal_id_.IsDefault()) {
    _impl_.goal_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationResponse.goal_id)
}

// .agricultural.robot.navigation.v1.NavigationResult result = 4 [json_name = "result"];
inline void NavigationResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::agricultural::robot::navigation::v1::NavigationResult NavigationResponse::result() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationResponse.result)
  return _internal_result();
}
inline void NavigationResponse::set_result(::agricultural::robot::navigation::v1::NavigationResult value) {
  _internal_set_result(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationResponse.result)
}
inline ::agricultural::robot::navigation::v1::NavigationResult NavigationResponse::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::NavigationResult>(_impl_.result_);
}
inline void NavigationResponse::_internal_set_result(::agricultural::robot::navigation::v1::NavigationResult value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
inline bool NavigationResponse::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& NavigationResponse::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& NavigationResponse::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationResponse.timestamp)
  return _internal_timestamp();
}
inline void NavigationResponse::unsafe_arena_set_allocated_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.NavigationResponse.timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE NavigationResponse::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE NavigationResponse::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationResponse.timestamp)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL NavigationResponse::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL NavigationResponse::mutable_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationResponse.timestamp)
  return _msg;
}
inline void NavigationResponse::set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationResponse.timestamp)
}

// -------------------------------------------------------------------

// NavigationStatusResponse

// .agricultural.robot.navigation.v1.NavigationStatus status = 1 [json_name = "status"];
inline void NavigationStatusResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::agricultural::robot::navigation::v1::NavigationStatus NavigationStatusResponse::status() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationStatusResponse.status)
  return _internal_status();
}
inline void NavigationStatusResponse::set_status(::agricultural::robot::navigation::v1::NavigationStatus value) {
  _internal_set_status(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationStatusResponse.status)
}
inline ::agricultural::robot::navigation::v1::NavigationStatus NavigationStatusResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::NavigationStatus>(_impl_.status_);
}
inline void NavigationStatusResponse::_internal_set_status(::agricultural::robot::navigation::v1::NavigationStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// .agricultural.robot.navigation.v1.NavigationProgress progress = 2 [json_name = "progress"];
inline bool NavigationStatusResponse::has_progress() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.progress_ != nullptr);
  return value;
}
inline void NavigationStatusResponse::clear_progress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.progress_ != nullptr) _impl_.progress_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::agricultural::robot::navigation::v1::NavigationProgress& NavigationStatusResponse::_internal_progress() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::NavigationProgress* p = _impl_.progress_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::NavigationProgress&>(::agricultural::robot::navigation::v1::_NavigationProgress_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::NavigationProgress& NavigationStatusResponse::progress() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationStatusResponse.progress)
  return _internal_progress();
}
inline void NavigationStatusResponse::unsafe_arena_set_allocated_progress(
    ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.progress_);
  }
  _impl_.progress_ = reinterpret_cast<::agricultural::robot::navigation::v1::NavigationProgress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.NavigationStatusResponse.progress)
}
inline ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NULLABLE NavigationStatusResponse::release_progress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::agricultural::robot::navigation::v1::NavigationProgress* released = _impl_.progress_;
  _impl_.progress_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NULLABLE NavigationStatusResponse::unsafe_arena_release_progress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationStatusResponse.progress)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::agricultural::robot::navigation::v1::NavigationProgress* temp = _impl_.progress_;
  _impl_.progress_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NONNULL NavigationStatusResponse::_internal_mutable_progress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.progress_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::NavigationProgress>(GetArena());
    _impl_.progress_ = reinterpret_cast<::agricultural::robot::navigation::v1::NavigationProgress*>(p);
  }
  return _impl_.progress_;
}
inline ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NONNULL NavigationStatusResponse::mutable_progress()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::agricultural::robot::navigation::v1::NavigationProgress* _msg = _internal_mutable_progress();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationStatusResponse.progress)
  return _msg;
}
inline void NavigationStatusResponse::set_allocated_progress(::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.progress_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.progress_ = reinterpret_cast<::agricultural::robot::navigation::v1::NavigationProgress*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationStatusResponse.progress)
}

// optional .agricultural.robot.navigation.v1.NavigationGoal current_goal = 3 [json_name = "currentGoal"];
inline bool NavigationStatusResponse::has_current_goal() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.current_goal_ != nullptr);
  return value;
}
inline void NavigationStatusResponse::clear_current_goal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_goal_ != nullptr) _impl_.current_goal_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::agricultural::robot::navigation::v1::NavigationGoal& NavigationStatusResponse::_internal_current_goal() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::NavigationGoal* p = _impl_.current_goal_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::NavigationGoal&>(::agricultural::robot::navigation::v1::_NavigationGoal_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::NavigationGoal& NavigationStatusResponse::current_goal() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationStatusResponse.current_goal)
  return _internal_current_goal();
}
inline void NavigationStatusResponse::unsafe_arena_set_allocated_current_goal(
    ::agricultural::robot::navigation::v1::NavigationGoal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.current_goal_);
  }
  _impl_.current_goal_ = reinterpret_cast<::agricultural::robot::navigation::v1::NavigationGoal*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.NavigationStatusResponse.current_goal)
}
inline ::agricultural::robot::navigation::v1::NavigationGoal* PROTOBUF_NULLABLE NavigationStatusResponse::release_current_goal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::NavigationGoal* released = _impl_.current_goal_;
  _impl_.current_goal_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::NavigationGoal* PROTOBUF_NULLABLE NavigationStatusResponse::unsafe_arena_release_current_goal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationStatusResponse.current_goal)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::NavigationGoal* temp = _impl_.current_goal_;
  _impl_.current_goal_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::NavigationGoal* PROTOBUF_NONNULL NavigationStatusResponse::_internal_mutable_current_goal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_goal_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::NavigationGoal>(GetArena());
    _impl_.current_goal_ = reinterpret_cast<::agricultural::robot::navigation::v1::NavigationGoal*>(p);
  }
  return _impl_.current_goal_;
}
inline ::agricultural::robot::navigation::v1::NavigationGoal* PROTOBUF_NONNULL NavigationStatusResponse::mutable_current_goal()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::agricultural::robot::navigation::v1::NavigationGoal* _msg = _internal_mutable_current_goal();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationStatusResponse.current_goal)
  return _msg;
}
inline void NavigationStatusResponse::set_allocated_current_goal(::agricultural::robot::navigation::v1::NavigationGoal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.current_goal_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.current_goal_ = reinterpret_cast<::agricultural::robot::navigation::v1::NavigationGoal*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationStatusResponse.current_goal)
}

// repeated .agricultural.robot.navigation.v1.NavigationError errors = 4 [json_name = "errors"];
inline int NavigationStatusResponse::_internal_errors_size() const {
  return _internal_errors().size();
}
inline int NavigationStatusResponse::errors_size() const {
  return _internal_errors_size();
}
inline void NavigationStatusResponse::clear_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_.Clear();
}
inline ::agricultural::robot::navigation::v1::NavigationError* PROTOBUF_NONNULL NavigationStatusResponse::mutable_errors(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationStatusResponse.errors)
  return _internal_mutable_errors()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::NavigationError>* PROTOBUF_NONNULL NavigationStatusResponse::mutable_errors()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:agricultural.robot.navigation.v1.NavigationStatusResponse.errors)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_errors();
}
inline const ::agricultural::robot::navigation::v1::NavigationError& NavigationStatusResponse::errors(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationStatusResponse.errors)
  return _internal_errors().Get(index);
}
inline ::agricultural::robot::navigation::v1::NavigationError* PROTOBUF_NONNULL NavigationStatusResponse::add_errors()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::agricultural::robot::navigation::v1::NavigationError* _add = _internal_mutable_errors()->Add();
  // @@protoc_insertion_point(field_add:agricultural.robot.navigation.v1.NavigationStatusResponse.errors)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::NavigationError>& NavigationStatusResponse::errors() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:agricultural.robot.navigation.v1.NavigationStatusResponse.errors)
  return _internal_errors();
}
inline const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::NavigationError>&
NavigationStatusResponse::_internal_errors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.errors_;
}
inline ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::NavigationError>* PROTOBUF_NONNULL
NavigationStatusResponse::_internal_mutable_errors() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.errors_;
}

// .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
inline bool NavigationStatusResponse::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& NavigationStatusResponse::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& NavigationStatusResponse::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationStatusResponse.timestamp)
  return _internal_timestamp();
}
inline void NavigationStatusResponse::unsafe_arena_set_allocated_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.NavigationStatusResponse.timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE NavigationStatusResponse::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE NavigationStatusResponse::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationStatusResponse.timestamp)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL NavigationStatusResponse::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL NavigationStatusResponse::mutable_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationStatusResponse.timestamp)
  return _msg;
}
inline void NavigationStatusResponse::set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationStatusResponse.timestamp)
}

// -------------------------------------------------------------------

// NavigationStatusUpdate

// string robot_id = 1 [json_name = "robotId"];
inline void NavigationStatusUpdate::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& NavigationStatusUpdate::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationStatusUpdate.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void NavigationStatusUpdate::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationStatusUpdate.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL NavigationStatusUpdate::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationStatusUpdate.robot_id)
  return _s;
}
inline const ::std::string& NavigationStatusUpdate::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void NavigationStatusUpdate::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL NavigationStatusUpdate::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE NavigationStatusUpdate::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationStatusUpdate.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void NavigationStatusUpdate::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationStatusUpdate.robot_id)
}

// .agricultural.robot.navigation.v1.NavigationStatus status = 2 [json_name = "status"];
inline void NavigationStatusUpdate::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::agricultural::robot::navigation::v1::NavigationStatus NavigationStatusUpdate::status() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationStatusUpdate.status)
  return _internal_status();
}
inline void NavigationStatusUpdate::set_status(::agricultural::robot::navigation::v1::NavigationStatus value) {
  _internal_set_status(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationStatusUpdate.status)
}
inline ::agricultural::robot::navigation::v1::NavigationStatus NavigationStatusUpdate::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::NavigationStatus>(_impl_.status_);
}
inline void NavigationStatusUpdate::_internal_set_status(::agricultural::robot::navigation::v1::NavigationStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// .agricultural.robot.navigation.v1.NavigationProgress progress = 3 [json_name = "progress"];
inline bool NavigationStatusUpdate::has_progress() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.progress_ != nullptr);
  return value;
}
inline void NavigationStatusUpdate::clear_progress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.progress_ != nullptr) _impl_.progress_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::agricultural::robot::navigation::v1::NavigationProgress& NavigationStatusUpdate::_internal_progress() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::NavigationProgress* p = _impl_.progress_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::NavigationProgress&>(::agricultural::robot::navigation::v1::_NavigationProgress_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::NavigationProgress& NavigationStatusUpdate::progress() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationStatusUpdate.progress)
  return _internal_progress();
}
inline void NavigationStatusUpdate::unsafe_arena_set_allocated_progress(
    ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.progress_);
  }
  _impl_.progress_ = reinterpret_cast<::agricultural::robot::navigation::v1::NavigationProgress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.NavigationStatusUpdate.progress)
}
inline ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NULLABLE NavigationStatusUpdate::release_progress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::NavigationProgress* released = _impl_.progress_;
  _impl_.progress_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NULLABLE NavigationStatusUpdate::unsafe_arena_release_progress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationStatusUpdate.progress)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::NavigationProgress* temp = _impl_.progress_;
  _impl_.progress_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NONNULL NavigationStatusUpdate::_internal_mutable_progress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.progress_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::NavigationProgress>(GetArena());
    _impl_.progress_ = reinterpret_cast<::agricultural::robot::navigation::v1::NavigationProgress*>(p);
  }
  return _impl_.progress_;
}
inline ::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NONNULL NavigationStatusUpdate::mutable_progress()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::agricultural::robot::navigation::v1::NavigationProgress* _msg = _internal_mutable_progress();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationStatusUpdate.progress)
  return _msg;
}
inline void NavigationStatusUpdate::set_allocated_progress(::agricultural::robot::navigation::v1::NavigationProgress* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.progress_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.progress_ = reinterpret_cast<::agricultural::robot::navigation::v1::NavigationProgress*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationStatusUpdate.progress)
}

// .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
inline bool NavigationStatusUpdate::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& NavigationStatusUpdate::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& NavigationStatusUpdate::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationStatusUpdate.timestamp)
  return _internal_timestamp();
}
inline void NavigationStatusUpdate::unsafe_arena_set_allocated_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.NavigationStatusUpdate.timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE NavigationStatusUpdate::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE NavigationStatusUpdate::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationStatusUpdate.timestamp)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL NavigationStatusUpdate::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL NavigationStatusUpdate::mutable_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationStatusUpdate.timestamp)
  return _msg;
}
inline void NavigationStatusUpdate::set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationStatusUpdate.timestamp)
}

// optional .agricultural.robot.navigation.v1.NavigationError error = 5 [json_name = "error"];
inline bool NavigationStatusUpdate::has_error() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.error_ != nullptr);
  return value;
}
inline void NavigationStatusUpdate::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.error_ != nullptr) _impl_.error_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::agricultural::robot::navigation::v1::NavigationError& NavigationStatusUpdate::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::NavigationError* p = _impl_.error_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::NavigationError&>(::agricultural::robot::navigation::v1::_NavigationError_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::NavigationError& NavigationStatusUpdate::error() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationStatusUpdate.error)
  return _internal_error();
}
inline void NavigationStatusUpdate::unsafe_arena_set_allocated_error(
    ::agricultural::robot::navigation::v1::NavigationError* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_);
  }
  _impl_.error_ = reinterpret_cast<::agricultural::robot::navigation::v1::NavigationError*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.NavigationStatusUpdate.error)
}
inline ::agricultural::robot::navigation::v1::NavigationError* PROTOBUF_NULLABLE NavigationStatusUpdate::release_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::agricultural::robot::navigation::v1::NavigationError* released = _impl_.error_;
  _impl_.error_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::NavigationError* PROTOBUF_NULLABLE NavigationStatusUpdate::unsafe_arena_release_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationStatusUpdate.error)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::agricultural::robot::navigation::v1::NavigationError* temp = _impl_.error_;
  _impl_.error_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::NavigationError* PROTOBUF_NONNULL NavigationStatusUpdate::_internal_mutable_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.error_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::NavigationError>(GetArena());
    _impl_.error_ = reinterpret_cast<::agricultural::robot::navigation::v1::NavigationError*>(p);
  }
  return _impl_.error_;
}
inline ::agricultural::robot::navigation::v1::NavigationError* PROTOBUF_NONNULL NavigationStatusUpdate::mutable_error()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::agricultural::robot::navigation::v1::NavigationError* _msg = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationStatusUpdate.error)
  return _msg;
}
inline void NavigationStatusUpdate::set_allocated_error(::agricultural::robot::navigation::v1::NavigationError* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.error_ = reinterpret_cast<::agricultural::robot::navigation::v1::NavigationError*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationStatusUpdate.error)
}

// -------------------------------------------------------------------

// NavigationProgress

// double distance_remaining = 1 [json_name = "distanceRemaining"];
inline void NavigationProgress::clear_distance_remaining() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.distance_remaining_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double NavigationProgress::distance_remaining() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationProgress.distance_remaining)
  return _internal_distance_remaining();
}
inline void NavigationProgress::set_distance_remaining(double value) {
  _internal_set_distance_remaining(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationProgress.distance_remaining)
}
inline double NavigationProgress::_internal_distance_remaining() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.distance_remaining_;
}
inline void NavigationProgress::_internal_set_distance_remaining(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.distance_remaining_ = value;
}

// double distance_traveled = 2 [json_name = "distanceTraveled"];
inline void NavigationProgress::clear_distance_traveled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.distance_traveled_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double NavigationProgress::distance_traveled() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationProgress.distance_traveled)
  return _internal_distance_traveled();
}
inline void NavigationProgress::set_distance_traveled(double value) {
  _internal_set_distance_traveled(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationProgress.distance_traveled)
}
inline double NavigationProgress::_internal_distance_traveled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.distance_traveled_;
}
inline void NavigationProgress::_internal_set_distance_traveled(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.distance_traveled_ = value;
}

// .google.protobuf.Duration time_remaining = 3 [json_name = "timeRemaining"];
inline bool NavigationProgress::has_time_remaining() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_remaining_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& NavigationProgress::_internal_time_remaining() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.time_remaining_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& NavigationProgress::time_remaining() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationProgress.time_remaining)
  return _internal_time_remaining();
}
inline void NavigationProgress::unsafe_arena_set_allocated_time_remaining(
    ::google::protobuf::Duration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_remaining_);
  }
  _impl_.time_remaining_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.NavigationProgress.time_remaining)
}
inline ::google::protobuf::Duration* PROTOBUF_NULLABLE NavigationProgress::release_time_remaining() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.time_remaining_;
  _impl_.time_remaining_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* PROTOBUF_NULLABLE NavigationProgress::unsafe_arena_release_time_remaining() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationProgress.time_remaining)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.time_remaining_;
  _impl_.time_remaining_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* PROTOBUF_NONNULL NavigationProgress::_internal_mutable_time_remaining() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_remaining_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.time_remaining_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.time_remaining_;
}
inline ::google::protobuf::Duration* PROTOBUF_NONNULL NavigationProgress::mutable_time_remaining()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Duration* _msg = _internal_mutable_time_remaining();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationProgress.time_remaining)
  return _msg;
}
inline void NavigationProgress::set_allocated_time_remaining(::google::protobuf::Duration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_remaining_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.time_remaining_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationProgress.time_remaining)
}

// .google.protobuf.Duration time_elapsed = 4 [json_name = "timeElapsed"];
inline bool NavigationProgress::has_time_elapsed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_elapsed_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& NavigationProgress::_internal_time_elapsed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.time_elapsed_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& NavigationProgress::time_elapsed() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationProgress.time_elapsed)
  return _internal_time_elapsed();
}
inline void NavigationProgress::unsafe_arena_set_allocated_time_elapsed(
    ::google::protobuf::Duration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_elapsed_);
  }
  _impl_.time_elapsed_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.NavigationProgress.time_elapsed)
}
inline ::google::protobuf::Duration* PROTOBUF_NULLABLE NavigationProgress::release_time_elapsed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Duration* released = _impl_.time_elapsed_;
  _impl_.time_elapsed_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* PROTOBUF_NULLABLE NavigationProgress::unsafe_arena_release_time_elapsed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationProgress.time_elapsed)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Duration* temp = _impl_.time_elapsed_;
  _impl_.time_elapsed_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* PROTOBUF_NONNULL NavigationProgress::_internal_mutable_time_elapsed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_elapsed_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.time_elapsed_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.time_elapsed_;
}
inline ::google::protobuf::Duration* PROTOBUF_NONNULL NavigationProgress::mutable_time_elapsed()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Duration* _msg = _internal_mutable_time_elapsed();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationProgress.time_elapsed)
  return _msg;
}
inline void NavigationProgress::set_allocated_time_elapsed(::google::protobuf::Duration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_elapsed_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.time_elapsed_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationProgress.time_elapsed)
}

// uint32 current_waypoint_index = 5 [json_name = "currentWaypointIndex"];
inline void NavigationProgress::clear_current_waypoint_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_waypoint_index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t NavigationProgress::current_waypoint_index() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationProgress.current_waypoint_index)
  return _internal_current_waypoint_index();
}
inline void NavigationProgress::set_current_waypoint_index(::uint32_t value) {
  _internal_set_current_waypoint_index(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationProgress.current_waypoint_index)
}
inline ::uint32_t NavigationProgress::_internal_current_waypoint_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_waypoint_index_;
}
inline void NavigationProgress::_internal_set_current_waypoint_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_waypoint_index_ = value;
}

// uint32 total_waypoints = 6 [json_name = "totalWaypoints"];
inline void NavigationProgress::clear_total_waypoints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_waypoints_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t NavigationProgress::total_waypoints() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationProgress.total_waypoints)
  return _internal_total_waypoints();
}
inline void NavigationProgress::set_total_waypoints(::uint32_t value) {
  _internal_set_total_waypoints(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationProgress.total_waypoints)
}
inline ::uint32_t NavigationProgress::_internal_total_waypoints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_waypoints_;
}
inline void NavigationProgress::_internal_set_total_waypoints(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_waypoints_ = value;
}

// double completion_percentage = 7 [json_name = "completionPercentage"];
inline void NavigationProgress::clear_completion_percentage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completion_percentage_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline double NavigationProgress::completion_percentage() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationProgress.completion_percentage)
  return _internal_completion_percentage();
}
inline void NavigationProgress::set_completion_percentage(double value) {
  _internal_set_completion_percentage(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationProgress.completion_percentage)
}
inline double NavigationProgress::_internal_completion_percentage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.completion_percentage_;
}
inline void NavigationProgress::_internal_set_completion_percentage(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completion_percentage_ = value;
}

// -------------------------------------------------------------------

// NavigationError

// .agricultural.robot.navigation.v1.NavigationErrorCode code = 1 [json_name = "code"];
inline void NavigationError::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::agricultural::robot::navigation::v1::NavigationErrorCode NavigationError::code() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationError.code)
  return _internal_code();
}
inline void NavigationError::set_code(::agricultural::robot::navigation::v1::NavigationErrorCode value) {
  _internal_set_code(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationError.code)
}
inline ::agricultural::robot::navigation::v1::NavigationErrorCode NavigationError::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::NavigationErrorCode>(_impl_.code_);
}
inline void NavigationError::_internal_set_code(::agricultural::robot::navigation::v1::NavigationErrorCode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = value;
}

// string description = 2 [json_name = "description"];
inline void NavigationError::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& NavigationError::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationError.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void NavigationError::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationError.description)
}
inline ::std::string* PROTOBUF_NONNULL NavigationError::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationError.description)
  return _s;
}
inline const ::std::string& NavigationError::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void NavigationError::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL NavigationError::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE NavigationError::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationError.description)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void NavigationError::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationError.description)
}

// .google.protobuf.Timestamp occurred_at = 3 [json_name = "occurredAt"];
inline bool NavigationError::has_occurred_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.occurred_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& NavigationError::_internal_occurred_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.occurred_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& NavigationError::occurred_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationError.occurred_at)
  return _internal_occurred_at();
}
inline void NavigationError::unsafe_arena_set_allocated_occurred_at(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.occurred_at_);
  }
  _impl_.occurred_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.NavigationError.occurred_at)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE NavigationError::release_occurred_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.occurred_at_;
  _impl_.occurred_at_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE NavigationError::unsafe_arena_release_occurred_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.NavigationError.occurred_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.occurred_at_;
  _impl_.occurred_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL NavigationError::_internal_mutable_occurred_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.occurred_at_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.occurred_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.occurred_at_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL NavigationError::mutable_occurred_at()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_occurred_at();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationError.occurred_at)
  return _msg;
}
inline void NavigationError::set_allocated_occurred_at(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.occurred_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.occurred_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.NavigationError.occurred_at)
}

// bool recoverable = 4 [json_name = "recoverable"];
inline void NavigationError::clear_recoverable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recoverable_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool NavigationError::recoverable() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationError.recoverable)
  return _internal_recoverable();
}
inline void NavigationError::set_recoverable(bool value) {
  _internal_set_recoverable(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationError.recoverable)
}
inline bool NavigationError::_internal_recoverable() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recoverable_;
}
inline void NavigationError::_internal_set_recoverable(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recoverable_ = value;
}

// repeated string suggested_actions = 5 [json_name = "suggestedActions"];
inline int NavigationError::_internal_suggested_actions_size() const {
  return _internal_suggested_actions().size();
}
inline int NavigationError::suggested_actions_size() const {
  return _internal_suggested_actions_size();
}
inline void NavigationError::clear_suggested_actions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.suggested_actions_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL NavigationError::add_suggested_actions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_suggested_actions()->Add();
  // @@protoc_insertion_point(field_add_mutable:agricultural.robot.navigation.v1.NavigationError.suggested_actions)
  return _s;
}
inline const ::std::string& NavigationError::suggested_actions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.NavigationError.suggested_actions)
  return _internal_suggested_actions().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL NavigationError::mutable_suggested_actions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.NavigationError.suggested_actions)
  return _internal_mutable_suggested_actions()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void NavigationError::set_suggested_actions(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_suggested_actions()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.NavigationError.suggested_actions)
}
template <typename Arg_, typename... Args_>
inline void NavigationError::add_suggested_actions(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_suggested_actions(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:agricultural.robot.navigation.v1.NavigationError.suggested_actions)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& NavigationError::suggested_actions()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:agricultural.robot.navigation.v1.NavigationError.suggested_actions)
  return _internal_suggested_actions();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
NavigationError::mutable_suggested_actions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:agricultural.robot.navigation.v1.NavigationError.suggested_actions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_suggested_actions();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
NavigationError::_internal_suggested_actions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.suggested_actions_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
NavigationError::_internal_mutable_suggested_actions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.suggested_actions_;
}

// -------------------------------------------------------------------

// GetCameraInfoRequest

// string robot_id = 1 [json_name = "robotId"];
inline void GetCameraInfoRequest::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetCameraInfoRequest::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.GetCameraInfoRequest.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetCameraInfoRequest::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.GetCameraInfoRequest.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL GetCameraInfoRequest::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.GetCameraInfoRequest.robot_id)
  return _s;
}
inline const ::std::string& GetCameraInfoRequest::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void GetCameraInfoRequest::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetCameraInfoRequest::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetCameraInfoRequest::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.GetCameraInfoRequest.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void GetCameraInfoRequest::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.GetCameraInfoRequest.robot_id)
}

// string camera_id = 2 [json_name = "cameraId"];
inline void GetCameraInfoRequest::clear_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& GetCameraInfoRequest::camera_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.GetCameraInfoRequest.camera_id)
  return _internal_camera_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetCameraInfoRequest::set_camera_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.camera_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.GetCameraInfoRequest.camera_id)
}
inline ::std::string* PROTOBUF_NONNULL GetCameraInfoRequest::mutable_camera_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_camera_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.GetCameraInfoRequest.camera_id)
  return _s;
}
inline const ::std::string& GetCameraInfoRequest::_internal_camera_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.camera_id_.Get();
}
inline void GetCameraInfoRequest::_internal_set_camera_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.camera_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetCameraInfoRequest::_internal_mutable_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.camera_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetCameraInfoRequest::release_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.GetCameraInfoRequest.camera_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.camera_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.camera_id_.Set("", GetArena());
  }
  return released;
}
inline void GetCameraInfoRequest::set_allocated_camera_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.camera_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.camera_id_.IsDefault()) {
    _impl_.camera_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.GetCameraInfoRequest.camera_id)
}

// -------------------------------------------------------------------

// StreamVideoRequest

// string robot_id = 1 [json_name = "robotId"];
inline void StreamVideoRequest::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StreamVideoRequest::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.StreamVideoRequest.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void StreamVideoRequest::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.StreamVideoRequest.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL StreamVideoRequest::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.StreamVideoRequest.robot_id)
  return _s;
}
inline const ::std::string& StreamVideoRequest::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void StreamVideoRequest::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL StreamVideoRequest::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE StreamVideoRequest::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.StreamVideoRequest.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void StreamVideoRequest::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.StreamVideoRequest.robot_id)
}

// string camera_id = 2 [json_name = "cameraId"];
inline void StreamVideoRequest::clear_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& StreamVideoRequest::camera_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.StreamVideoRequest.camera_id)
  return _internal_camera_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void StreamVideoRequest::set_camera_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.camera_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.StreamVideoRequest.camera_id)
}
inline ::std::string* PROTOBUF_NONNULL StreamVideoRequest::mutable_camera_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_camera_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.StreamVideoRequest.camera_id)
  return _s;
}
inline const ::std::string& StreamVideoRequest::_internal_camera_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.camera_id_.Get();
}
inline void StreamVideoRequest::_internal_set_camera_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.camera_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL StreamVideoRequest::_internal_mutable_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.camera_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE StreamVideoRequest::release_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.StreamVideoRequest.camera_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.camera_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.camera_id_.Set("", GetArena());
  }
  return released;
}
inline void StreamVideoRequest::set_allocated_camera_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.camera_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.camera_id_.IsDefault()) {
    _impl_.camera_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.StreamVideoRequest.camera_id)
}

// .agricultural.robot.navigation.v1.VideoStreamOptions options = 3 [json_name = "options"];
inline bool StreamVideoRequest::has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline void StreamVideoRequest::clear_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::agricultural::robot::navigation::v1::VideoStreamOptions& StreamVideoRequest::_internal_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::VideoStreamOptions* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::VideoStreamOptions&>(::agricultural::robot::navigation::v1::_VideoStreamOptions_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::VideoStreamOptions& StreamVideoRequest::options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.StreamVideoRequest.options)
  return _internal_options();
}
inline void StreamVideoRequest::unsafe_arena_set_allocated_options(
    ::agricultural::robot::navigation::v1::VideoStreamOptions* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = reinterpret_cast<::agricultural::robot::navigation::v1::VideoStreamOptions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.StreamVideoRequest.options)
}
inline ::agricultural::robot::navigation::v1::VideoStreamOptions* PROTOBUF_NULLABLE StreamVideoRequest::release_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::VideoStreamOptions* released = _impl_.options_;
  _impl_.options_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::VideoStreamOptions* PROTOBUF_NULLABLE StreamVideoRequest::unsafe_arena_release_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.StreamVideoRequest.options)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::VideoStreamOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::VideoStreamOptions* PROTOBUF_NONNULL StreamVideoRequest::_internal_mutable_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::VideoStreamOptions>(GetArena());
    _impl_.options_ = reinterpret_cast<::agricultural::robot::navigation::v1::VideoStreamOptions*>(p);
  }
  return _impl_.options_;
}
inline ::agricultural::robot::navigation::v1::VideoStreamOptions* PROTOBUF_NONNULL StreamVideoRequest::mutable_options()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::agricultural::robot::navigation::v1::VideoStreamOptions* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.StreamVideoRequest.options)
  return _msg;
}
inline void StreamVideoRequest::set_allocated_options(::agricultural::robot::navigation::v1::VideoStreamOptions* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.options_ = reinterpret_cast<::agricultural::robot::navigation::v1::VideoStreamOptions*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.StreamVideoRequest.options)
}

// -------------------------------------------------------------------

// CameraControlRequest

// string robot_id = 1 [json_name = "robotId"];
inline void CameraControlRequest::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CameraControlRequest::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraControlRequest.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CameraControlRequest::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraControlRequest.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL CameraControlRequest::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.CameraControlRequest.robot_id)
  return _s;
}
inline const ::std::string& CameraControlRequest::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void CameraControlRequest::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CameraControlRequest::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CameraControlRequest::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.CameraControlRequest.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void CameraControlRequest::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.CameraControlRequest.robot_id)
}

// string camera_id = 2 [json_name = "cameraId"];
inline void CameraControlRequest::clear_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CameraControlRequest::camera_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraControlRequest.camera_id)
  return _internal_camera_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CameraControlRequest::set_camera_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.camera_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraControlRequest.camera_id)
}
inline ::std::string* PROTOBUF_NONNULL CameraControlRequest::mutable_camera_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_camera_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.CameraControlRequest.camera_id)
  return _s;
}
inline const ::std::string& CameraControlRequest::_internal_camera_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.camera_id_.Get();
}
inline void CameraControlRequest::_internal_set_camera_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.camera_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CameraControlRequest::_internal_mutable_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.camera_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CameraControlRequest::release_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.CameraControlRequest.camera_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.camera_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.camera_id_.Set("", GetArena());
  }
  return released;
}
inline void CameraControlRequest::set_allocated_camera_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.camera_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.camera_id_.IsDefault()) {
    _impl_.camera_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.CameraControlRequest.camera_id)
}

// .agricultural.robot.navigation.v1.CameraControlCommand command = 3 [json_name = "command"];
inline bool CameraControlRequest::has_command() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.command_ != nullptr);
  return value;
}
inline void CameraControlRequest::clear_command() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.command_ != nullptr) _impl_.command_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::agricultural::robot::navigation::v1::CameraControlCommand& CameraControlRequest::_internal_command() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::CameraControlCommand* p = _impl_.command_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::CameraControlCommand&>(::agricultural::robot::navigation::v1::_CameraControlCommand_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::CameraControlCommand& CameraControlRequest::command() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraControlRequest.command)
  return _internal_command();
}
inline void CameraControlRequest::unsafe_arena_set_allocated_command(
    ::agricultural::robot::navigation::v1::CameraControlCommand* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.command_);
  }
  _impl_.command_ = reinterpret_cast<::agricultural::robot::navigation::v1::CameraControlCommand*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.CameraControlRequest.command)
}
inline ::agricultural::robot::navigation::v1::CameraControlCommand* PROTOBUF_NULLABLE CameraControlRequest::release_command() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::CameraControlCommand* released = _impl_.command_;
  _impl_.command_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::CameraControlCommand* PROTOBUF_NULLABLE CameraControlRequest::unsafe_arena_release_command() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.CameraControlRequest.command)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::CameraControlCommand* temp = _impl_.command_;
  _impl_.command_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::CameraControlCommand* PROTOBUF_NONNULL CameraControlRequest::_internal_mutable_command() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.command_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::CameraControlCommand>(GetArena());
    _impl_.command_ = reinterpret_cast<::agricultural::robot::navigation::v1::CameraControlCommand*>(p);
  }
  return _impl_.command_;
}
inline ::agricultural::robot::navigation::v1::CameraControlCommand* PROTOBUF_NONNULL CameraControlRequest::mutable_command()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::agricultural::robot::navigation::v1::CameraControlCommand* _msg = _internal_mutable_command();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.CameraControlRequest.command)
  return _msg;
}
inline void CameraControlRequest::set_allocated_command(::agricultural::robot::navigation::v1::CameraControlCommand* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.command_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.command_ = reinterpret_cast<::agricultural::robot::navigation::v1::CameraControlCommand*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.CameraControlRequest.command)
}

// -------------------------------------------------------------------

// CameraInfoResponse

// bool success = 1 [json_name = "success"];
inline void CameraInfoResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CameraInfoResponse::success() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraInfoResponse.success)
  return _internal_success();
}
inline void CameraInfoResponse::set_success(bool value) {
  _internal_set_success(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraInfoResponse.success)
}
inline bool CameraInfoResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void CameraInfoResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2 [json_name = "message"];
inline void CameraInfoResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CameraInfoResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraInfoResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CameraInfoResponse::set_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraInfoResponse.message)
}
inline ::std::string* PROTOBUF_NONNULL CameraInfoResponse::mutable_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.CameraInfoResponse.message)
  return _s;
}
inline const ::std::string& CameraInfoResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void CameraInfoResponse::_internal_set_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CameraInfoResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CameraInfoResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.CameraInfoResponse.message)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_.Set("", GetArena());
  }
  return released;
}
inline void CameraInfoResponse::set_allocated_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.CameraInfoResponse.message)
}

// repeated .agricultural.robot.navigation.v1.CameraInfo cameras = 3 [json_name = "cameras"];
inline int CameraInfoResponse::_internal_cameras_size() const {
  return _internal_cameras().size();
}
inline int CameraInfoResponse::cameras_size() const {
  return _internal_cameras_size();
}
inline void CameraInfoResponse::clear_cameras() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cameras_.Clear();
}
inline ::agricultural::robot::navigation::v1::CameraInfo* PROTOBUF_NONNULL CameraInfoResponse::mutable_cameras(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.CameraInfoResponse.cameras)
  return _internal_mutable_cameras()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::CameraInfo>* PROTOBUF_NONNULL CameraInfoResponse::mutable_cameras()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:agricultural.robot.navigation.v1.CameraInfoResponse.cameras)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_cameras();
}
inline const ::agricultural::robot::navigation::v1::CameraInfo& CameraInfoResponse::cameras(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraInfoResponse.cameras)
  return _internal_cameras().Get(index);
}
inline ::agricultural::robot::navigation::v1::CameraInfo* PROTOBUF_NONNULL CameraInfoResponse::add_cameras()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::agricultural::robot::navigation::v1::CameraInfo* _add = _internal_mutable_cameras()->Add();
  // @@protoc_insertion_point(field_add:agricultural.robot.navigation.v1.CameraInfoResponse.cameras)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::CameraInfo>& CameraInfoResponse::cameras() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:agricultural.robot.navigation.v1.CameraInfoResponse.cameras)
  return _internal_cameras();
}
inline const ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::CameraInfo>&
CameraInfoResponse::_internal_cameras() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cameras_;
}
inline ::google::protobuf::RepeatedPtrField<::agricultural::robot::navigation::v1::CameraInfo>* PROTOBUF_NONNULL
CameraInfoResponse::_internal_mutable_cameras() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.cameras_;
}

// .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
inline bool CameraInfoResponse::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& CameraInfoResponse::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& CameraInfoResponse::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraInfoResponse.timestamp)
  return _internal_timestamp();
}
inline void CameraInfoResponse::unsafe_arena_set_allocated_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.CameraInfoResponse.timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE CameraInfoResponse::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE CameraInfoResponse::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.CameraInfoResponse.timestamp)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL CameraInfoResponse::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL CameraInfoResponse::mutable_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.CameraInfoResponse.timestamp)
  return _msg;
}
inline void CameraInfoResponse::set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.CameraInfoResponse.timestamp)
}

// -------------------------------------------------------------------

// CameraInfo

// string camera_id = 1 [json_name = "cameraId"];
inline void CameraInfo::clear_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CameraInfo::camera_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraInfo.camera_id)
  return _internal_camera_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CameraInfo::set_camera_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.camera_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraInfo.camera_id)
}
inline ::std::string* PROTOBUF_NONNULL CameraInfo::mutable_camera_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_camera_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.CameraInfo.camera_id)
  return _s;
}
inline const ::std::string& CameraInfo::_internal_camera_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.camera_id_.Get();
}
inline void CameraInfo::_internal_set_camera_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.camera_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CameraInfo::_internal_mutable_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.camera_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CameraInfo::release_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.CameraInfo.camera_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.camera_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.camera_id_.Set("", GetArena());
  }
  return released;
}
inline void CameraInfo::set_allocated_camera_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.camera_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.camera_id_.IsDefault()) {
    _impl_.camera_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.CameraInfo.camera_id)
}

// string name = 2 [json_name = "name"];
inline void CameraInfo::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CameraInfo::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraInfo.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CameraInfo::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraInfo.name)
}
inline ::std::string* PROTOBUF_NONNULL CameraInfo::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.CameraInfo.name)
  return _s;
}
inline const ::std::string& CameraInfo::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void CameraInfo::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CameraInfo::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CameraInfo::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.CameraInfo.name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void CameraInfo::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.CameraInfo.name)
}

// .agricultural.robot.navigation.v1.CameraType type = 3 [json_name = "type"];
inline void CameraInfo::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::agricultural::robot::navigation::v1::CameraType CameraInfo::type() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraInfo.type)
  return _internal_type();
}
inline void CameraInfo::set_type(::agricultural::robot::navigation::v1::CameraType value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraInfo.type)
}
inline ::agricultural::robot::navigation::v1::CameraType CameraInfo::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::CameraType>(_impl_.type_);
}
inline void CameraInfo::_internal_set_type(::agricultural::robot::navigation::v1::CameraType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .agricultural.robot.navigation.v1.Resolution resolution = 4 [json_name = "resolution"];
inline bool CameraInfo::has_resolution() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.resolution_ != nullptr);
  return value;
}
inline void CameraInfo::clear_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resolution_ != nullptr) _impl_.resolution_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::agricultural::robot::navigation::v1::Resolution& CameraInfo::_internal_resolution() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::Resolution* p = _impl_.resolution_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::Resolution&>(::agricultural::robot::navigation::v1::_Resolution_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::Resolution& CameraInfo::resolution() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraInfo.resolution)
  return _internal_resolution();
}
inline void CameraInfo::unsafe_arena_set_allocated_resolution(
    ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resolution_);
  }
  _impl_.resolution_ = reinterpret_cast<::agricultural::robot::navigation::v1::Resolution*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.CameraInfo.resolution)
}
inline ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE CameraInfo::release_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::agricultural::robot::navigation::v1::Resolution* released = _impl_.resolution_;
  _impl_.resolution_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE CameraInfo::unsafe_arena_release_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.CameraInfo.resolution)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::agricultural::robot::navigation::v1::Resolution* temp = _impl_.resolution_;
  _impl_.resolution_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NONNULL CameraInfo::_internal_mutable_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resolution_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::Resolution>(GetArena());
    _impl_.resolution_ = reinterpret_cast<::agricultural::robot::navigation::v1::Resolution*>(p);
  }
  return _impl_.resolution_;
}
inline ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NONNULL CameraInfo::mutable_resolution()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::agricultural::robot::navigation::v1::Resolution* _msg = _internal_mutable_resolution();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.CameraInfo.resolution)
  return _msg;
}
inline void CameraInfo::set_allocated_resolution(::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resolution_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.resolution_ = reinterpret_cast<::agricultural::robot::navigation::v1::Resolution*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.CameraInfo.resolution)
}

// double framerate = 5 [json_name = "framerate"];
inline void CameraInfo::clear_framerate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.framerate_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline double CameraInfo::framerate() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraInfo.framerate)
  return _internal_framerate();
}
inline void CameraInfo::set_framerate(double value) {
  _internal_set_framerate(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraInfo.framerate)
}
inline double CameraInfo::_internal_framerate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.framerate_;
}
inline void CameraInfo::_internal_set_framerate(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.framerate_ = value;
}

// .agricultural.robot.navigation.v1.CameraIntrinsics intrinsics = 6 [json_name = "intrinsics"];
inline bool CameraInfo::has_intrinsics() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.intrinsics_ != nullptr);
  return value;
}
inline void CameraInfo::clear_intrinsics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.intrinsics_ != nullptr) _impl_.intrinsics_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::agricultural::robot::navigation::v1::CameraIntrinsics& CameraInfo::_internal_intrinsics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::CameraIntrinsics* p = _impl_.intrinsics_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::CameraIntrinsics&>(::agricultural::robot::navigation::v1::_CameraIntrinsics_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::CameraIntrinsics& CameraInfo::intrinsics() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraInfo.intrinsics)
  return _internal_intrinsics();
}
inline void CameraInfo::unsafe_arena_set_allocated_intrinsics(
    ::agricultural::robot::navigation::v1::CameraIntrinsics* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.intrinsics_);
  }
  _impl_.intrinsics_ = reinterpret_cast<::agricultural::robot::navigation::v1::CameraIntrinsics*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.CameraInfo.intrinsics)
}
inline ::agricultural::robot::navigation::v1::CameraIntrinsics* PROTOBUF_NULLABLE CameraInfo::release_intrinsics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::agricultural::robot::navigation::v1::CameraIntrinsics* released = _impl_.intrinsics_;
  _impl_.intrinsics_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::CameraIntrinsics* PROTOBUF_NULLABLE CameraInfo::unsafe_arena_release_intrinsics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.CameraInfo.intrinsics)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::agricultural::robot::navigation::v1::CameraIntrinsics* temp = _impl_.intrinsics_;
  _impl_.intrinsics_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::CameraIntrinsics* PROTOBUF_NONNULL CameraInfo::_internal_mutable_intrinsics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.intrinsics_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::CameraIntrinsics>(GetArena());
    _impl_.intrinsics_ = reinterpret_cast<::agricultural::robot::navigation::v1::CameraIntrinsics*>(p);
  }
  return _impl_.intrinsics_;
}
inline ::agricultural::robot::navigation::v1::CameraIntrinsics* PROTOBUF_NONNULL CameraInfo::mutable_intrinsics()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::agricultural::robot::navigation::v1::CameraIntrinsics* _msg = _internal_mutable_intrinsics();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.CameraInfo.intrinsics)
  return _msg;
}
inline void CameraInfo::set_allocated_intrinsics(::agricultural::robot::navigation::v1::CameraIntrinsics* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.intrinsics_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.intrinsics_ = reinterpret_cast<::agricultural::robot::navigation::v1::CameraIntrinsics*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.CameraInfo.intrinsics)
}

// .agricultural.robot.navigation.v1.CameraDistortion distortion = 7 [json_name = "distortion"];
inline bool CameraInfo::has_distortion() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.distortion_ != nullptr);
  return value;
}
inline void CameraInfo::clear_distortion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.distortion_ != nullptr) _impl_.distortion_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::agricultural::robot::navigation::v1::CameraDistortion& CameraInfo::_internal_distortion() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::CameraDistortion* p = _impl_.distortion_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::CameraDistortion&>(::agricultural::robot::navigation::v1::_CameraDistortion_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::CameraDistortion& CameraInfo::distortion() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraInfo.distortion)
  return _internal_distortion();
}
inline void CameraInfo::unsafe_arena_set_allocated_distortion(
    ::agricultural::robot::navigation::v1::CameraDistortion* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.distortion_);
  }
  _impl_.distortion_ = reinterpret_cast<::agricultural::robot::navigation::v1::CameraDistortion*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.CameraInfo.distortion)
}
inline ::agricultural::robot::navigation::v1::CameraDistortion* PROTOBUF_NULLABLE CameraInfo::release_distortion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::agricultural::robot::navigation::v1::CameraDistortion* released = _impl_.distortion_;
  _impl_.distortion_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::CameraDistortion* PROTOBUF_NULLABLE CameraInfo::unsafe_arena_release_distortion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.CameraInfo.distortion)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::agricultural::robot::navigation::v1::CameraDistortion* temp = _impl_.distortion_;
  _impl_.distortion_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::CameraDistortion* PROTOBUF_NONNULL CameraInfo::_internal_mutable_distortion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.distortion_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::CameraDistortion>(GetArena());
    _impl_.distortion_ = reinterpret_cast<::agricultural::robot::navigation::v1::CameraDistortion*>(p);
  }
  return _impl_.distortion_;
}
inline ::agricultural::robot::navigation::v1::CameraDistortion* PROTOBUF_NONNULL CameraInfo::mutable_distortion()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::agricultural::robot::navigation::v1::CameraDistortion* _msg = _internal_mutable_distortion();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.CameraInfo.distortion)
  return _msg;
}
inline void CameraInfo::set_allocated_distortion(::agricultural::robot::navigation::v1::CameraDistortion* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.distortion_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.distortion_ = reinterpret_cast<::agricultural::robot::navigation::v1::CameraDistortion*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.CameraInfo.distortion)
}

// string frame_id = 8 [json_name = "frameId"];
inline void CameraInfo::clear_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CameraInfo::frame_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraInfo.frame_id)
  return _internal_frame_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CameraInfo::set_frame_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.frame_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraInfo.frame_id)
}
inline ::std::string* PROTOBUF_NONNULL CameraInfo::mutable_frame_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_frame_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.CameraInfo.frame_id)
  return _s;
}
inline const ::std::string& CameraInfo::_internal_frame_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_id_.Get();
}
inline void CameraInfo::_internal_set_frame_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.frame_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CameraInfo::_internal_mutable_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.frame_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CameraInfo::release_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.CameraInfo.frame_id)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.frame_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  return released;
}
inline void CameraInfo::set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.frame_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.frame_id_.IsDefault()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.CameraInfo.frame_id)
}

// .agricultural.robot.navigation.v1.CameraStatus status = 9 [json_name = "status"];
inline void CameraInfo::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::agricultural::robot::navigation::v1::CameraStatus CameraInfo::status() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraInfo.status)
  return _internal_status();
}
inline void CameraInfo::set_status(::agricultural::robot::navigation::v1::CameraStatus value) {
  _internal_set_status(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraInfo.status)
}
inline ::agricultural::robot::navigation::v1::CameraStatus CameraInfo::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::CameraStatus>(_impl_.status_);
}
inline void CameraInfo::_internal_set_status(::agricultural::robot::navigation::v1::CameraStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// repeated .agricultural.robot.navigation.v1.VideoFormat supported_formats = 10 [json_name = "supportedFormats"];
inline int CameraInfo::_internal_supported_formats_size() const {
  return _internal_supported_formats().size();
}
inline int CameraInfo::supported_formats_size() const {
  return _internal_supported_formats_size();
}
inline void CameraInfo::clear_supported_formats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.supported_formats_.Clear();
}
inline ::agricultural::robot::navigation::v1::VideoFormat CameraInfo::supported_formats(int index) const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraInfo.supported_formats)
  return static_cast<::agricultural::robot::navigation::v1::VideoFormat>(_internal_supported_formats().Get(index));
}
inline void CameraInfo::set_supported_formats(int index, ::agricultural::robot::navigation::v1::VideoFormat value) {
  _internal_mutable_supported_formats()->Set(index, value);
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraInfo.supported_formats)
}
inline void CameraInfo::add_supported_formats(::agricultural::robot::navigation::v1::VideoFormat value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_supported_formats()->Add(value);
  // @@protoc_insertion_point(field_add:agricultural.robot.navigation.v1.CameraInfo.supported_formats)
}
inline const ::google::protobuf::RepeatedField<int>& CameraInfo::supported_formats() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:agricultural.robot.navigation.v1.CameraInfo.supported_formats)
  return _internal_supported_formats();
}
inline ::google::protobuf::RepeatedField<int>* PROTOBUF_NONNULL CameraInfo::mutable_supported_formats()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:agricultural.robot.navigation.v1.CameraInfo.supported_formats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_supported_formats();
}
inline const ::google::protobuf::RepeatedField<int>& CameraInfo::_internal_supported_formats()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.supported_formats_;
}
inline ::google::protobuf::RepeatedField<int>* PROTOBUF_NONNULL
CameraInfo::_internal_mutable_supported_formats() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.supported_formats_;
}

// -------------------------------------------------------------------

// VideoFrame

// string camera_id = 1 [json_name = "cameraId"];
inline void VideoFrame::clear_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& VideoFrame::camera_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VideoFrame.camera_id)
  return _internal_camera_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void VideoFrame::set_camera_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.camera_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.VideoFrame.camera_id)
}
inline ::std::string* PROTOBUF_NONNULL VideoFrame::mutable_camera_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_camera_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.VideoFrame.camera_id)
  return _s;
}
inline const ::std::string& VideoFrame::_internal_camera_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.camera_id_.Get();
}
inline void VideoFrame::_internal_set_camera_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.camera_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL VideoFrame::_internal_mutable_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.camera_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE VideoFrame::release_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.VideoFrame.camera_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.camera_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.camera_id_.Set("", GetArena());
  }
  return released;
}
inline void VideoFrame::set_allocated_camera_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.camera_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.camera_id_.IsDefault()) {
    _impl_.camera_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.VideoFrame.camera_id)
}

// bytes image_data = 2 [json_name = "imageData"];
inline void VideoFrame::clear_image_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& VideoFrame::image_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VideoFrame.image_data)
  return _internal_image_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void VideoFrame::set_image_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.image_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.VideoFrame.image_data)
}
inline ::std::string* PROTOBUF_NONNULL VideoFrame::mutable_image_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_image_data();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.VideoFrame.image_data)
  return _s;
}
inline const ::std::string& VideoFrame::_internal_image_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.image_data_.Get();
}
inline void VideoFrame::_internal_set_image_data(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.image_data_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL VideoFrame::_internal_mutable_image_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.image_data_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE VideoFrame::release_image_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.VideoFrame.image_data)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.image_data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.image_data_.Set("", GetArena());
  }
  return released;
}
inline void VideoFrame::set_allocated_image_data(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.image_data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.image_data_.IsDefault()) {
    _impl_.image_data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.VideoFrame.image_data)
}

// .agricultural.robot.navigation.v1.VideoFormat format = 3 [json_name = "format"];
inline void VideoFrame::clear_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::agricultural::robot::navigation::v1::VideoFormat VideoFrame::format() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VideoFrame.format)
  return _internal_format();
}
inline void VideoFrame::set_format(::agricultural::robot::navigation::v1::VideoFormat value) {
  _internal_set_format(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.VideoFrame.format)
}
inline ::agricultural::robot::navigation::v1::VideoFormat VideoFrame::_internal_format() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::VideoFormat>(_impl_.format_);
}
inline void VideoFrame::_internal_set_format(::agricultural::robot::navigation::v1::VideoFormat value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_ = value;
}

// .agricultural.robot.navigation.v1.Resolution resolution = 4 [json_name = "resolution"];
inline bool VideoFrame::has_resolution() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.resolution_ != nullptr);
  return value;
}
inline void VideoFrame::clear_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resolution_ != nullptr) _impl_.resolution_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::agricultural::robot::navigation::v1::Resolution& VideoFrame::_internal_resolution() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::Resolution* p = _impl_.resolution_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::Resolution&>(::agricultural::robot::navigation::v1::_Resolution_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::Resolution& VideoFrame::resolution() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VideoFrame.resolution)
  return _internal_resolution();
}
inline void VideoFrame::unsafe_arena_set_allocated_resolution(
    ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resolution_);
  }
  _impl_.resolution_ = reinterpret_cast<::agricultural::robot::navigation::v1::Resolution*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.VideoFrame.resolution)
}
inline ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE VideoFrame::release_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::Resolution* released = _impl_.resolution_;
  _impl_.resolution_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE VideoFrame::unsafe_arena_release_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.VideoFrame.resolution)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::Resolution* temp = _impl_.resolution_;
  _impl_.resolution_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NONNULL VideoFrame::_internal_mutable_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resolution_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::Resolution>(GetArena());
    _impl_.resolution_ = reinterpret_cast<::agricultural::robot::navigation::v1::Resolution*>(p);
  }
  return _impl_.resolution_;
}
inline ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NONNULL VideoFrame::mutable_resolution()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::agricultural::robot::navigation::v1::Resolution* _msg = _internal_mutable_resolution();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.VideoFrame.resolution)
  return _msg;
}
inline void VideoFrame::set_allocated_resolution(::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resolution_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.resolution_ = reinterpret_cast<::agricultural::robot::navigation::v1::Resolution*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.VideoFrame.resolution)
}

// .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
inline bool VideoFrame::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& VideoFrame::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& VideoFrame::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VideoFrame.timestamp)
  return _internal_timestamp();
}
inline void VideoFrame::unsafe_arena_set_allocated_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.VideoFrame.timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE VideoFrame::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE VideoFrame::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.VideoFrame.timestamp)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL VideoFrame::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL VideoFrame::mutable_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.VideoFrame.timestamp)
  return _msg;
}
inline void VideoFrame::set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.VideoFrame.timestamp)
}

// uint64 frame_number = 6 [json_name = "frameNumber"];
inline void VideoFrame::clear_frame_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_number_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint64_t VideoFrame::frame_number() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VideoFrame.frame_number)
  return _internal_frame_number();
}
inline void VideoFrame::set_frame_number(::uint64_t value) {
  _internal_set_frame_number(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.VideoFrame.frame_number)
}
inline ::uint64_t VideoFrame::_internal_frame_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_number_;
}
inline void VideoFrame::_internal_set_frame_number(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_number_ = value;
}

// .agricultural.robot.navigation.v1.FrameMetadata metadata = 7 [json_name = "metadata"];
inline bool VideoFrame::has_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metadata_ != nullptr);
  return value;
}
inline void VideoFrame::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::agricultural::robot::navigation::v1::FrameMetadata& VideoFrame::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::FrameMetadata* p = _impl_.metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::FrameMetadata&>(::agricultural::robot::navigation::v1::_FrameMetadata_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::FrameMetadata& VideoFrame::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VideoFrame.metadata)
  return _internal_metadata();
}
inline void VideoFrame::unsafe_arena_set_allocated_metadata(
    ::agricultural::robot::navigation::v1::FrameMetadata* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }
  _impl_.metadata_ = reinterpret_cast<::agricultural::robot::navigation::v1::FrameMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.VideoFrame.metadata)
}
inline ::agricultural::robot::navigation::v1::FrameMetadata* PROTOBUF_NULLABLE VideoFrame::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::agricultural::robot::navigation::v1::FrameMetadata* released = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::FrameMetadata* PROTOBUF_NULLABLE VideoFrame::unsafe_arena_release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.VideoFrame.metadata)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::agricultural::robot::navigation::v1::FrameMetadata* temp = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::FrameMetadata* PROTOBUF_NONNULL VideoFrame::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::FrameMetadata>(GetArena());
    _impl_.metadata_ = reinterpret_cast<::agricultural::robot::navigation::v1::FrameMetadata*>(p);
  }
  return _impl_.metadata_;
}
inline ::agricultural::robot::navigation::v1::FrameMetadata* PROTOBUF_NONNULL VideoFrame::mutable_metadata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::agricultural::robot::navigation::v1::FrameMetadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.VideoFrame.metadata)
  return _msg;
}
inline void VideoFrame::set_allocated_metadata(::agricultural::robot::navigation::v1::FrameMetadata* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.metadata_ = reinterpret_cast<::agricultural::robot::navigation::v1::FrameMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.VideoFrame.metadata)
}

// -------------------------------------------------------------------

// VideoStreamOptions

// .agricultural.robot.navigation.v1.VideoFormat format = 1 [json_name = "format"];
inline void VideoStreamOptions::clear_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::agricultural::robot::navigation::v1::VideoFormat VideoStreamOptions::format() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VideoStreamOptions.format)
  return _internal_format();
}
inline void VideoStreamOptions::set_format(::agricultural::robot::navigation::v1::VideoFormat value) {
  _internal_set_format(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.VideoStreamOptions.format)
}
inline ::agricultural::robot::navigation::v1::VideoFormat VideoStreamOptions::_internal_format() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::VideoFormat>(_impl_.format_);
}
inline void VideoStreamOptions::_internal_set_format(::agricultural::robot::navigation::v1::VideoFormat value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_ = value;
}

// .agricultural.robot.navigation.v1.Resolution resolution = 2 [json_name = "resolution"];
inline bool VideoStreamOptions::has_resolution() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.resolution_ != nullptr);
  return value;
}
inline void VideoStreamOptions::clear_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resolution_ != nullptr) _impl_.resolution_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::agricultural::robot::navigation::v1::Resolution& VideoStreamOptions::_internal_resolution() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::Resolution* p = _impl_.resolution_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::Resolution&>(::agricultural::robot::navigation::v1::_Resolution_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::Resolution& VideoStreamOptions::resolution() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VideoStreamOptions.resolution)
  return _internal_resolution();
}
inline void VideoStreamOptions::unsafe_arena_set_allocated_resolution(
    ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resolution_);
  }
  _impl_.resolution_ = reinterpret_cast<::agricultural::robot::navigation::v1::Resolution*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.VideoStreamOptions.resolution)
}
inline ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE VideoStreamOptions::release_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::agricultural::robot::navigation::v1::Resolution* released = _impl_.resolution_;
  _impl_.resolution_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE VideoStreamOptions::unsafe_arena_release_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.VideoStreamOptions.resolution)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::agricultural::robot::navigation::v1::Resolution* temp = _impl_.resolution_;
  _impl_.resolution_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NONNULL VideoStreamOptions::_internal_mutable_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resolution_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::Resolution>(GetArena());
    _impl_.resolution_ = reinterpret_cast<::agricultural::robot::navigation::v1::Resolution*>(p);
  }
  return _impl_.resolution_;
}
inline ::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NONNULL VideoStreamOptions::mutable_resolution()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::agricultural::robot::navigation::v1::Resolution* _msg = _internal_mutable_resolution();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.VideoStreamOptions.resolution)
  return _msg;
}
inline void VideoStreamOptions::set_allocated_resolution(::agricultural::robot::navigation::v1::Resolution* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resolution_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.resolution_ = reinterpret_cast<::agricultural::robot::navigation::v1::Resolution*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.VideoStreamOptions.resolution)
}

// uint32 framerate = 3 [json_name = "framerate"];
inline void VideoStreamOptions::clear_framerate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.framerate_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t VideoStreamOptions::framerate() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VideoStreamOptions.framerate)
  return _internal_framerate();
}
inline void VideoStreamOptions::set_framerate(::uint32_t value) {
  _internal_set_framerate(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.VideoStreamOptions.framerate)
}
inline ::uint32_t VideoStreamOptions::_internal_framerate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.framerate_;
}
inline void VideoStreamOptions::_internal_set_framerate(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.framerate_ = value;
}

// .agricultural.robot.navigation.v1.VideoQuality quality = 4 [json_name = "quality"];
inline void VideoStreamOptions::clear_quality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quality_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::agricultural::robot::navigation::v1::VideoQuality VideoStreamOptions::quality() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VideoStreamOptions.quality)
  return _internal_quality();
}
inline void VideoStreamOptions::set_quality(::agricultural::robot::navigation::v1::VideoQuality value) {
  _internal_set_quality(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.VideoStreamOptions.quality)
}
inline ::agricultural::robot::navigation::v1::VideoQuality VideoStreamOptions::_internal_quality() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::VideoQuality>(_impl_.quality_);
}
inline void VideoStreamOptions::_internal_set_quality(::agricultural::robot::navigation::v1::VideoQuality value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quality_ = value;
}

// bool enable_compression = 5 [json_name = "enableCompression"];
inline void VideoStreamOptions::clear_enable_compression() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_compression_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool VideoStreamOptions::enable_compression() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VideoStreamOptions.enable_compression)
  return _internal_enable_compression();
}
inline void VideoStreamOptions::set_enable_compression(bool value) {
  _internal_set_enable_compression(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.VideoStreamOptions.enable_compression)
}
inline bool VideoStreamOptions::_internal_enable_compression() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_compression_;
}
inline void VideoStreamOptions::_internal_set_enable_compression(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_compression_ = value;
}

// repeated .agricultural.robot.navigation.v1.OverlayType overlays = 6 [json_name = "overlays"];
inline int VideoStreamOptions::_internal_overlays_size() const {
  return _internal_overlays().size();
}
inline int VideoStreamOptions::overlays_size() const {
  return _internal_overlays_size();
}
inline void VideoStreamOptions::clear_overlays() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.overlays_.Clear();
}
inline ::agricultural::robot::navigation::v1::OverlayType VideoStreamOptions::overlays(int index) const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.VideoStreamOptions.overlays)
  return static_cast<::agricultural::robot::navigation::v1::OverlayType>(_internal_overlays().Get(index));
}
inline void VideoStreamOptions::set_overlays(int index, ::agricultural::robot::navigation::v1::OverlayType value) {
  _internal_mutable_overlays()->Set(index, value);
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.VideoStreamOptions.overlays)
}
inline void VideoStreamOptions::add_overlays(::agricultural::robot::navigation::v1::OverlayType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_overlays()->Add(value);
  // @@protoc_insertion_point(field_add:agricultural.robot.navigation.v1.VideoStreamOptions.overlays)
}
inline const ::google::protobuf::RepeatedField<int>& VideoStreamOptions::overlays() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:agricultural.robot.navigation.v1.VideoStreamOptions.overlays)
  return _internal_overlays();
}
inline ::google::protobuf::RepeatedField<int>* PROTOBUF_NONNULL VideoStreamOptions::mutable_overlays()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:agricultural.robot.navigation.v1.VideoStreamOptions.overlays)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_overlays();
}
inline const ::google::protobuf::RepeatedField<int>& VideoStreamOptions::_internal_overlays()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.overlays_;
}
inline ::google::protobuf::RepeatedField<int>* PROTOBUF_NONNULL
VideoStreamOptions::_internal_mutable_overlays() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.overlays_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CameraControlCommand

// .agricultural.robot.navigation.v1.CameraControlType type = 1 [json_name = "type"];
inline void CameraControlCommand::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::agricultural::robot::navigation::v1::CameraControlType CameraControlCommand::type() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraControlCommand.type)
  return _internal_type();
}
inline void CameraControlCommand::set_type(::agricultural::robot::navigation::v1::CameraControlType value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraControlCommand.type)
}
inline ::agricultural::robot::navigation::v1::CameraControlType CameraControlCommand::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::CameraControlType>(_impl_.type_);
}
inline void CameraControlCommand::_internal_set_type(::agricultural::robot::navigation::v1::CameraControlType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// map<string, double> parameters = 2 [json_name = "parameters"];
inline int CameraControlCommand::_internal_parameters_size() const {
  return _internal_parameters().size();
}
inline int CameraControlCommand::parameters_size() const {
  return _internal_parameters_size();
}
inline void CameraControlCommand::clear_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameters_.Clear();
}
inline const ::google::protobuf::Map<std::string, double>& CameraControlCommand::_internal_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parameters_.GetMap();
}
inline const ::google::protobuf::Map<std::string, double>& CameraControlCommand::parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:agricultural.robot.navigation.v1.CameraControlCommand.parameters)
  return _internal_parameters();
}
inline ::google::protobuf::Map<std::string, double>* PROTOBUF_NONNULL CameraControlCommand::_internal_mutable_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.parameters_.MutableMap();
}
inline ::google::protobuf::Map<std::string, double>* PROTOBUF_NONNULL CameraControlCommand::mutable_parameters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:agricultural.robot.navigation.v1.CameraControlCommand.parameters)
  return _internal_mutable_parameters();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CameraControlResponse

// bool success = 1 [json_name = "success"];
inline void CameraControlResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CameraControlResponse::success() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraControlResponse.success)
  return _internal_success();
}
inline void CameraControlResponse::set_success(bool value) {
  _internal_set_success(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraControlResponse.success)
}
inline bool CameraControlResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void CameraControlResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2 [json_name = "message"];
inline void CameraControlResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CameraControlResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraControlResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CameraControlResponse::set_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraControlResponse.message)
}
inline ::std::string* PROTOBUF_NONNULL CameraControlResponse::mutable_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.CameraControlResponse.message)
  return _s;
}
inline const ::std::string& CameraControlResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void CameraControlResponse::_internal_set_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CameraControlResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CameraControlResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.CameraControlResponse.message)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_.Set("", GetArena());
  }
  return released;
}
inline void CameraControlResponse::set_allocated_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.CameraControlResponse.message)
}

// map<string, double> current_settings = 3 [json_name = "currentSettings"];
inline int CameraControlResponse::_internal_current_settings_size() const {
  return _internal_current_settings().size();
}
inline int CameraControlResponse::current_settings_size() const {
  return _internal_current_settings_size();
}
inline void CameraControlResponse::clear_current_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_settings_.Clear();
}
inline const ::google::protobuf::Map<std::string, double>& CameraControlResponse::_internal_current_settings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_settings_.GetMap();
}
inline const ::google::protobuf::Map<std::string, double>& CameraControlResponse::current_settings() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:agricultural.robot.navigation.v1.CameraControlResponse.current_settings)
  return _internal_current_settings();
}
inline ::google::protobuf::Map<std::string, double>* PROTOBUF_NONNULL CameraControlResponse::_internal_mutable_current_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.current_settings_.MutableMap();
}
inline ::google::protobuf::Map<std::string, double>* PROTOBUF_NONNULL CameraControlResponse::mutable_current_settings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:agricultural.robot.navigation.v1.CameraControlResponse.current_settings)
  return _internal_mutable_current_settings();
}

// .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
inline bool CameraControlResponse::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& CameraControlResponse::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& CameraControlResponse::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraControlResponse.timestamp)
  return _internal_timestamp();
}
inline void CameraControlResponse::unsafe_arena_set_allocated_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.CameraControlResponse.timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE CameraControlResponse::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE CameraControlResponse::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.CameraControlResponse.timestamp)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL CameraControlResponse::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL CameraControlResponse::mutable_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.CameraControlResponse.timestamp)
  return _msg;
}
inline void CameraControlResponse::set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.CameraControlResponse.timestamp)
}

// -------------------------------------------------------------------

// Resolution

// uint32 width = 1 [json_name = "width"];
inline void Resolution::clear_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t Resolution::width() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Resolution.width)
  return _internal_width();
}
inline void Resolution::set_width(::uint32_t value) {
  _internal_set_width(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.Resolution.width)
}
inline ::uint32_t Resolution::_internal_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.width_;
}
inline void Resolution::_internal_set_width(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = value;
}

// uint32 height = 2 [json_name = "height"];
inline void Resolution::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t Resolution::height() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.Resolution.height)
  return _internal_height();
}
inline void Resolution::set_height(::uint32_t value) {
  _internal_set_height(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.Resolution.height)
}
inline ::uint32_t Resolution::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void Resolution::_internal_set_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// -------------------------------------------------------------------

// CameraIntrinsics

// double focal_length_x = 1 [json_name = "focalLengthX"];
inline void CameraIntrinsics::clear_focal_length_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.focal_length_x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double CameraIntrinsics::focal_length_x() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraIntrinsics.focal_length_x)
  return _internal_focal_length_x();
}
inline void CameraIntrinsics::set_focal_length_x(double value) {
  _internal_set_focal_length_x(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraIntrinsics.focal_length_x)
}
inline double CameraIntrinsics::_internal_focal_length_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.focal_length_x_;
}
inline void CameraIntrinsics::_internal_set_focal_length_x(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.focal_length_x_ = value;
}

// double focal_length_y = 2 [json_name = "focalLengthY"];
inline void CameraIntrinsics::clear_focal_length_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.focal_length_y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double CameraIntrinsics::focal_length_y() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraIntrinsics.focal_length_y)
  return _internal_focal_length_y();
}
inline void CameraIntrinsics::set_focal_length_y(double value) {
  _internal_set_focal_length_y(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraIntrinsics.focal_length_y)
}
inline double CameraIntrinsics::_internal_focal_length_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.focal_length_y_;
}
inline void CameraIntrinsics::_internal_set_focal_length_y(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.focal_length_y_ = value;
}

// double principal_point_x = 3 [json_name = "principalPointX"];
inline void CameraIntrinsics::clear_principal_point_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.principal_point_x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double CameraIntrinsics::principal_point_x() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraIntrinsics.principal_point_x)
  return _internal_principal_point_x();
}
inline void CameraIntrinsics::set_principal_point_x(double value) {
  _internal_set_principal_point_x(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraIntrinsics.principal_point_x)
}
inline double CameraIntrinsics::_internal_principal_point_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.principal_point_x_;
}
inline void CameraIntrinsics::_internal_set_principal_point_x(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.principal_point_x_ = value;
}

// double principal_point_y = 4 [json_name = "principalPointY"];
inline void CameraIntrinsics::clear_principal_point_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.principal_point_y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double CameraIntrinsics::principal_point_y() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraIntrinsics.principal_point_y)
  return _internal_principal_point_y();
}
inline void CameraIntrinsics::set_principal_point_y(double value) {
  _internal_set_principal_point_y(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraIntrinsics.principal_point_y)
}
inline double CameraIntrinsics::_internal_principal_point_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.principal_point_y_;
}
inline void CameraIntrinsics::_internal_set_principal_point_y(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.principal_point_y_ = value;
}

// repeated double camera_matrix = 5 [json_name = "cameraMatrix"];
inline int CameraIntrinsics::_internal_camera_matrix_size() const {
  return _internal_camera_matrix().size();
}
inline int CameraIntrinsics::camera_matrix_size() const {
  return _internal_camera_matrix_size();
}
inline void CameraIntrinsics::clear_camera_matrix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_matrix_.Clear();
}
inline double CameraIntrinsics::camera_matrix(int index) const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraIntrinsics.camera_matrix)
  return _internal_camera_matrix().Get(index);
}
inline void CameraIntrinsics::set_camera_matrix(int index, double value) {
  _internal_mutable_camera_matrix()->Set(index, value);
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraIntrinsics.camera_matrix)
}
inline void CameraIntrinsics::add_camera_matrix(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_camera_matrix()->Add(value);
  // @@protoc_insertion_point(field_add:agricultural.robot.navigation.v1.CameraIntrinsics.camera_matrix)
}
inline const ::google::protobuf::RepeatedField<double>& CameraIntrinsics::camera_matrix() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:agricultural.robot.navigation.v1.CameraIntrinsics.camera_matrix)
  return _internal_camera_matrix();
}
inline ::google::protobuf::RepeatedField<double>* PROTOBUF_NONNULL CameraIntrinsics::mutable_camera_matrix()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:agricultural.robot.navigation.v1.CameraIntrinsics.camera_matrix)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_camera_matrix();
}
inline const ::google::protobuf::RepeatedField<double>&
CameraIntrinsics::_internal_camera_matrix() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.camera_matrix_;
}
inline ::google::protobuf::RepeatedField<double>* PROTOBUF_NONNULL
CameraIntrinsics::_internal_mutable_camera_matrix() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.camera_matrix_;
}

// -------------------------------------------------------------------

// CameraDistortion

// .agricultural.robot.navigation.v1.DistortionModel model = 1 [json_name = "model"];
inline void CameraDistortion::clear_model() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::agricultural::robot::navigation::v1::DistortionModel CameraDistortion::model() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraDistortion.model)
  return _internal_model();
}
inline void CameraDistortion::set_model(::agricultural::robot::navigation::v1::DistortionModel value) {
  _internal_set_model(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraDistortion.model)
}
inline ::agricultural::robot::navigation::v1::DistortionModel CameraDistortion::_internal_model() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::DistortionModel>(_impl_.model_);
}
inline void CameraDistortion::_internal_set_model(::agricultural::robot::navigation::v1::DistortionModel value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_ = value;
}

// repeated double coefficients = 2 [json_name = "coefficients"];
inline int CameraDistortion::_internal_coefficients_size() const {
  return _internal_coefficients().size();
}
inline int CameraDistortion::coefficients_size() const {
  return _internal_coefficients_size();
}
inline void CameraDistortion::clear_coefficients() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.coefficients_.Clear();
}
inline double CameraDistortion::coefficients(int index) const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.CameraDistortion.coefficients)
  return _internal_coefficients().Get(index);
}
inline void CameraDistortion::set_coefficients(int index, double value) {
  _internal_mutable_coefficients()->Set(index, value);
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.CameraDistortion.coefficients)
}
inline void CameraDistortion::add_coefficients(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_coefficients()->Add(value);
  // @@protoc_insertion_point(field_add:agricultural.robot.navigation.v1.CameraDistortion.coefficients)
}
inline const ::google::protobuf::RepeatedField<double>& CameraDistortion::coefficients() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:agricultural.robot.navigation.v1.CameraDistortion.coefficients)
  return _internal_coefficients();
}
inline ::google::protobuf::RepeatedField<double>* PROTOBUF_NONNULL CameraDistortion::mutable_coefficients()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:agricultural.robot.navigation.v1.CameraDistortion.coefficients)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_coefficients();
}
inline const ::google::protobuf::RepeatedField<double>&
CameraDistortion::_internal_coefficients() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.coefficients_;
}
inline ::google::protobuf::RepeatedField<double>* PROTOBUF_NONNULL
CameraDistortion::_internal_mutable_coefficients() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.coefficients_;
}

// -------------------------------------------------------------------

// FrameMetadata

// double exposure_time = 1 [json_name = "exposureTime"];
inline void FrameMetadata::clear_exposure_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exposure_time_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double FrameMetadata::exposure_time() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.FrameMetadata.exposure_time)
  return _internal_exposure_time();
}
inline void FrameMetadata::set_exposure_time(double value) {
  _internal_set_exposure_time(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.FrameMetadata.exposure_time)
}
inline double FrameMetadata::_internal_exposure_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exposure_time_;
}
inline void FrameMetadata::_internal_set_exposure_time(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exposure_time_ = value;
}

// double gain = 2 [json_name = "gain"];
inline void FrameMetadata::clear_gain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gain_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double FrameMetadata::gain() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.FrameMetadata.gain)
  return _internal_gain();
}
inline void FrameMetadata::set_gain(double value) {
  _internal_set_gain(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.FrameMetadata.gain)
}
inline double FrameMetadata::_internal_gain() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gain_;
}
inline void FrameMetadata::_internal_set_gain(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gain_ = value;
}

// double white_balance = 3 [json_name = "whiteBalance"];
inline void FrameMetadata::clear_white_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.white_balance_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double FrameMetadata::white_balance() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.FrameMetadata.white_balance)
  return _internal_white_balance();
}
inline void FrameMetadata::set_white_balance(double value) {
  _internal_set_white_balance(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.FrameMetadata.white_balance)
}
inline double FrameMetadata::_internal_white_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.white_balance_;
}
inline void FrameMetadata::_internal_set_white_balance(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.white_balance_ = value;
}

// .google.protobuf.Timestamp capture_time = 4 [json_name = "captureTime"];
inline bool FrameMetadata::has_capture_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.capture_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& FrameMetadata::_internal_capture_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.capture_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& FrameMetadata::capture_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.FrameMetadata.capture_time)
  return _internal_capture_time();
}
inline void FrameMetadata::unsafe_arena_set_allocated_capture_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.capture_time_);
  }
  _impl_.capture_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.FrameMetadata.capture_time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE FrameMetadata::release_capture_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.capture_time_;
  _impl_.capture_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE FrameMetadata::unsafe_arena_release_capture_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.FrameMetadata.capture_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.capture_time_;
  _impl_.capture_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL FrameMetadata::_internal_mutable_capture_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.capture_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.capture_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.capture_time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL FrameMetadata::mutable_capture_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_capture_time();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.FrameMetadata.capture_time)
  return _msg;
}
inline void FrameMetadata::set_allocated_capture_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.capture_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.capture_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.FrameMetadata.capture_time)
}

// optional .agricultural.robot.navigation.v1.Pose camera_pose = 5 [json_name = "cameraPose"];
inline bool FrameMetadata::has_camera_pose() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_pose_ != nullptr);
  return value;
}
inline void FrameMetadata::clear_camera_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_pose_ != nullptr) _impl_.camera_pose_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::agricultural::robot::navigation::v1::Pose& FrameMetadata::_internal_camera_pose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::Pose* p = _impl_.camera_pose_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::Pose&>(::agricultural::robot::navigation::v1::_Pose_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::Pose& FrameMetadata::camera_pose() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.FrameMetadata.camera_pose)
  return _internal_camera_pose();
}
inline void FrameMetadata::unsafe_arena_set_allocated_camera_pose(
    ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_pose_);
  }
  _impl_.camera_pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::Pose*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.FrameMetadata.camera_pose)
}
inline ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE FrameMetadata::release_camera_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::Pose* released = _impl_.camera_pose_;
  _impl_.camera_pose_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE FrameMetadata::unsafe_arena_release_camera_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.FrameMetadata.camera_pose)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::Pose* temp = _impl_.camera_pose_;
  _impl_.camera_pose_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NONNULL FrameMetadata::_internal_mutable_camera_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_pose_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::Pose>(GetArena());
    _impl_.camera_pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::Pose*>(p);
  }
  return _impl_.camera_pose_;
}
inline ::agricultural::robot::navigation::v1::Pose* PROTOBUF_NONNULL FrameMetadata::mutable_camera_pose()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::agricultural::robot::navigation::v1::Pose* _msg = _internal_mutable_camera_pose();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.FrameMetadata.camera_pose)
  return _msg;
}
inline void FrameMetadata::set_allocated_camera_pose(::agricultural::robot::navigation::v1::Pose* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_pose_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.camera_pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::Pose*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.FrameMetadata.camera_pose)
}

// -------------------------------------------------------------------

// GetLocalizationStatusRequest

// string robot_id = 1 [json_name = "robotId"];
inline void GetLocalizationStatusRequest::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetLocalizationStatusRequest::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.GetLocalizationStatusRequest.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetLocalizationStatusRequest::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.GetLocalizationStatusRequest.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL GetLocalizationStatusRequest::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.GetLocalizationStatusRequest.robot_id)
  return _s;
}
inline const ::std::string& GetLocalizationStatusRequest::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void GetLocalizationStatusRequest::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetLocalizationStatusRequest::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetLocalizationStatusRequest::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.GetLocalizationStatusRequest.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void GetLocalizationStatusRequest::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.GetLocalizationStatusRequest.robot_id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// InitializeLocalizationRequest

// string robot_id = 1 [json_name = "robotId"];
inline void InitializeLocalizationRequest::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& InitializeLocalizationRequest::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.InitializeLocalizationRequest.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void InitializeLocalizationRequest::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.InitializeLocalizationRequest.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL InitializeLocalizationRequest::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.InitializeLocalizationRequest.robot_id)
  return _s;
}
inline const ::std::string& InitializeLocalizationRequest::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void InitializeLocalizationRequest::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL InitializeLocalizationRequest::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE InitializeLocalizationRequest::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.InitializeLocalizationRequest.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void InitializeLocalizationRequest::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.InitializeLocalizationRequest.robot_id)
}

// optional .agricultural.robot.navigation.v1.PoseWithCovariance initial_pose = 2 [json_name = "initialPose"];
inline bool InitializeLocalizationRequest::has_initial_pose() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.initial_pose_ != nullptr);
  return value;
}
inline void InitializeLocalizationRequest::clear_initial_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_pose_ != nullptr) _impl_.initial_pose_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::agricultural::robot::navigation::v1::PoseWithCovariance& InitializeLocalizationRequest::_internal_initial_pose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::PoseWithCovariance* p = _impl_.initial_pose_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::PoseWithCovariance&>(::agricultural::robot::navigation::v1::_PoseWithCovariance_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::PoseWithCovariance& InitializeLocalizationRequest::initial_pose() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.InitializeLocalizationRequest.initial_pose)
  return _internal_initial_pose();
}
inline void InitializeLocalizationRequest::unsafe_arena_set_allocated_initial_pose(
    ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_pose_);
  }
  _impl_.initial_pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.InitializeLocalizationRequest.initial_pose)
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE InitializeLocalizationRequest::release_initial_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* released = _impl_.initial_pose_;
  _impl_.initial_pose_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE InitializeLocalizationRequest::unsafe_arena_release_initial_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.InitializeLocalizationRequest.initial_pose)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* temp = _impl_.initial_pose_;
  _impl_.initial_pose_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL InitializeLocalizationRequest::_internal_mutable_initial_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_pose_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::PoseWithCovariance>(GetArena());
    _impl_.initial_pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(p);
  }
  return _impl_.initial_pose_;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL InitializeLocalizationRequest::mutable_initial_pose()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* _msg = _internal_mutable_initial_pose();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.InitializeLocalizationRequest.initial_pose)
  return _msg;
}
inline void InitializeLocalizationRequest::set_allocated_initial_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_pose_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.initial_pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.InitializeLocalizationRequest.initial_pose)
}

// .agricultural.robot.navigation.v1.LocalizationMethod method = 3 [json_name = "method"];
inline void InitializeLocalizationRequest::clear_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::agricultural::robot::navigation::v1::LocalizationMethod InitializeLocalizationRequest::method() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.InitializeLocalizationRequest.method)
  return _internal_method();
}
inline void InitializeLocalizationRequest::set_method(::agricultural::robot::navigation::v1::LocalizationMethod value) {
  _internal_set_method(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.InitializeLocalizationRequest.method)
}
inline ::agricultural::robot::navigation::v1::LocalizationMethod InitializeLocalizationRequest::_internal_method() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::LocalizationMethod>(_impl_.method_);
}
inline void InitializeLocalizationRequest::_internal_set_method(::agricultural::robot::navigation::v1::LocalizationMethod value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_ = value;
}

// map<string, string> parameters = 4 [json_name = "parameters"];
inline int InitializeLocalizationRequest::_internal_parameters_size() const {
  return _internal_parameters().size();
}
inline int InitializeLocalizationRequest::parameters_size() const {
  return _internal_parameters_size();
}
inline void InitializeLocalizationRequest::clear_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameters_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& InitializeLocalizationRequest::_internal_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parameters_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& InitializeLocalizationRequest::parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:agricultural.robot.navigation.v1.InitializeLocalizationRequest.parameters)
  return _internal_parameters();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL InitializeLocalizationRequest::_internal_mutable_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.parameters_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL InitializeLocalizationRequest::mutable_parameters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:agricultural.robot.navigation.v1.InitializeLocalizationRequest.parameters)
  return _internal_mutable_parameters();
}

// -------------------------------------------------------------------

// ResetLocalizationRequest

// string robot_id = 1 [json_name = "robotId"];
inline void ResetLocalizationRequest::clear_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.robot_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ResetLocalizationRequest::robot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.ResetLocalizationRequest.robot_id)
  return _internal_robot_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ResetLocalizationRequest::set_robot_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.ResetLocalizationRequest.robot_id)
}
inline ::std::string* PROTOBUF_NONNULL ResetLocalizationRequest::mutable_robot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_robot_id();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.ResetLocalizationRequest.robot_id)
  return _s;
}
inline const ::std::string& ResetLocalizationRequest::_internal_robot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.robot_id_.Get();
}
inline void ResetLocalizationRequest::_internal_set_robot_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.robot_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ResetLocalizationRequest::_internal_mutable_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.robot_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ResetLocalizationRequest::release_robot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.ResetLocalizationRequest.robot_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.robot_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  return released;
}
inline void ResetLocalizationRequest::set_allocated_robot_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.robot_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.robot_id_.IsDefault()) {
    _impl_.robot_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.ResetLocalizationRequest.robot_id)
}

// bool clear_map = 2 [json_name = "clearMap"];
inline void ResetLocalizationRequest::clear_clear_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clear_map_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool ResetLocalizationRequest::clear_map() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.ResetLocalizationRequest.clear_map)
  return _internal_clear_map();
}
inline void ResetLocalizationRequest::set_clear_map(bool value) {
  _internal_set_clear_map(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.ResetLocalizationRequest.clear_map)
}
inline bool ResetLocalizationRequest::_internal_clear_map() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.clear_map_;
}
inline void ResetLocalizationRequest::_internal_set_clear_map(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clear_map_ = value;
}

// -------------------------------------------------------------------

// LocalizationStatusResponse

// .agricultural.robot.navigation.v1.LocalizationStatus status = 1 [json_name = "status"];
inline void LocalizationStatusResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::agricultural::robot::navigation::v1::LocalizationStatus LocalizationStatusResponse::status() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationStatusResponse.status)
  return _internal_status();
}
inline void LocalizationStatusResponse::set_status(::agricultural::robot::navigation::v1::LocalizationStatus value) {
  _internal_set_status(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.LocalizationStatusResponse.status)
}
inline ::agricultural::robot::navigation::v1::LocalizationStatus LocalizationStatusResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::LocalizationStatus>(_impl_.status_);
}
inline void LocalizationStatusResponse::_internal_set_status(::agricultural::robot::navigation::v1::LocalizationStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// .agricultural.robot.navigation.v1.LocalizationQuality quality = 2 [json_name = "quality"];
inline bool LocalizationStatusResponse::has_quality() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quality_ != nullptr);
  return value;
}
inline void LocalizationStatusResponse::clear_quality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_ != nullptr) _impl_.quality_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::agricultural::robot::navigation::v1::LocalizationQuality& LocalizationStatusResponse::_internal_quality() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::LocalizationQuality* p = _impl_.quality_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::LocalizationQuality&>(::agricultural::robot::navigation::v1::_LocalizationQuality_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::LocalizationQuality& LocalizationStatusResponse::quality() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationStatusResponse.quality)
  return _internal_quality();
}
inline void LocalizationStatusResponse::unsafe_arena_set_allocated_quality(
    ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_);
  }
  _impl_.quality_ = reinterpret_cast<::agricultural::robot::navigation::v1::LocalizationQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.LocalizationStatusResponse.quality)
}
inline ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NULLABLE LocalizationStatusResponse::release_quality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::agricultural::robot::navigation::v1::LocalizationQuality* released = _impl_.quality_;
  _impl_.quality_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NULLABLE LocalizationStatusResponse::unsafe_arena_release_quality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.LocalizationStatusResponse.quality)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::agricultural::robot::navigation::v1::LocalizationQuality* temp = _impl_.quality_;
  _impl_.quality_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NONNULL LocalizationStatusResponse::_internal_mutable_quality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::LocalizationQuality>(GetArena());
    _impl_.quality_ = reinterpret_cast<::agricultural::robot::navigation::v1::LocalizationQuality*>(p);
  }
  return _impl_.quality_;
}
inline ::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NONNULL LocalizationStatusResponse::mutable_quality()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::agricultural::robot::navigation::v1::LocalizationQuality* _msg = _internal_mutable_quality();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.LocalizationStatusResponse.quality)
  return _msg;
}
inline void LocalizationStatusResponse::set_allocated_quality(::agricultural::robot::navigation::v1::LocalizationQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.quality_ = reinterpret_cast<::agricultural::robot::navigation::v1::LocalizationQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.LocalizationStatusResponse.quality)
}

// .agricultural.robot.navigation.v1.PoseWithCovariance current_pose = 3 [json_name = "currentPose"];
inline bool LocalizationStatusResponse::has_current_pose() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.current_pose_ != nullptr);
  return value;
}
inline void LocalizationStatusResponse::clear_current_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_pose_ != nullptr) _impl_.current_pose_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::agricultural::robot::navigation::v1::PoseWithCovariance& LocalizationStatusResponse::_internal_current_pose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::PoseWithCovariance* p = _impl_.current_pose_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::PoseWithCovariance&>(::agricultural::robot::navigation::v1::_PoseWithCovariance_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::PoseWithCovariance& LocalizationStatusResponse::current_pose() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationStatusResponse.current_pose)
  return _internal_current_pose();
}
inline void LocalizationStatusResponse::unsafe_arena_set_allocated_current_pose(
    ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.current_pose_);
  }
  _impl_.current_pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.LocalizationStatusResponse.current_pose)
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE LocalizationStatusResponse::release_current_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* released = _impl_.current_pose_;
  _impl_.current_pose_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE LocalizationStatusResponse::unsafe_arena_release_current_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.LocalizationStatusResponse.current_pose)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* temp = _impl_.current_pose_;
  _impl_.current_pose_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL LocalizationStatusResponse::_internal_mutable_current_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_pose_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::PoseWithCovariance>(GetArena());
    _impl_.current_pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(p);
  }
  return _impl_.current_pose_;
}
inline ::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NONNULL LocalizationStatusResponse::mutable_current_pose()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::agricultural::robot::navigation::v1::PoseWithCovariance* _msg = _internal_mutable_current_pose();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.LocalizationStatusResponse.current_pose)
  return _msg;
}
inline void LocalizationStatusResponse::set_allocated_current_pose(::agricultural::robot::navigation::v1::PoseWithCovariance* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.current_pose_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.current_pose_ = reinterpret_cast<::agricultural::robot::navigation::v1::PoseWithCovariance*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.LocalizationStatusResponse.current_pose)
}

// .agricultural.robot.navigation.v1.LocalizationMethod method = 4 [json_name = "method"];
inline void LocalizationStatusResponse::clear_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::agricultural::robot::navigation::v1::LocalizationMethod LocalizationStatusResponse::method() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationStatusResponse.method)
  return _internal_method();
}
inline void LocalizationStatusResponse::set_method(::agricultural::robot::navigation::v1::LocalizationMethod value) {
  _internal_set_method(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.LocalizationStatusResponse.method)
}
inline ::agricultural::robot::navigation::v1::LocalizationMethod LocalizationStatusResponse::_internal_method() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::LocalizationMethod>(_impl_.method_);
}
inline void LocalizationStatusResponse::_internal_set_method(::agricultural::robot::navigation::v1::LocalizationMethod value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_ = value;
}

// .agricultural.robot.navigation.v1.LocalizationMetrics metrics = 5 [json_name = "metrics"];
inline bool LocalizationStatusResponse::has_metrics() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metrics_ != nullptr);
  return value;
}
inline void LocalizationStatusResponse::clear_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metrics_ != nullptr) _impl_.metrics_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::agricultural::robot::navigation::v1::LocalizationMetrics& LocalizationStatusResponse::_internal_metrics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::agricultural::robot::navigation::v1::LocalizationMetrics* p = _impl_.metrics_;
  return p != nullptr ? *p : reinterpret_cast<const ::agricultural::robot::navigation::v1::LocalizationMetrics&>(::agricultural::robot::navigation::v1::_LocalizationMetrics_default_instance_);
}
inline const ::agricultural::robot::navigation::v1::LocalizationMetrics& LocalizationStatusResponse::metrics() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationStatusResponse.metrics)
  return _internal_metrics();
}
inline void LocalizationStatusResponse::unsafe_arena_set_allocated_metrics(
    ::agricultural::robot::navigation::v1::LocalizationMetrics* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metrics_);
  }
  _impl_.metrics_ = reinterpret_cast<::agricultural::robot::navigation::v1::LocalizationMetrics*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.LocalizationStatusResponse.metrics)
}
inline ::agricultural::robot::navigation::v1::LocalizationMetrics* PROTOBUF_NULLABLE LocalizationStatusResponse::release_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::LocalizationMetrics* released = _impl_.metrics_;
  _impl_.metrics_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::agricultural::robot::navigation::v1::LocalizationMetrics* PROTOBUF_NULLABLE LocalizationStatusResponse::unsafe_arena_release_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.LocalizationStatusResponse.metrics)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::agricultural::robot::navigation::v1::LocalizationMetrics* temp = _impl_.metrics_;
  _impl_.metrics_ = nullptr;
  return temp;
}
inline ::agricultural::robot::navigation::v1::LocalizationMetrics* PROTOBUF_NONNULL LocalizationStatusResponse::_internal_mutable_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metrics_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::agricultural::robot::navigation::v1::LocalizationMetrics>(GetArena());
    _impl_.metrics_ = reinterpret_cast<::agricultural::robot::navigation::v1::LocalizationMetrics*>(p);
  }
  return _impl_.metrics_;
}
inline ::agricultural::robot::navigation::v1::LocalizationMetrics* PROTOBUF_NONNULL LocalizationStatusResponse::mutable_metrics()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::agricultural::robot::navigation::v1::LocalizationMetrics* _msg = _internal_mutable_metrics();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.LocalizationStatusResponse.metrics)
  return _msg;
}
inline void LocalizationStatusResponse::set_allocated_metrics(::agricultural::robot::navigation::v1::LocalizationMetrics* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metrics_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.metrics_ = reinterpret_cast<::agricultural::robot::navigation::v1::LocalizationMetrics*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.LocalizationStatusResponse.metrics)
}

// .google.protobuf.Timestamp timestamp = 6 [json_name = "timestamp"];
inline bool LocalizationStatusResponse::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& LocalizationStatusResponse::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& LocalizationStatusResponse::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationStatusResponse.timestamp)
  return _internal_timestamp();
}
inline void LocalizationStatusResponse::unsafe_arena_set_allocated_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.LocalizationStatusResponse.timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE LocalizationStatusResponse::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE LocalizationStatusResponse::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.LocalizationStatusResponse.timestamp)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL LocalizationStatusResponse::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL LocalizationStatusResponse::mutable_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.LocalizationStatusResponse.timestamp)
  return _msg;
}
inline void LocalizationStatusResponse::set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.LocalizationStatusResponse.timestamp)
}

// -------------------------------------------------------------------

// LocalizationResponse

// bool success = 1 [json_name = "success"];
inline void LocalizationResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool LocalizationResponse::success() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationResponse.success)
  return _internal_success();
}
inline void LocalizationResponse::set_success(bool value) {
  _internal_set_success(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.LocalizationResponse.success)
}
inline bool LocalizationResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void LocalizationResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2 [json_name = "message"];
inline void LocalizationResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& LocalizationResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void LocalizationResponse::set_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.LocalizationResponse.message)
}
inline ::std::string* PROTOBUF_NONNULL LocalizationResponse::mutable_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.LocalizationResponse.message)
  return _s;
}
inline const ::std::string& LocalizationResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void LocalizationResponse::_internal_set_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL LocalizationResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE LocalizationResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.LocalizationResponse.message)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_.Set("", GetArena());
  }
  return released;
}
inline void LocalizationResponse::set_allocated_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.LocalizationResponse.message)
}

// .agricultural.robot.navigation.v1.LocalizationStatus status = 3 [json_name = "status"];
inline void LocalizationResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::agricultural::robot::navigation::v1::LocalizationStatus LocalizationResponse::status() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationResponse.status)
  return _internal_status();
}
inline void LocalizationResponse::set_status(::agricultural::robot::navigation::v1::LocalizationStatus value) {
  _internal_set_status(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.LocalizationResponse.status)
}
inline ::agricultural::robot::navigation::v1::LocalizationStatus LocalizationResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::LocalizationStatus>(_impl_.status_);
}
inline void LocalizationResponse::_internal_set_status(::agricultural::robot::navigation::v1::LocalizationStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
inline bool LocalizationResponse::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& LocalizationResponse::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& LocalizationResponse::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationResponse.timestamp)
  return _internal_timestamp();
}
inline void LocalizationResponse::unsafe_arena_set_allocated_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.LocalizationResponse.timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE LocalizationResponse::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE LocalizationResponse::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.LocalizationResponse.timestamp)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL LocalizationResponse::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL LocalizationResponse::mutable_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.LocalizationResponse.timestamp)
  return _msg;
}
inline void LocalizationResponse::set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.LocalizationResponse.timestamp)
}

// -------------------------------------------------------------------

// LocalizationQuality

// double confidence = 1 [json_name = "confidence"];
inline void LocalizationQuality::clear_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confidence_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double LocalizationQuality::confidence() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationQuality.confidence)
  return _internal_confidence();
}
inline void LocalizationQuality::set_confidence(double value) {
  _internal_set_confidence(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.LocalizationQuality.confidence)
}
inline double LocalizationQuality::_internal_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.confidence_;
}
inline void LocalizationQuality::_internal_set_confidence(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confidence_ = value;
}

// double position_uncertainty = 2 [json_name = "positionUncertainty"];
inline void LocalizationQuality::clear_position_uncertainty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_uncertainty_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double LocalizationQuality::position_uncertainty() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationQuality.position_uncertainty)
  return _internal_position_uncertainty();
}
inline void LocalizationQuality::set_position_uncertainty(double value) {
  _internal_set_position_uncertainty(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.LocalizationQuality.position_uncertainty)
}
inline double LocalizationQuality::_internal_position_uncertainty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.position_uncertainty_;
}
inline void LocalizationQuality::_internal_set_position_uncertainty(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_uncertainty_ = value;
}

// double orientation_uncertainty = 3 [json_name = "orientationUncertainty"];
inline void LocalizationQuality::clear_orientation_uncertainty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.orientation_uncertainty_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double LocalizationQuality::orientation_uncertainty() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationQuality.orientation_uncertainty)
  return _internal_orientation_uncertainty();
}
inline void LocalizationQuality::set_orientation_uncertainty(double value) {
  _internal_set_orientation_uncertainty(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.LocalizationQuality.orientation_uncertainty)
}
inline double LocalizationQuality::_internal_orientation_uncertainty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.orientation_uncertainty_;
}
inline void LocalizationQuality::_internal_set_orientation_uncertainty(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.orientation_uncertainty_ = value;
}

// uint32 matched_features = 4 [json_name = "matchedFeatures"];
inline void LocalizationQuality::clear_matched_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matched_features_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t LocalizationQuality::matched_features() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationQuality.matched_features)
  return _internal_matched_features();
}
inline void LocalizationQuality::set_matched_features(::uint32_t value) {
  _internal_set_matched_features(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.LocalizationQuality.matched_features)
}
inline ::uint32_t LocalizationQuality::_internal_matched_features() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.matched_features_;
}
inline void LocalizationQuality::_internal_set_matched_features(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matched_features_ = value;
}

// double drift_estimate = 5 [json_name = "driftEstimate"];
inline void LocalizationQuality::clear_drift_estimate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.drift_estimate_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double LocalizationQuality::drift_estimate() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationQuality.drift_estimate)
  return _internal_drift_estimate();
}
inline void LocalizationQuality::set_drift_estimate(double value) {
  _internal_set_drift_estimate(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.LocalizationQuality.drift_estimate)
}
inline double LocalizationQuality::_internal_drift_estimate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.drift_estimate_;
}
inline void LocalizationQuality::_internal_set_drift_estimate(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.drift_estimate_ = value;
}

// .agricultural.robot.navigation.v1.LocalizationHealth health = 6 [json_name = "health"];
inline void LocalizationQuality::clear_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::agricultural::robot::navigation::v1::LocalizationHealth LocalizationQuality::health() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationQuality.health)
  return _internal_health();
}
inline void LocalizationQuality::set_health(::agricultural::robot::navigation::v1::LocalizationHealth value) {
  _internal_set_health(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.LocalizationQuality.health)
}
inline ::agricultural::robot::navigation::v1::LocalizationHealth LocalizationQuality::_internal_health() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::agricultural::robot::navigation::v1::LocalizationHealth>(_impl_.health_);
}
inline void LocalizationQuality::_internal_set_health(::agricultural::robot::navigation::v1::LocalizationHealth value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_ = value;
}

// -------------------------------------------------------------------

// LocalizationMetrics

// uint32 particle_count = 1 [json_name = "particleCount"];
inline void LocalizationMetrics::clear_particle_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.particle_count_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t LocalizationMetrics::particle_count() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationMetrics.particle_count)
  return _internal_particle_count();
}
inline void LocalizationMetrics::set_particle_count(::uint32_t value) {
  _internal_set_particle_count(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.LocalizationMetrics.particle_count)
}
inline ::uint32_t LocalizationMetrics::_internal_particle_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.particle_count_;
}
inline void LocalizationMetrics::_internal_set_particle_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.particle_count_ = value;
}

// double effective_sample_size = 2 [json_name = "effectiveSampleSize"];
inline void LocalizationMetrics::clear_effective_sample_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.effective_sample_size_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double LocalizationMetrics::effective_sample_size() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationMetrics.effective_sample_size)
  return _internal_effective_sample_size();
}
inline void LocalizationMetrics::set_effective_sample_size(double value) {
  _internal_set_effective_sample_size(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.LocalizationMetrics.effective_sample_size)
}
inline double LocalizationMetrics::_internal_effective_sample_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.effective_sample_size_;
}
inline void LocalizationMetrics::_internal_set_effective_sample_size(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.effective_sample_size_ = value;
}

// double convergence_rate = 3 [json_name = "convergenceRate"];
inline void LocalizationMetrics::clear_convergence_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.convergence_rate_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double LocalizationMetrics::convergence_rate() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationMetrics.convergence_rate)
  return _internal_convergence_rate();
}
inline void LocalizationMetrics::set_convergence_rate(double value) {
  _internal_set_convergence_rate(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.LocalizationMetrics.convergence_rate)
}
inline double LocalizationMetrics::_internal_convergence_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.convergence_rate_;
}
inline void LocalizationMetrics::_internal_set_convergence_rate(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.convergence_rate_ = value;
}

// .google.protobuf.Duration update_frequency = 4 [json_name = "updateFrequency"];
inline bool LocalizationMetrics::has_update_frequency() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_frequency_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& LocalizationMetrics::_internal_update_frequency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.update_frequency_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& LocalizationMetrics::update_frequency() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationMetrics.update_frequency)
  return _internal_update_frequency();
}
inline void LocalizationMetrics::unsafe_arena_set_allocated_update_frequency(
    ::google::protobuf::Duration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_frequency_);
  }
  _impl_.update_frequency_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agricultural.robot.navigation.v1.LocalizationMetrics.update_frequency)
}
inline ::google::protobuf::Duration* PROTOBUF_NULLABLE LocalizationMetrics::release_update_frequency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.update_frequency_;
  _impl_.update_frequency_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* PROTOBUF_NULLABLE LocalizationMetrics::unsafe_arena_release_update_frequency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:agricultural.robot.navigation.v1.LocalizationMetrics.update_frequency)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.update_frequency_;
  _impl_.update_frequency_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* PROTOBUF_NONNULL LocalizationMetrics::_internal_mutable_update_frequency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_frequency_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.update_frequency_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.update_frequency_;
}
inline ::google::protobuf::Duration* PROTOBUF_NONNULL LocalizationMetrics::mutable_update_frequency()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Duration* _msg = _internal_mutable_update_frequency();
  // @@protoc_insertion_point(field_mutable:agricultural.robot.navigation.v1.LocalizationMetrics.update_frequency)
  return _msg;
}
inline void LocalizationMetrics::set_allocated_update_frequency(::google::protobuf::Duration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_frequency_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.update_frequency_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:agricultural.robot.navigation.v1.LocalizationMetrics.update_frequency)
}

// uint32 sensor_updates_count = 5 [json_name = "sensorUpdatesCount"];
inline void LocalizationMetrics::clear_sensor_updates_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sensor_updates_count_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t LocalizationMetrics::sensor_updates_count() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationMetrics.sensor_updates_count)
  return _internal_sensor_updates_count();
}
inline void LocalizationMetrics::set_sensor_updates_count(::uint32_t value) {
  _internal_set_sensor_updates_count(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.LocalizationMetrics.sensor_updates_count)
}
inline ::uint32_t LocalizationMetrics::_internal_sensor_updates_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sensor_updates_count_;
}
inline void LocalizationMetrics::_internal_set_sensor_updates_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sensor_updates_count_ = value;
}

// double map_match_score = 6 [json_name = "mapMatchScore"];
inline void LocalizationMetrics::clear_map_match_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_match_score_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline double LocalizationMetrics::map_match_score() const {
  // @@protoc_insertion_point(field_get:agricultural.robot.navigation.v1.LocalizationMetrics.map_match_score)
  return _internal_map_match_score();
}
inline void LocalizationMetrics::set_map_match_score(double value) {
  _internal_set_map_match_score(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:agricultural.robot.navigation.v1.LocalizationMetrics.map_match_score)
}
inline double LocalizationMetrics::_internal_map_match_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_match_score_;
}
inline void LocalizationMetrics::_internal_set_map_match_score(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_match_score_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace navigation
}  // namespace robot
}  // namespace agricultural


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::MapType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::MapType>() {
  return ::agricultural::robot::navigation::v1::MapType_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::MapSource> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::MapSource>() {
  return ::agricultural::robot::navigation::v1::MapSource_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::ControlMode> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::ControlMode>() {
  return ::agricultural::robot::navigation::v1::ControlMode_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::EmergencyStopType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::EmergencyStopType>() {
  return ::agricultural::robot::navigation::v1::EmergencyStopType_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::SafetyViolationType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::SafetyViolationType>() {
  return ::agricultural::robot::navigation::v1::SafetyViolationType_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::WaypointType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::WaypointType>() {
  return ::agricultural::robot::navigation::v1::WaypointType_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::WaypointActionType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::WaypointActionType>() {
  return ::agricultural::robot::navigation::v1::WaypointActionType_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::PlannerType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::PlannerType>() {
  return ::agricultural::robot::navigation::v1::PlannerType_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::NavigationBehavior> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::NavigationBehavior>() {
  return ::agricultural::robot::navigation::v1::NavigationBehavior_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::TrajectoryExecutionMode> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::TrajectoryExecutionMode>() {
  return ::agricultural::robot::navigation::v1::TrajectoryExecutionMode_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::NavigationStatus> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::NavigationStatus>() {
  return ::agricultural::robot::navigation::v1::NavigationStatus_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::NavigationResult> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::NavigationResult>() {
  return ::agricultural::robot::navigation::v1::NavigationResult_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::NavigationErrorCode> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::NavigationErrorCode>() {
  return ::agricultural::robot::navigation::v1::NavigationErrorCode_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::CameraType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::CameraType>() {
  return ::agricultural::robot::navigation::v1::CameraType_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::VideoFormat> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::VideoFormat>() {
  return ::agricultural::robot::navigation::v1::VideoFormat_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::VideoQuality> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::VideoQuality>() {
  return ::agricultural::robot::navigation::v1::VideoQuality_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::CameraStatus> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::CameraStatus>() {
  return ::agricultural::robot::navigation::v1::CameraStatus_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::CameraControlType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::CameraControlType>() {
  return ::agricultural::robot::navigation::v1::CameraControlType_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::DistortionModel> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::DistortionModel>() {
  return ::agricultural::robot::navigation::v1::DistortionModel_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::OverlayType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::OverlayType>() {
  return ::agricultural::robot::navigation::v1::OverlayType_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::LocalizationStatus> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::LocalizationStatus>() {
  return ::agricultural::robot::navigation::v1::LocalizationStatus_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::LocalizationMethod> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::LocalizationMethod>() {
  return ::agricultural::robot::navigation::v1::LocalizationMethod_descriptor();
}
template <>
struct is_proto_enum<::agricultural::robot::navigation::v1::LocalizationHealth> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::agricultural::robot::navigation::v1::LocalizationHealth>() {
  return ::agricultural::robot::navigation::v1::LocalizationHealth_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto_2epb_2eh
