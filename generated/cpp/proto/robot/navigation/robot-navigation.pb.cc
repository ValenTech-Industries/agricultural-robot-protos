// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/robot/navigation/robot-navigation.proto
// Protobuf C++ Version: 6.31.1

#include "proto/robot/navigation/robot-navigation.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace agricultural {
namespace robot {
namespace navigation {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR WaypointAction_ParametersEntry_DoNotUse::WaypointAction_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : WaypointAction_ParametersEntry_DoNotUse::MapEntry(WaypointAction_ParametersEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : WaypointAction_ParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct WaypointAction_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WaypointAction_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WaypointAction_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    WaypointAction_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WaypointAction_ParametersEntry_DoNotUseDefaultTypeInternal _WaypointAction_ParametersEntry_DoNotUse_default_instance_;

inline constexpr Vector3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0},
        y_{0},
        z_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vector3::Vector3(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Vector3_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Vector3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vector3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vector3DefaultTypeInternal() {}
  union {
    Vector3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vector3DefaultTypeInternal _Vector3_default_instance_;

inline constexpr TrajectoryOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        velocity_scaling_{0},
        interpolate_path_{false},
        check_collisions_{false},
        execution_mode_{static_cast< ::agricultural::robot::navigation::v1::TrajectoryExecutionMode >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR TrajectoryOptions::TrajectoryOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TrajectoryOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TrajectoryOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrajectoryOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrajectoryOptionsDefaultTypeInternal() {}
  union {
    TrajectoryOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrajectoryOptionsDefaultTypeInternal _TrajectoryOptions_default_instance_;

inline constexpr StreamPositionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        frame_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        frequency_hz_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR StreamPositionRequest::StreamPositionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(StreamPositionRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StreamPositionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamPositionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamPositionRequestDefaultTypeInternal() {}
  union {
    StreamPositionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamPositionRequestDefaultTypeInternal _StreamPositionRequest_default_instance_;

inline constexpr StreamNavigationStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        frequency_hz_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR StreamNavigationStatusRequest::StreamNavigationStatusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(StreamNavigationStatusRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StreamNavigationStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamNavigationStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamNavigationStatusRequestDefaultTypeInternal() {}
  union {
    StreamNavigationStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamNavigationStatusRequestDefaultTypeInternal _StreamNavigationStatusRequest_default_instance_;

inline constexpr StopMovementRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stop_type_{static_cast< ::agricultural::robot::navigation::v1::EmergencyStopType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR StopMovementRequest::StopMovementRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(StopMovementRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StopMovementRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopMovementRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopMovementRequestDefaultTypeInternal() {}
  union {
    StopMovementRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopMovementRequestDefaultTypeInternal _StopMovementRequest_default_instance_;

inline constexpr SafetyConstraints::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        forbidden_zones_{},
        max_linear_velocity_{0},
        max_angular_velocity_{0},
        max_acceleration_{0},
        safety_margin_{0},
        obstacle_avoidance_enabled_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SafetyConstraints::SafetyConstraints(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SafetyConstraints_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SafetyConstraintsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SafetyConstraintsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SafetyConstraintsDefaultTypeInternal() {}
  union {
    SafetyConstraints _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SafetyConstraintsDefaultTypeInternal _SafetyConstraints_default_instance_;

inline constexpr Resolution::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        width_{0u},
        height_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Resolution::Resolution(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Resolution_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResolutionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResolutionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResolutionDefaultTypeInternal() {}
  union {
    Resolution _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResolutionDefaultTypeInternal _Resolution_default_instance_;

inline constexpr ResetLocalizationRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        clear_map_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ResetLocalizationRequest::ResetLocalizationRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ResetLocalizationRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResetLocalizationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetLocalizationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetLocalizationRequestDefaultTypeInternal() {}
  union {
    ResetLocalizationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetLocalizationRequestDefaultTypeInternal _ResetLocalizationRequest_default_instance_;

inline constexpr Quaternion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0},
        y_{0},
        z_{0},
        w_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Quaternion::Quaternion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Quaternion_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QuaternionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuaternionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuaternionDefaultTypeInternal() {}
  union {
    Quaternion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuaternionDefaultTypeInternal _Quaternion_default_instance_;

inline constexpr Point3D::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0},
        y_{0},
        z_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Point3D::Point3D(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Point3D_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Point3DDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Point3DDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Point3DDefaultTypeInternal() {}
  union {
    Point3D _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Point3DDefaultTypeInternal _Point3D_default_instance_;

inline constexpr Point2D::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0},
        y_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Point2D::Point2D(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Point2D_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Point2DDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Point2DDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Point2DDefaultTypeInternal() {}
  union {
    Point2D _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Point2DDefaultTypeInternal _Point2D_default_instance_;

inline constexpr NavigationOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        avoid_zones_{},
        tolerance_linear_{0},
        planner_{static_cast< ::agricultural::robot::navigation::v1::PlannerType >(0)},
        use_obstacle_avoidance_{false},
        tolerance_angular_{0},
        behavior_{static_cast< ::agricultural::robot::navigation::v1::NavigationBehavior >(0)},
        max_planning_time_ms_{0u},
        max_retries_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR NavigationOptions::NavigationOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NavigationOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NavigationOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NavigationOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NavigationOptionsDefaultTypeInternal() {}
  union {
    NavigationOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NavigationOptionsDefaultTypeInternal _NavigationOptions_default_instance_;

inline constexpr LocalizationQuality::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        confidence_{0},
        position_uncertainty_{0},
        orientation_uncertainty_{0},
        drift_estimate_{0},
        matched_features_{0u},
        health_{static_cast< ::agricultural::robot::navigation::v1::LocalizationHealth >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR LocalizationQuality::LocalizationQuality(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LocalizationQuality_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LocalizationQualityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocalizationQualityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocalizationQualityDefaultTypeInternal() {}
  union {
    LocalizationQuality _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocalizationQualityDefaultTypeInternal _LocalizationQuality_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR InitializeLocalizationRequest_ParametersEntry_DoNotUse::InitializeLocalizationRequest_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : InitializeLocalizationRequest_ParametersEntry_DoNotUse::MapEntry(InitializeLocalizationRequest_ParametersEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : InitializeLocalizationRequest_ParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct InitializeLocalizationRequest_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitializeLocalizationRequest_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitializeLocalizationRequest_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    InitializeLocalizationRequest_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitializeLocalizationRequest_ParametersEntry_DoNotUseDefaultTypeInternal _InitializeLocalizationRequest_ParametersEntry_DoNotUse_default_instance_;

inline constexpr GetPositionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        frame_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetPositionRequest::GetPositionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetPositionRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetPositionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPositionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPositionRequestDefaultTypeInternal() {}
  union {
    GetPositionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPositionRequestDefaultTypeInternal _GetPositionRequest_default_instance_;

inline constexpr GetNavigationStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetNavigationStatusRequest::GetNavigationStatusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetNavigationStatusRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetNavigationStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetNavigationStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetNavigationStatusRequestDefaultTypeInternal() {}
  union {
    GetNavigationStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetNavigationStatusRequestDefaultTypeInternal _GetNavigationStatusRequest_default_instance_;

inline constexpr GetMapRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        frame_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        map_type_{static_cast< ::agricultural::robot::navigation::v1::MapType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR GetMapRequest::GetMapRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetMapRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetMapRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMapRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMapRequestDefaultTypeInternal() {}
  union {
    GetMapRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMapRequestDefaultTypeInternal _GetMapRequest_default_instance_;

inline constexpr GetLocalizationStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetLocalizationStatusRequest::GetLocalizationStatusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetLocalizationStatusRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetLocalizationStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLocalizationStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLocalizationStatusRequestDefaultTypeInternal() {}
  union {
    GetLocalizationStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLocalizationStatusRequestDefaultTypeInternal _GetLocalizationStatusRequest_default_instance_;

inline constexpr GetCameraInfoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        camera_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetCameraInfoRequest::GetCameraInfoRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetCameraInfoRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetCameraInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCameraInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCameraInfoRequestDefaultTypeInternal() {}
  union {
    GetCameraInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCameraInfoRequestDefaultTypeInternal _GetCameraInfoRequest_default_instance_;

inline constexpr ClearMapRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        map_type_{static_cast< ::agricultural::robot::navigation::v1::MapType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ClearMapRequest::ClearMapRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ClearMapRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClearMapRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClearMapRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClearMapRequestDefaultTypeInternal() {}
  union {
    ClearMapRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClearMapRequestDefaultTypeInternal _ClearMapRequest_default_instance_;

inline constexpr CancelGoalRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        goal_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CancelGoalRequest::CancelGoalRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CancelGoalRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CancelGoalRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelGoalRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelGoalRequestDefaultTypeInternal() {}
  union {
    CancelGoalRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelGoalRequestDefaultTypeInternal _CancelGoalRequest_default_instance_;

inline constexpr CameraIntrinsics::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_matrix_{},
        focal_length_x_{0},
        focal_length_y_{0},
        principal_point_x_{0},
        principal_point_y_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CameraIntrinsics::CameraIntrinsics(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CameraIntrinsics_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CameraIntrinsicsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraIntrinsicsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraIntrinsicsDefaultTypeInternal() {}
  union {
    CameraIntrinsics _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraIntrinsicsDefaultTypeInternal _CameraIntrinsics_default_instance_;

inline constexpr CameraDistortion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        coefficients_{},
        model_{static_cast< ::agricultural::robot::navigation::v1::DistortionModel >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CameraDistortion::CameraDistortion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CameraDistortion_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CameraDistortionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraDistortionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraDistortionDefaultTypeInternal() {}
  union {
    CameraDistortion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraDistortionDefaultTypeInternal _CameraDistortion_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR CameraControlResponse_CurrentSettingsEntry_DoNotUse::CameraControlResponse_CurrentSettingsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : CameraControlResponse_CurrentSettingsEntry_DoNotUse::MapEntry(CameraControlResponse_CurrentSettingsEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : CameraControlResponse_CurrentSettingsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CameraControlResponse_CurrentSettingsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraControlResponse_CurrentSettingsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraControlResponse_CurrentSettingsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CameraControlResponse_CurrentSettingsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraControlResponse_CurrentSettingsEntry_DoNotUseDefaultTypeInternal _CameraControlResponse_CurrentSettingsEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR CameraControlCommand_ParametersEntry_DoNotUse::CameraControlCommand_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : CameraControlCommand_ParametersEntry_DoNotUse::MapEntry(CameraControlCommand_ParametersEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : CameraControlCommand_ParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CameraControlCommand_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraControlCommand_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraControlCommand_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CameraControlCommand_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraControlCommand_ParametersEntry_DoNotUseDefaultTypeInternal _CameraControlCommand_ParametersEntry_DoNotUse_default_instance_;

inline constexpr WaypointAction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parameters_{},
        duration_{nullptr},
        type_{static_cast< ::agricultural::robot::navigation::v1::WaypointActionType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR WaypointAction::WaypointAction(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WaypointAction_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WaypointActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WaypointActionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WaypointActionDefaultTypeInternal() {}
  union {
    WaypointAction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WaypointActionDefaultTypeInternal _WaypointAction_default_instance_;

inline constexpr VideoStreamOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        overlays_{},
        _overlays_cached_byte_size_{0},
        resolution_{nullptr},
        format_{static_cast< ::agricultural::robot::navigation::v1::VideoFormat >(0)},
        framerate_{0u},
        quality_{static_cast< ::agricultural::robot::navigation::v1::VideoQuality >(0)},
        enable_compression_{false} {}

template <typename>
PROTOBUF_CONSTEXPR VideoStreamOptions::VideoStreamOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(VideoStreamOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VideoStreamOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VideoStreamOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VideoStreamOptionsDefaultTypeInternal() {}
  union {
    VideoStreamOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VideoStreamOptionsDefaultTypeInternal _VideoStreamOptions_default_instance_;

inline constexpr Twist::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        linear_{nullptr},
        angular_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Twist::Twist(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Twist_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TwistDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TwistDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TwistDefaultTypeInternal() {}
  union {
    Twist _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TwistDefaultTypeInternal _Twist_default_instance_;

inline constexpr SafetyViolation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        detected_at_{nullptr},
        severity_{0},
        type_{static_cast< ::agricultural::robot::navigation::v1::SafetyViolationType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR SafetyViolation::SafetyViolation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SafetyViolation_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SafetyViolationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SafetyViolationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SafetyViolationDefaultTypeInternal() {}
  union {
    SafetyViolation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SafetyViolationDefaultTypeInternal _SafetyViolation_default_instance_;

inline constexpr Rectangle::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        min_{nullptr},
        max_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Rectangle::Rectangle(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Rectangle_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RectangleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RectangleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RectangleDefaultTypeInternal() {}
  union {
    Rectangle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RectangleDefaultTypeInternal _Rectangle_default_instance_;

inline constexpr Pose::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_{nullptr},
        orientation_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Pose::Pose(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Pose_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PoseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PoseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PoseDefaultTypeInternal() {}
  union {
    Pose _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PoseDefaultTypeInternal _Pose_default_instance_;

inline constexpr NavigationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        goal_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{nullptr},
        success_{false},
        result_{static_cast< ::agricultural::robot::navigation::v1::NavigationResult >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR NavigationResponse::NavigationResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NavigationResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NavigationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NavigationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NavigationResponseDefaultTypeInternal() {}
  union {
    NavigationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NavigationResponseDefaultTypeInternal _NavigationResponse_default_instance_;

inline constexpr NavigationProgress::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        time_remaining_{nullptr},
        time_elapsed_{nullptr},
        distance_remaining_{0},
        distance_traveled_{0},
        current_waypoint_index_{0u},
        total_waypoints_{0u},
        completion_percentage_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NavigationProgress::NavigationProgress(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NavigationProgress_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NavigationProgressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NavigationProgressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NavigationProgressDefaultTypeInternal() {}
  union {
    NavigationProgress _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NavigationProgressDefaultTypeInternal _NavigationProgress_default_instance_;

inline constexpr NavigationError::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        suggested_actions_{},
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        occurred_at_{nullptr},
        code_{static_cast< ::agricultural::robot::navigation::v1::NavigationErrorCode >(0)},
        recoverable_{false} {}

template <typename>
PROTOBUF_CONSTEXPR NavigationError::NavigationError(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NavigationError_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NavigationErrorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NavigationErrorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NavigationErrorDefaultTypeInternal() {}
  union {
    NavigationError _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NavigationErrorDefaultTypeInternal _NavigationError_default_instance_;

inline constexpr LocalizationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{nullptr},
        success_{false},
        status_{static_cast< ::agricultural::robot::navigation::v1::LocalizationStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR LocalizationResponse::LocalizationResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LocalizationResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LocalizationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocalizationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocalizationResponseDefaultTypeInternal() {}
  union {
    LocalizationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocalizationResponseDefaultTypeInternal _LocalizationResponse_default_instance_;

inline constexpr LocalizationMetrics::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        update_frequency_{nullptr},
        effective_sample_size_{0},
        convergence_rate_{0},
        particle_count_{0u},
        sensor_updates_count_{0u},
        map_match_score_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LocalizationMetrics::LocalizationMetrics(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LocalizationMetrics_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LocalizationMetricsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocalizationMetricsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocalizationMetricsDefaultTypeInternal() {}
  union {
    LocalizationMetrics _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocalizationMetricsDefaultTypeInternal _LocalizationMetrics_default_instance_;

inline constexpr JoystickInput::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        axes_{},
        buttons_{},
        controller_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR JoystickInput::JoystickInput(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(JoystickInput_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct JoystickInputDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JoystickInputDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JoystickInputDefaultTypeInternal() {}
  union {
    JoystickInput _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JoystickInputDefaultTypeInternal _JoystickInput_default_instance_;

inline constexpr CameraInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        supported_formats_{},
        _supported_formats_cached_byte_size_{0},
        camera_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        frame_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resolution_{nullptr},
        intrinsics_{nullptr},
        distortion_{nullptr},
        framerate_{0},
        type_{static_cast< ::agricultural::robot::navigation::v1::CameraType >(0)},
        status_{static_cast< ::agricultural::robot::navigation::v1::CameraStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CameraInfo::CameraInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CameraInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CameraInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraInfoDefaultTypeInternal() {}
  union {
    CameraInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraInfoDefaultTypeInternal _CameraInfo_default_instance_;

inline constexpr CameraControlResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        current_settings_{},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{nullptr},
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CameraControlResponse::CameraControlResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CameraControlResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CameraControlResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraControlResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraControlResponseDefaultTypeInternal() {}
  union {
    CameraControlResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraControlResponseDefaultTypeInternal _CameraControlResponse_default_instance_;

inline constexpr CameraControlCommand::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parameters_{},
        type_{static_cast< ::agricultural::robot::navigation::v1::CameraControlType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CameraControlCommand::CameraControlCommand(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CameraControlCommand_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CameraControlCommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraControlCommandDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraControlCommandDefaultTypeInternal() {}
  union {
    CameraControlCommand _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraControlCommandDefaultTypeInternal _CameraControlCommand_default_instance_;

inline constexpr VelocityResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        safety_violations_{},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        actual_velocity_{nullptr},
        timestamp_{nullptr},
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR VelocityResponse::VelocityResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(VelocityResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VelocityResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VelocityResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VelocityResponseDefaultTypeInternal() {}
  union {
    VelocityResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VelocityResponseDefaultTypeInternal _VelocityResponse_default_instance_;

inline constexpr VelocityCommand::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cmd_vel_{nullptr},
        timeout_{nullptr},
        joystick_input_{nullptr},
        safety_{nullptr},
        control_mode_{static_cast< ::agricultural::robot::navigation::v1::ControlMode >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR VelocityCommand::VelocityCommand(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(VelocityCommand_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VelocityCommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VelocityCommandDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VelocityCommandDefaultTypeInternal() {}
  union {
    VelocityCommand _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VelocityCommandDefaultTypeInternal _VelocityCommand_default_instance_;

inline constexpr TrajectoryPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accelerations_{},
        pose_{nullptr},
        velocity_{nullptr},
        time_from_start_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TrajectoryPoint::TrajectoryPoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TrajectoryPoint_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TrajectoryPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrajectoryPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrajectoryPointDefaultTypeInternal() {}
  union {
    TrajectoryPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrajectoryPointDefaultTypeInternal _TrajectoryPoint_default_instance_;

inline constexpr StreamVideoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        camera_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        options_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StreamVideoRequest::StreamVideoRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(StreamVideoRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StreamVideoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamVideoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamVideoRequestDefaultTypeInternal() {}
  union {
    StreamVideoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamVideoRequestDefaultTypeInternal _StreamVideoRequest_default_instance_;

inline constexpr PoseWithCovariance::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        covariance_{},
        pose_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PoseWithCovariance::PoseWithCovariance(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PoseWithCovariance_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PoseWithCovarianceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PoseWithCovarianceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PoseWithCovarianceDefaultTypeInternal() {}
  union {
    PoseWithCovariance _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PoseWithCovarianceDefaultTypeInternal _PoseWithCovariance_default_instance_;

inline constexpr NavigationStatusUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        progress_{nullptr},
        timestamp_{nullptr},
        error_{nullptr},
        status_{static_cast< ::agricultural::robot::navigation::v1::NavigationStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR NavigationStatusUpdate::NavigationStatusUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NavigationStatusUpdate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NavigationStatusUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NavigationStatusUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NavigationStatusUpdateDefaultTypeInternal() {}
  union {
    NavigationStatusUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NavigationStatusUpdateDefaultTypeInternal _NavigationStatusUpdate_default_instance_;

inline constexpr MapUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        update_region_{nullptr},
        timestamp_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MapUpdate::MapUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MapUpdate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MapUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MapUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MapUpdateDefaultTypeInternal() {}
  union {
    MapUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MapUpdateDefaultTypeInternal _MapUpdate_default_instance_;

inline constexpr MapMetadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        frame_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        map_load_time_{nullptr},
        origin_{nullptr},
        resolution_{0},
        width_{0u},
        height_{0u},
        version_{0u},
        source_{static_cast< ::agricultural::robot::navigation::v1::MapSource >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR MapMetadata::MapMetadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MapMetadata_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MapMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MapMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MapMetadataDefaultTypeInternal() {}
  union {
    MapMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MapMetadataDefaultTypeInternal _MapMetadata_default_instance_;

inline constexpr FrameMetadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        capture_time_{nullptr},
        camera_pose_{nullptr},
        exposure_time_{0},
        gain_{0},
        white_balance_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FrameMetadata::FrameMetadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(FrameMetadata_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FrameMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrameMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrameMetadataDefaultTypeInternal() {}
  union {
    FrameMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrameMetadataDefaultTypeInternal _FrameMetadata_default_instance_;

inline constexpr CameraInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cameras_{},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{nullptr},
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CameraInfoResponse::CameraInfoResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CameraInfoResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CameraInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraInfoResponseDefaultTypeInternal() {}
  union {
    CameraInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraInfoResponseDefaultTypeInternal _CameraInfoResponse_default_instance_;

inline constexpr CameraControlRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        camera_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        command_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CameraControlRequest::CameraControlRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CameraControlRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CameraControlRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraControlRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraControlRequestDefaultTypeInternal() {}
  union {
    CameraControlRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraControlRequestDefaultTypeInternal _CameraControlRequest_default_instance_;

inline constexpr Waypoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        actions_{},
        waypoint_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pose_{nullptr},
        max_duration_at_waypoint_{nullptr},
        type_{static_cast< ::agricultural::robot::navigation::v1::WaypointType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Waypoint::Waypoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Waypoint_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WaypointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WaypointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WaypointDefaultTypeInternal() {}
  union {
    Waypoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WaypointDefaultTypeInternal _Waypoint_default_instance_;

inline constexpr VideoFrame::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        image_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resolution_{nullptr},
        timestamp_{nullptr},
        metadata_{nullptr},
        frame_number_{::uint64_t{0u}},
        format_{static_cast< ::agricultural::robot::navigation::v1::VideoFormat >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR VideoFrame::VideoFrame(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(VideoFrame_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VideoFrameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VideoFrameDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VideoFrameDefaultTypeInternal() {}
  union {
    VideoFrame _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VideoFrameDefaultTypeInternal _VideoFrame_default_instance_;

inline constexpr UpdateMapRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        update_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateMapRequest::UpdateMapRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateMapRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateMapRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateMapRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateMapRequestDefaultTypeInternal() {}
  union {
    UpdateMapRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateMapRequestDefaultTypeInternal _UpdateMapRequest_default_instance_;

inline constexpr TrajectoryCommand::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        points_{},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        trajectory_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        frame_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        options_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TrajectoryCommand::TrajectoryCommand(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TrajectoryCommand_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TrajectoryCommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrajectoryCommandDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrajectoryCommandDefaultTypeInternal() {}
  union {
    TrajectoryCommand _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrajectoryCommandDefaultTypeInternal _TrajectoryCommand_default_instance_;

inline constexpr SetPositionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        frame_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pose_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetPositionRequest::SetPositionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SetPositionRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetPositionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPositionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPositionRequestDefaultTypeInternal() {}
  union {
    SetPositionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPositionRequestDefaultTypeInternal _SetPositionRequest_default_instance_;

inline constexpr PositionUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        frame_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pose_{nullptr},
        velocity_{nullptr},
        timestamp_{nullptr},
        quality_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PositionUpdate::PositionUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PositionUpdate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionUpdateDefaultTypeInternal() {}
  union {
    PositionUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionUpdateDefaultTypeInternal _PositionUpdate_default_instance_;

inline constexpr PositionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pose_{nullptr},
        timestamp_{nullptr},
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PositionResponse::PositionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PositionResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionResponseDefaultTypeInternal() {}
  union {
    PositionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionResponseDefaultTypeInternal _PositionResponse_default_instance_;

inline constexpr OccupancyGridMap::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        encoding_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR OccupancyGridMap::OccupancyGridMap(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OccupancyGridMap_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OccupancyGridMapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OccupancyGridMapDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OccupancyGridMapDefaultTypeInternal() {}
  union {
    OccupancyGridMap _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OccupancyGridMapDefaultTypeInternal _OccupancyGridMap_default_instance_;

inline constexpr LocalizationStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        quality_{nullptr},
        current_pose_{nullptr},
        metrics_{nullptr},
        timestamp_{nullptr},
        status_{static_cast< ::agricultural::robot::navigation::v1::LocalizationStatus >(0)},
        method_{static_cast< ::agricultural::robot::navigation::v1::LocalizationMethod >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR LocalizationStatusResponse::LocalizationStatusResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LocalizationStatusResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LocalizationStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocalizationStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocalizationStatusResponseDefaultTypeInternal() {}
  union {
    LocalizationStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocalizationStatusResponseDefaultTypeInternal _LocalizationStatusResponse_default_instance_;

inline constexpr InitializeLocalizationRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parameters_{},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initial_pose_{nullptr},
        method_{static_cast< ::agricultural::robot::navigation::v1::LocalizationMethod >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR InitializeLocalizationRequest::InitializeLocalizationRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(InitializeLocalizationRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InitializeLocalizationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitializeLocalizationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitializeLocalizationRequestDefaultTypeInternal() {}
  union {
    InitializeLocalizationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitializeLocalizationRequestDefaultTypeInternal _InitializeLocalizationRequest_default_instance_;

inline constexpr SetMapRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        map_data_{nullptr},
        metadata_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetMapRequest::SetMapRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SetMapRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetMapRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetMapRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetMapRequestDefaultTypeInternal() {}
  union {
    SetMapRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetMapRequestDefaultTypeInternal _SetMapRequest_default_instance_;

inline constexpr NavigationGoal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        waypoints_{},
        robot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        goal_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        frame_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_pose_{nullptr},
        options_{nullptr},
        deadline_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NavigationGoal::NavigationGoal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NavigationGoal_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NavigationGoalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NavigationGoalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NavigationGoalDefaultTypeInternal() {}
  union {
    NavigationGoal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NavigationGoalDefaultTypeInternal _NavigationGoal_default_instance_;

inline constexpr MapResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        map_data_{nullptr},
        metadata_{nullptr},
        timestamp_{nullptr},
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR MapResponse::MapResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MapResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MapResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MapResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MapResponseDefaultTypeInternal() {}
  union {
    MapResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MapResponseDefaultTypeInternal _MapResponse_default_instance_;

inline constexpr NavigationStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        errors_{},
        progress_{nullptr},
        current_goal_{nullptr},
        timestamp_{nullptr},
        status_{static_cast< ::agricultural::robot::navigation::v1::NavigationStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR NavigationStatusResponse::NavigationStatusResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NavigationStatusResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NavigationStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NavigationStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NavigationStatusResponseDefaultTypeInternal() {}
  union {
    NavigationStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NavigationStatusResponseDefaultTypeInternal _NavigationStatusResponse_default_instance_;
}  // namespace v1
}  // namespace navigation
}  // namespace robot
}  // namespace agricultural
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[23];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto = nullptr;
const ::uint32_t
    TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::GetMapRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::GetMapRequest, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::GetMapRequest, _impl_.map_type_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::GetMapRequest, _impl_.frame_id_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SetMapRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SetMapRequest, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SetMapRequest, _impl_.map_data_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SetMapRequest, _impl_.metadata_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::UpdateMapRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::UpdateMapRequest, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::UpdateMapRequest, _impl_.update_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::ClearMapRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::ClearMapRequest, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::ClearMapRequest, _impl_.map_type_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapResponse, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapResponse, _impl_.map_data_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapResponse, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapResponse, _impl_.timestamp_),
        4,
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::OccupancyGridMap, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::OccupancyGridMap, _impl_.info_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::OccupancyGridMap, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::OccupancyGridMap, _impl_.encoding_),
        2,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapMetadata, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapMetadata, _impl_.map_load_time_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapMetadata, _impl_.resolution_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapMetadata, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapMetadata, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapMetadata, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapMetadata, _impl_.frame_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapMetadata, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapMetadata, _impl_.source_),
        1,
        3,
        4,
        5,
        2,
        0,
        6,
        7,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapUpdate, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapUpdate, _impl_.update_region_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapUpdate, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::MapUpdate, _impl_.timestamp_),
        1,
        0,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Rectangle, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Rectangle, _impl_.min_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Rectangle, _impl_.max_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::GetPositionRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::GetPositionRequest, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::GetPositionRequest, _impl_.frame_id_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SetPositionRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SetPositionRequest, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SetPositionRequest, _impl_.pose_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SetPositionRequest, _impl_.frame_id_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::StreamPositionRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::StreamPositionRequest, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::StreamPositionRequest, _impl_.frame_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::StreamPositionRequest, _impl_.frequency_hz_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::PositionResponse, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::PositionResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::PositionResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::PositionResponse, _impl_.pose_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::PositionResponse, _impl_.timestamp_),
        3,
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::PositionUpdate, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::PositionUpdate, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::PositionUpdate, _impl_.pose_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::PositionUpdate, _impl_.velocity_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::PositionUpdate, _impl_.frame_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::PositionUpdate, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::PositionUpdate, _impl_.quality_),
        0,
        2,
        3,
        1,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Pose, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Pose, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Pose, _impl_.orientation_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::PoseWithCovariance, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::PoseWithCovariance, _impl_.pose_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::PoseWithCovariance, _impl_.covariance_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Point2D, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Point2D, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Point2D, _impl_.y_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Point3D, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Point3D, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Point3D, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Point3D, _impl_.z_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Quaternion, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Quaternion, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Quaternion, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Quaternion, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Quaternion, _impl_.w_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Twist, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Twist, _impl_.linear_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Twist, _impl_.angular_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Vector3, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Vector3, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Vector3, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Vector3, _impl_.z_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VelocityCommand, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VelocityCommand, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VelocityCommand, _impl_.cmd_vel_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VelocityCommand, _impl_.timeout_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VelocityCommand, _impl_.joystick_input_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VelocityCommand, _impl_.safety_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VelocityCommand, _impl_.control_mode_),
        0,
        1,
        2,
        3,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::JoystickInput, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::JoystickInput, _impl_.axes_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::JoystickInput, _impl_.buttons_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::JoystickInput, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::JoystickInput, _impl_.controller_id_),
        ~0u,
        ~0u,
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VelocityResponse, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VelocityResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VelocityResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VelocityResponse, _impl_.actual_velocity_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VelocityResponse, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VelocityResponse, _impl_.safety_violations_),
        3,
        0,
        1,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::StopMovementRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::StopMovementRequest, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::StopMovementRequest, _impl_.stop_type_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SafetyConstraints, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SafetyConstraints, _impl_.max_linear_velocity_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SafetyConstraints, _impl_.max_angular_velocity_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SafetyConstraints, _impl_.max_acceleration_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SafetyConstraints, _impl_.obstacle_avoidance_enabled_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SafetyConstraints, _impl_.safety_margin_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SafetyConstraints, _impl_.forbidden_zones_),
        0,
        1,
        2,
        4,
        3,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SafetyViolation, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SafetyViolation, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SafetyViolation, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SafetyViolation, _impl_.severity_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::SafetyViolation, _impl_.detected_at_),
        3,
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationGoal, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationGoal, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationGoal, _impl_.goal_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationGoal, _impl_.target_pose_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationGoal, _impl_.frame_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationGoal, _impl_.options_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationGoal, _impl_.waypoints_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationGoal, _impl_.deadline_),
        0,
        1,
        3,
        2,
        4,
        ~0u,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::TrajectoryCommand, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::TrajectoryCommand, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::TrajectoryCommand, _impl_.trajectory_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::TrajectoryCommand, _impl_.points_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::TrajectoryCommand, _impl_.options_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::TrajectoryCommand, _impl_.frame_id_),
        0,
        1,
        ~0u,
        3,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Waypoint, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Waypoint, _impl_.waypoint_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Waypoint, _impl_.pose_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Waypoint, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Waypoint, _impl_.max_duration_at_waypoint_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Waypoint, _impl_.actions_),
        0,
        1,
        3,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::TrajectoryPoint, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::TrajectoryPoint, _impl_.pose_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::TrajectoryPoint, _impl_.velocity_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::TrajectoryPoint, _impl_.time_from_start_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::TrajectoryPoint, _impl_.accelerations_),
        0,
        1,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationOptions, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationOptions, _impl_.planner_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationOptions, _impl_.tolerance_linear_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationOptions, _impl_.tolerance_angular_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationOptions, _impl_.use_obstacle_avoidance_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationOptions, _impl_.avoid_zones_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationOptions, _impl_.behavior_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationOptions, _impl_.max_planning_time_ms_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationOptions, _impl_.max_retries_),
        1,
        0,
        3,
        2,
        ~0u,
        4,
        5,
        6,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::TrajectoryOptions, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::TrajectoryOptions, _impl_.interpolate_path_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::TrajectoryOptions, _impl_.velocity_scaling_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::TrajectoryOptions, _impl_.check_collisions_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::TrajectoryOptions, _impl_.execution_mode_),
        1,
        0,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::WaypointAction_ParametersEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::WaypointAction_ParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::WaypointAction_ParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::WaypointAction, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::WaypointAction, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::WaypointAction, _impl_.duration_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::WaypointAction, _impl_.parameters_),
        1,
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CancelGoalRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CancelGoalRequest, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CancelGoalRequest, _impl_.goal_id_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::GetNavigationStatusRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::GetNavigationStatusRequest, _impl_.robot_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::StreamNavigationStatusRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::StreamNavigationStatusRequest, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::StreamNavigationStatusRequest, _impl_.frequency_hz_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationResponse, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationResponse, _impl_.goal_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationResponse, _impl_.timestamp_),
        3,
        0,
        1,
        4,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationStatusResponse, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationStatusResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationStatusResponse, _impl_.progress_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationStatusResponse, _impl_.current_goal_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationStatusResponse, _impl_.errors_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationStatusResponse, _impl_.timestamp_),
        3,
        0,
        1,
        ~0u,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationStatusUpdate, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationStatusUpdate, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationStatusUpdate, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationStatusUpdate, _impl_.progress_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationStatusUpdate, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationStatusUpdate, _impl_.error_),
        0,
        4,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationProgress, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationProgress, _impl_.distance_remaining_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationProgress, _impl_.distance_traveled_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationProgress, _impl_.time_remaining_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationProgress, _impl_.time_elapsed_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationProgress, _impl_.current_waypoint_index_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationProgress, _impl_.total_waypoints_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationProgress, _impl_.completion_percentage_),
        2,
        3,
        0,
        1,
        4,
        5,
        6,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationError, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationError, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationError, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationError, _impl_.occurred_at_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationError, _impl_.recoverable_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::NavigationError, _impl_.suggested_actions_),
        2,
        0,
        1,
        3,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::GetCameraInfoRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::GetCameraInfoRequest, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::GetCameraInfoRequest, _impl_.camera_id_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::StreamVideoRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::StreamVideoRequest, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::StreamVideoRequest, _impl_.camera_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::StreamVideoRequest, _impl_.options_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraControlRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraControlRequest, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraControlRequest, _impl_.camera_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraControlRequest, _impl_.command_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraInfoResponse, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraInfoResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraInfoResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraInfoResponse, _impl_.cameras_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraInfoResponse, _impl_.timestamp_),
        2,
        0,
        ~0u,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraInfo, _impl_._has_bits_),
        13, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraInfo, _impl_.camera_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraInfo, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraInfo, _impl_.resolution_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraInfo, _impl_.framerate_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraInfo, _impl_.intrinsics_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraInfo, _impl_.distortion_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraInfo, _impl_.frame_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraInfo, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraInfo, _impl_.supported_formats_),
        0,
        1,
        7,
        3,
        6,
        4,
        5,
        2,
        8,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VideoFrame, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VideoFrame, _impl_.camera_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VideoFrame, _impl_.image_data_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VideoFrame, _impl_.format_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VideoFrame, _impl_.resolution_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VideoFrame, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VideoFrame, _impl_.frame_number_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VideoFrame, _impl_.metadata_),
        0,
        1,
        6,
        2,
        3,
        5,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VideoStreamOptions, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VideoStreamOptions, _impl_.format_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VideoStreamOptions, _impl_.resolution_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VideoStreamOptions, _impl_.framerate_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VideoStreamOptions, _impl_.quality_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VideoStreamOptions, _impl_.enable_compression_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::VideoStreamOptions, _impl_.overlays_),
        1,
        0,
        2,
        3,
        4,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraControlCommand_ParametersEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraControlCommand_ParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraControlCommand_ParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraControlCommand, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraControlCommand, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraControlCommand, _impl_.parameters_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraControlResponse_CurrentSettingsEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraControlResponse_CurrentSettingsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraControlResponse_CurrentSettingsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraControlResponse, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraControlResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraControlResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraControlResponse, _impl_.current_settings_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraControlResponse, _impl_.timestamp_),
        2,
        0,
        ~0u,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Resolution, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Resolution, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::Resolution, _impl_.height_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraIntrinsics, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraIntrinsics, _impl_.focal_length_x_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraIntrinsics, _impl_.focal_length_y_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraIntrinsics, _impl_.principal_point_x_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraIntrinsics, _impl_.principal_point_y_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraIntrinsics, _impl_.camera_matrix_),
        0,
        1,
        2,
        3,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraDistortion, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraDistortion, _impl_.model_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::CameraDistortion, _impl_.coefficients_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::FrameMetadata, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::FrameMetadata, _impl_.exposure_time_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::FrameMetadata, _impl_.gain_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::FrameMetadata, _impl_.white_balance_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::FrameMetadata, _impl_.capture_time_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::FrameMetadata, _impl_.camera_pose_),
        2,
        3,
        4,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::GetLocalizationStatusRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::GetLocalizationStatusRequest, _impl_.robot_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::InitializeLocalizationRequest_ParametersEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::InitializeLocalizationRequest_ParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::InitializeLocalizationRequest_ParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::InitializeLocalizationRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::InitializeLocalizationRequest, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::InitializeLocalizationRequest, _impl_.initial_pose_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::InitializeLocalizationRequest, _impl_.method_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::InitializeLocalizationRequest, _impl_.parameters_),
        0,
        1,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::ResetLocalizationRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::ResetLocalizationRequest, _impl_.robot_id_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::ResetLocalizationRequest, _impl_.clear_map_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationStatusResponse, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationStatusResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationStatusResponse, _impl_.quality_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationStatusResponse, _impl_.current_pose_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationStatusResponse, _impl_.method_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationStatusResponse, _impl_.metrics_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationStatusResponse, _impl_.timestamp_),
        4,
        0,
        1,
        5,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationResponse, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationResponse, _impl_.timestamp_),
        2,
        0,
        3,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationQuality, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationQuality, _impl_.confidence_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationQuality, _impl_.position_uncertainty_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationQuality, _impl_.orientation_uncertainty_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationQuality, _impl_.matched_features_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationQuality, _impl_.drift_estimate_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationQuality, _impl_.health_),
        0,
        1,
        2,
        4,
        3,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationMetrics, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationMetrics, _impl_.particle_count_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationMetrics, _impl_.effective_sample_size_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationMetrics, _impl_.convergence_rate_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationMetrics, _impl_.update_frequency_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationMetrics, _impl_.sensor_updates_count_),
        PROTOBUF_FIELD_OFFSET(::agricultural::robot::navigation::v1::LocalizationMetrics, _impl_.map_match_score_),
        3,
        1,
        2,
        0,
        4,
        5,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::agricultural::robot::navigation::v1::GetMapRequest)},
        {9, sizeof(::agricultural::robot::navigation::v1::SetMapRequest)},
        {18, sizeof(::agricultural::robot::navigation::v1::UpdateMapRequest)},
        {25, sizeof(::agricultural::robot::navigation::v1::ClearMapRequest)},
        {32, sizeof(::agricultural::robot::navigation::v1::MapResponse)},
        {45, sizeof(::agricultural::robot::navigation::v1::OccupancyGridMap)},
        {54, sizeof(::agricultural::robot::navigation::v1::MapMetadata)},
        {73, sizeof(::agricultural::robot::navigation::v1::MapUpdate)},
        {82, sizeof(::agricultural::robot::navigation::v1::Rectangle)},
        {89, sizeof(::agricultural::robot::navigation::v1::GetPositionRequest)},
        {96, sizeof(::agricultural::robot::navigation::v1::SetPositionRequest)},
        {105, sizeof(::agricultural::robot::navigation::v1::StreamPositionRequest)},
        {114, sizeof(::agricultural::robot::navigation::v1::PositionResponse)},
        {125, sizeof(::agricultural::robot::navigation::v1::PositionUpdate)},
        {140, sizeof(::agricultural::robot::navigation::v1::Pose)},
        {147, sizeof(::agricultural::robot::navigation::v1::PoseWithCovariance)},
        {154, sizeof(::agricultural::robot::navigation::v1::Point2D)},
        {161, sizeof(::agricultural::robot::navigation::v1::Point3D)},
        {170, sizeof(::agricultural::robot::navigation::v1::Quaternion)},
        {181, sizeof(::agricultural::robot::navigation::v1::Twist)},
        {188, sizeof(::agricultural::robot::navigation::v1::Vector3)},
        {197, sizeof(::agricultural::robot::navigation::v1::VelocityCommand)},
        {212, sizeof(::agricultural::robot::navigation::v1::JoystickInput)},
        {223, sizeof(::agricultural::robot::navigation::v1::VelocityResponse)},
        {236, sizeof(::agricultural::robot::navigation::v1::StopMovementRequest)},
        {243, sizeof(::agricultural::robot::navigation::v1::SafetyConstraints)},
        {258, sizeof(::agricultural::robot::navigation::v1::SafetyViolation)},
        {269, sizeof(::agricultural::robot::navigation::v1::NavigationGoal)},
        {286, sizeof(::agricultural::robot::navigation::v1::TrajectoryCommand)},
        {299, sizeof(::agricultural::robot::navigation::v1::Waypoint)},
        {312, sizeof(::agricultural::robot::navigation::v1::TrajectoryPoint)},
        {323, sizeof(::agricultural::robot::navigation::v1::NavigationOptions)},
        {342, sizeof(::agricultural::robot::navigation::v1::TrajectoryOptions)},
        {353, sizeof(::agricultural::robot::navigation::v1::WaypointAction_ParametersEntry_DoNotUse)},
        {360, sizeof(::agricultural::robot::navigation::v1::WaypointAction)},
        {369, sizeof(::agricultural::robot::navigation::v1::CancelGoalRequest)},
        {376, sizeof(::agricultural::robot::navigation::v1::GetNavigationStatusRequest)},
        {381, sizeof(::agricultural::robot::navigation::v1::StreamNavigationStatusRequest)},
        {388, sizeof(::agricultural::robot::navigation::v1::NavigationResponse)},
        {401, sizeof(::agricultural::robot::navigation::v1::NavigationStatusResponse)},
        {414, sizeof(::agricultural::robot::navigation::v1::NavigationStatusUpdate)},
        {427, sizeof(::agricultural::robot::navigation::v1::NavigationProgress)},
        {444, sizeof(::agricultural::robot::navigation::v1::NavigationError)},
        {457, sizeof(::agricultural::robot::navigation::v1::GetCameraInfoRequest)},
        {464, sizeof(::agricultural::robot::navigation::v1::StreamVideoRequest)},
        {473, sizeof(::agricultural::robot::navigation::v1::CameraControlRequest)},
        {482, sizeof(::agricultural::robot::navigation::v1::CameraInfoResponse)},
        {493, sizeof(::agricultural::robot::navigation::v1::CameraInfo)},
        {516, sizeof(::agricultural::robot::navigation::v1::VideoFrame)},
        {533, sizeof(::agricultural::robot::navigation::v1::VideoStreamOptions)},
        {548, sizeof(::agricultural::robot::navigation::v1::CameraControlCommand_ParametersEntry_DoNotUse)},
        {555, sizeof(::agricultural::robot::navigation::v1::CameraControlCommand)},
        {562, sizeof(::agricultural::robot::navigation::v1::CameraControlResponse_CurrentSettingsEntry_DoNotUse)},
        {569, sizeof(::agricultural::robot::navigation::v1::CameraControlResponse)},
        {580, sizeof(::agricultural::robot::navigation::v1::Resolution)},
        {587, sizeof(::agricultural::robot::navigation::v1::CameraIntrinsics)},
        {600, sizeof(::agricultural::robot::navigation::v1::CameraDistortion)},
        {607, sizeof(::agricultural::robot::navigation::v1::FrameMetadata)},
        {620, sizeof(::agricultural::robot::navigation::v1::GetLocalizationStatusRequest)},
        {625, sizeof(::agricultural::robot::navigation::v1::InitializeLocalizationRequest_ParametersEntry_DoNotUse)},
        {632, sizeof(::agricultural::robot::navigation::v1::InitializeLocalizationRequest)},
        {643, sizeof(::agricultural::robot::navigation::v1::ResetLocalizationRequest)},
        {650, sizeof(::agricultural::robot::navigation::v1::LocalizationStatusResponse)},
        {665, sizeof(::agricultural::robot::navigation::v1::LocalizationResponse)},
        {676, sizeof(::agricultural::robot::navigation::v1::LocalizationQuality)},
        {691, sizeof(::agricultural::robot::navigation::v1::LocalizationMetrics)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::agricultural::robot::navigation::v1::_GetMapRequest_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_SetMapRequest_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_UpdateMapRequest_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_ClearMapRequest_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_MapResponse_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_OccupancyGridMap_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_MapMetadata_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_MapUpdate_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_Rectangle_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_GetPositionRequest_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_SetPositionRequest_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_StreamPositionRequest_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_PositionResponse_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_PositionUpdate_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_Pose_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_PoseWithCovariance_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_Point2D_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_Point3D_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_Quaternion_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_Twist_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_Vector3_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_VelocityCommand_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_JoystickInput_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_VelocityResponse_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_StopMovementRequest_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_SafetyConstraints_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_SafetyViolation_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_NavigationGoal_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_TrajectoryCommand_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_Waypoint_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_TrajectoryPoint_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_NavigationOptions_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_TrajectoryOptions_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_WaypointAction_ParametersEntry_DoNotUse_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_WaypointAction_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_CancelGoalRequest_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_GetNavigationStatusRequest_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_StreamNavigationStatusRequest_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_NavigationResponse_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_NavigationStatusResponse_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_NavigationStatusUpdate_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_NavigationProgress_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_NavigationError_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_GetCameraInfoRequest_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_StreamVideoRequest_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_CameraControlRequest_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_CameraInfoResponse_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_CameraInfo_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_VideoFrame_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_VideoStreamOptions_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_CameraControlCommand_ParametersEntry_DoNotUse_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_CameraControlCommand_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_CameraControlResponse_CurrentSettingsEntry_DoNotUse_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_CameraControlResponse_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_Resolution_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_CameraIntrinsics_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_CameraDistortion_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_FrameMetadata_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_GetLocalizationStatusRequest_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_InitializeLocalizationRequest_ParametersEntry_DoNotUse_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_InitializeLocalizationRequest_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_ResetLocalizationRequest_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_LocalizationStatusResponse_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_LocalizationResponse_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_LocalizationQuality_default_instance_._instance,
    &::agricultural::robot::navigation::v1::_LocalizationMetrics_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n-proto/robot/navigation/robot-navigatio"
    "n.proto\022 agricultural.robot.navigation.v"
    "1\032\037google/protobuf/timestamp.proto\032\036goog"
    "le/protobuf/duration.proto\032\033google/proto"
    "buf/empty.proto\"\235\001\n\rGetMapRequest\022\031\n\010rob"
    "ot_id\030\001 \001(\tR\007robotId\022D\n\010map_type\030\002 \001(\0162)"
    ".agricultural.robot.navigation.v1.MapTyp"
    "eR\007mapType\022\036\n\010frame_id\030\003 \001(\tH\000R\007frameId\210"
    "\001\001B\013\n\t_frame_id\"\304\001\n\rSetMapRequest\022\031\n\010rob"
    "ot_id\030\001 \001(\tR\007robotId\022M\n\010map_data\030\002 \001(\01322"
    ".agricultural.robot.navigation.v1.Occupa"
    "ncyGridMapR\007mapData\022I\n\010metadata\030\003 \001(\0132-."
    "agricultural.robot.navigation.v1.MapMeta"
    "dataR\010metadata\"r\n\020UpdateMapRequest\022\031\n\010ro"
    "bot_id\030\001 \001(\tR\007robotId\022C\n\006update\030\002 \001(\0132+."
    "agricultural.robot.navigation.v1.MapUpda"
    "teR\006update\"r\n\017ClearMapRequest\022\031\n\010robot_i"
    "d\030\001 \001(\tR\007robotId\022D\n\010map_type\030\002 \001(\0162).agr"
    "icultural.robot.navigation.v1.MapTypeR\007m"
    "apType\"\271\002\n\013MapResponse\022\030\n\007success\030\001 \001(\010R"
    "\007success\022\030\n\007message\030\002 \001(\tR\007message\022R\n\010ma"
    "p_data\030\003 \001(\01322.agricultural.robot.naviga"
    "tion.v1.OccupancyGridMapH\000R\007mapData\210\001\001\022N"
    "\n\010metadata\030\004 \001(\0132-.agricultural.robot.na"
    "vigation.v1.MapMetadataH\001R\010metadata\210\001\001\0228"
    "\n\ttimestamp\030\005 \001(\0132\032.google.protobuf.Time"
    "stampR\ttimestampB\013\n\t_map_dataB\013\n\t_metada"
    "ta\"\205\001\n\020OccupancyGridMap\022A\n\004info\030\001 \001(\0132-."
    "agricultural.robot.navigation.v1.MapMeta"
    "dataR\004info\022\022\n\004data\030\002 \001(\014R\004data\022\032\n\010encodi"
    "ng\030\003 \001(\tR\010encoding\"\325\002\n\013MapMetadata\022>\n\rma"
    "p_load_time\030\001 \001(\0132\032.google.protobuf.Time"
    "stampR\013mapLoadTime\022\036\n\nresolution\030\002 \001(\002R\n"
    "resolution\022\024\n\005width\030\003 \001(\rR\005width\022\026\n\006heig"
    "ht\030\004 \001(\rR\006height\022>\n\006origin\030\005 \001(\0132&.agric"
    "ultural.robot.navigation.v1.PoseR\006origin"
    "\022\031\n\010frame_id\030\006 \001(\tR\007frameId\022\030\n\007version\030\007"
    " \001(\rR\007version\022C\n\006source\030\010 \001(\0162+.agricult"
    "ural.robot.navigation.v1.MapSourceR\006sour"
    "ce\"\253\001\n\tMapUpdate\022P\n\rupdate_region\030\001 \001(\0132"
    "+.agricultural.robot.navigation.v1.Recta"
    "ngleR\014updateRegion\022\022\n\004data\030\002 \001(\014R\004data\0228"
    "\n\ttimestamp\030\003 \001(\0132\032.google.protobuf.Time"
    "stampR\ttimestamp\"\205\001\n\tRectangle\022;\n\003min\030\001 "
    "\001(\0132).agricultural.robot.navigation.v1.P"
    "oint2DR\003min\022;\n\003max\030\002 \001(\0132).agricultural."
    "robot.navigation.v1.Point2DR\003max\"J\n\022GetP"
    "ositionRequest\022\031\n\010robot_id\030\001 \001(\tR\007robotI"
    "d\022\031\n\010frame_id\030\002 \001(\tR\007frameId\"\224\001\n\022SetPosi"
    "tionRequest\022\031\n\010robot_id\030\001 \001(\tR\007robotId\022H"
    "\n\004pose\030\002 \001(\01324.agricultural.robot.naviga"
    "tion.v1.PoseWithCovarianceR\004pose\022\031\n\010fram"
    "e_id\030\003 \001(\tR\007frameId\"p\n\025StreamPositionReq"
    "uest\022\031\n\010robot_id\030\001 \001(\tR\007robotId\022\031\n\010frame"
    "_id\030\002 \001(\tR\007frameId\022!\n\014frequency_hz\030\003 \001(\r"
    "R\013frequencyHz\"\330\001\n\020PositionResponse\022\030\n\007su"
    "ccess\030\001 \001(\010R\007success\022\030\n\007message\030\002 \001(\tR\007m"
    "essage\022M\n\004pose\030\003 \001(\01324.agricultural.robo"
    "t.navigation.v1.PoseWithCovarianceH\000R\004po"
    "se\210\001\001\0228\n\ttimestamp\030\004 \001(\0132\032.google.protob"
    "uf.TimestampR\ttimestampB\007\n\005_pose\"\340\002\n\016Pos"
    "itionUpdate\022\031\n\010robot_id\030\001 \001(\tR\007robotId\022H"
    "\n\004pose\030\002 \001(\01324.agricultural.robot.naviga"
    "tion.v1.PoseWithCovarianceR\004pose\022C\n\010velo"
    "city\030\003 \001(\0132\'.agricultural.robot.navigati"
    "on.v1.TwistR\010velocity\022\031\n\010frame_id\030\004 \001(\tR"
    "\007frameId\0228\n\ttimestamp\030\005 \001(\0132\032.google.pro"
    "tobuf.TimestampR\ttimestamp\022O\n\007quality\030\006 "
    "\001(\01325.agricultural.robot.navigation.v1.L"
    "ocalizationQualityR\007quality\"\235\001\n\004Pose\022E\n\010"
    "position\030\001 \001(\0132).agricultural.robot.navi"
    "gation.v1.Point3DR\010position\022N\n\013orientati"
    "on\030\002 \001(\0132,.agricultural.robot.navigation"
    ".v1.QuaternionR\013orientation\"p\n\022PoseWithC"
    "ovariance\022:\n\004pose\030\001 \001(\0132&.agricultural.r"
    "obot.navigation.v1.PoseR\004pose\022\036\n\ncovaria"
    "nce\030\002 \003(\001R\ncovariance\"%\n\007Point2D\022\014\n\001x\030\001 "
    "\001(\001R\001x\022\014\n\001y\030\002 \001(\001R\001y\"3\n\007Point3D\022\014\n\001x\030\001 \001"
    "(\001R\001x\022\014\n\001y\030\002 \001(\001R\001y\022\014\n\001z\030\003 \001(\001R\001z\"D\n\nQua"
    "ternion\022\014\n\001x\030\001 \001(\001R\001x\022\014\n\001y\030\002 \001(\001R\001y\022\014\n\001z"
    "\030\003 \001(\001R\001z\022\014\n\001w\030\004 \001(\001R\001w\"\217\001\n\005Twist\022A\n\006lin"
    "ear\030\001 \001(\0132).agricultural.robot.navigatio"
    "n.v1.Vector3R\006linear\022C\n\007angular\030\002 \001(\0132)."
    "agricultural.robot.navigation.v1.Vector3"
    "R\007angular\"3\n\007Vector3\022\014\n\001x\030\001 \001(\001R\001x\022\014\n\001y\030"
    "\002 \001(\001R\001y\022\014\n\001z\030\003 \001(\001R\001z\"\232\003\n\017VelocityComma"
    "nd\022\031\n\010robot_id\030\001 \001(\tR\007robotId\022@\n\007cmd_vel"
    "\030\002 \001(\0132\'.agricultural.robot.navigation.v"
    "1.TwistR\006cmdVel\0223\n\007timeout\030\003 \001(\0132\031.googl"
    "e.protobuf.DurationR\007timeout\022V\n\016joystick"
    "_input\030\004 \001(\0132/.agricultural.robot.naviga"
    "tion.v1.JoystickInputR\rjoystickInput\022K\n\006"
    "safety\030\005 \001(\01323.agricultural.robot.naviga"
    "tion.v1.SafetyConstraintsR\006safety\022P\n\014con"
    "trol_mode\030\006 \001(\0162-.agricultural.robot.nav"
    "igation.v1.ControlModeR\013controlMode\"\234\001\n\r"
    "JoystickInput\022\022\n\004axes\030\001 \003(\002R\004axes\022\030\n\007but"
    "tons\030\002 \003(\010R\007buttons\0228\n\ttimestamp\030\003 \001(\0132\032"
    ".google.protobuf.TimestampR\ttimestamp\022#\n"
    "\rcontroller_id\030\004 \001(\tR\014controllerId\"\262\002\n\020V"
    "elocityResponse\022\030\n\007success\030\001 \001(\010R\007succes"
    "s\022\030\n\007message\030\002 \001(\tR\007message\022P\n\017actual_ve"
    "locity\030\003 \001(\0132\'.agricultural.robot.naviga"
    "tion.v1.TwistR\016actualVelocity\0228\n\ttimesta"
    "mp\030\004 \001(\0132\032.google.protobuf.TimestampR\tti"
    "mestamp\022^\n\021safety_violations\030\005 \003(\01321.agr"
    "icultural.robot.navigation.v1.SafetyViol"
    "ationR\020safetyViolations\"\202\001\n\023StopMovement"
    "Request\022\031\n\010robot_id\030\001 \001(\tR\007robotId\022P\n\tst"
    "op_type\030\002 \001(\01623.agricultural.robot.navig"
    "ation.v1.EmergencyStopTypeR\010stopType\"\254\002\n"
    "\021SafetyConstraints\022.\n\023max_linear_velocit"
    "y\030\001 \001(\001R\021maxLinearVelocity\0220\n\024max_angula"
    "r_velocity\030\002 \001(\001R\022maxAngularVelocity\022)\n\020"
    "max_acceleration\030\003 \001(\001R\017maxAcceleration\022"
    "<\n\032obstacle_avoidance_enabled\030\004 \001(\010R\030obs"
    "tacleAvoidanceEnabled\022#\n\rsafety_margin\030\005"
    " \001(\001R\014safetyMargin\022\'\n\017forbidden_zones\030\006 "
    "\003(\tR\016forbiddenZones\"\327\001\n\017SafetyViolation\022"
    "I\n\004type\030\001 \001(\01625.agricultural.robot.navig"
    "ation.v1.SafetyViolationTypeR\004type\022 \n\013de"
    "scription\030\002 \001(\tR\013description\022\032\n\010severity"
    "\030\003 \001(\001R\010severity\022;\n\013detected_at\030\004 \001(\0132\032."
    "google.protobuf.TimestampR\ndetectedAt\"\207\003"
    "\n\016NavigationGoal\022\031\n\010robot_id\030\001 \001(\tR\007robo"
    "tId\022\027\n\007goal_id\030\002 \001(\tR\006goalId\022U\n\013target_p"
    "ose\030\003 \001(\01324.agricultural.robot.navigatio"
    "n.v1.PoseWithCovarianceR\ntargetPose\022\031\n\010f"
    "rame_id\030\004 \001(\tR\007frameId\022M\n\007options\030\005 \001(\0132"
    "3.agricultural.robot.navigation.v1.Navig"
    "ationOptionsR\007options\022H\n\twaypoints\030\006 \003(\013"
    "2*.agricultural.robot.navigation.v1.Wayp"
    "ointR\twaypoints\0226\n\010deadline\030\007 \001(\0132\032.goog"
    "le.protobuf.TimestampR\010deadline\"\210\002\n\021Traj"
    "ectoryCommand\022\031\n\010robot_id\030\001 \001(\tR\007robotId"
    "\022#\n\rtrajectory_id\030\002 \001(\tR\014trajectoryId\022I\n"
    "\006points\030\003 \003(\01321.agricultural.robot.navig"
    "ation.v1.TrajectoryPointR\006points\022M\n\007opti"
    "ons\030\004 \001(\01323.agricultural.robot.navigatio"
    "n.v1.TrajectoryOptionsR\007options\022\031\n\010frame"
    "_id\030\005 \001(\tR\007frameId\"\331\002\n\010Waypoint\022\037\n\013waypo"
    "int_id\030\001 \001(\tR\nwaypointId\022H\n\004pose\030\002 \001(\01324"
    ".agricultural.robot.navigation.v1.PoseWi"
    "thCovarianceR\004pose\022B\n\004type\030\003 \001(\0162..agric"
    "ultural.robot.navigation.v1.WaypointType"
    "R\004type\022R\n\030max_duration_at_waypoint\030\004 \001(\013"
    "2\031.google.protobuf.DurationR\025maxDuration"
    "AtWaypoint\022J\n\007actions\030\005 \003(\01320.agricultur"
    "al.robot.navigation.v1.WaypointActionR\007a"
    "ctions\"\374\001\n\017TrajectoryPoint\022:\n\004pose\030\001 \001(\013"
    "2&.agricultural.robot.navigation.v1.Pose"
    "R\004pose\022C\n\010velocity\030\002 \001(\0132\'.agricultural."
    "robot.navigation.v1.TwistR\010velocity\022B\n\017t"
    "ime_from_start\030\003 \001(\0132\032.google.protobuf.T"
    "imestampR\rtimeFromStart\022$\n\raccelerations"
    "\030\004 \003(\001R\raccelerations\"\257\003\n\021NavigationOpti"
    "ons\022G\n\007planner\030\001 \001(\0162-.agricultural.robo"
    "t.navigation.v1.PlannerTypeR\007planner\022)\n\020"
    "tolerance_linear\030\002 \001(\001R\017toleranceLinear\022"
    "+\n\021tolerance_angular\030\003 \001(\001R\020toleranceAng"
    "ular\0224\n\026use_obstacle_avoidance\030\004 \001(\010R\024us"
    "eObstacleAvoidance\022\037\n\013avoid_zones\030\005 \003(\tR"
    "\navoidZones\022P\n\010behavior\030\006 \001(\01624.agricult"
    "ural.robot.navigation.v1.NavigationBehav"
    "iorR\010behavior\022/\n\024max_planning_time_ms\030\007 "
    "\001(\rR\021maxPlanningTimeMs\022\037\n\013max_retries\030\010 "
    "\001(\rR\nmaxRetries\"\366\001\n\021TrajectoryOptions\022)\n"
    "\020interpolate_path\030\001 \001(\010R\017interpolatePath"
    "\022)\n\020velocity_scaling\030\002 \001(\001R\017velocityScal"
    "ing\022)\n\020check_collisions\030\003 \001(\010R\017checkColl"
    "isions\022`\n\016execution_mode\030\004 \001(\01629.agricul"
    "tural.robot.navigation.v1.TrajectoryExec"
    "utionModeR\rexecutionMode\"\262\002\n\016WaypointAct"
    "ion\022H\n\004type\030\001 \001(\01624.agricultural.robot.n"
    "avigation.v1.WaypointActionTypeR\004type\0225\n"
    "\010duration\030\002 \001(\0132\031.google.protobuf.Durati"
    "onR\010duration\022`\n\nparameters\030\003 \003(\0132@.agric"
    "ultural.robot.navigation.v1.WaypointActi"
    "on.ParametersEntryR\nparameters\032=\n\017Parame"
    "tersEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001"
    "(\tR\005value:\0028\001\"X\n\021CancelGoalRequest\022\031\n\010ro"
    "bot_id\030\001 \001(\tR\007robotId\022\034\n\007goal_id\030\002 \001(\tH\000"
    "R\006goalId\210\001\001B\n\n\010_goal_id\"7\n\032GetNavigation"
    "StatusRequest\022\031\n\010robot_id\030\001 \001(\tR\007robotId"
    "\"]\n\035StreamNavigationStatusRequest\022\031\n\010rob"
    "ot_id\030\001 \001(\tR\007robotId\022!\n\014frequency_hz\030\002 \001"
    "(\rR\013frequencyHz\"\347\001\n\022NavigationResponse\022\030"
    "\n\007success\030\001 \001(\010R\007success\022\030\n\007message\030\002 \001("
    "\tR\007message\022\027\n\007goal_id\030\003 \001(\tR\006goalId\022J\n\006r"
    "esult\030\004 \001(\01622.agricultural.robot.navigat"
    "ion.v1.NavigationResultR\006result\0228\n\ttimes"
    "tamp\030\005 \001(\0132\032.google.protobuf.TimestampR\t"
    "timestamp\"\250\003\n\030NavigationStatusResponse\022J"
    "\n\006status\030\001 \001(\01622.agricultural.robot.navi"
    "gation.v1.NavigationStatusR\006status\022P\n\010pr"
    "ogress\030\002 \001(\01324.agricultural.robot.naviga"
    "tion.v1.NavigationProgressR\010progress\022X\n\014"
    "current_goal\030\003 \001(\01320.agricultural.robot."
    "navigation.v1.NavigationGoalH\000R\013currentG"
    "oal\210\001\001\022I\n\006errors\030\004 \003(\01321.agricultural.ro"
    "bot.navigation.v1.NavigationErrorR\006error"
    "s\0228\n\ttimestamp\030\005 \001(\0132\032.google.protobuf.T"
    "imestampR\ttimestampB\017\n\r_current_goal\"\343\002\n"
    "\026NavigationStatusUpdate\022\031\n\010robot_id\030\001 \001("
    "\tR\007robotId\022J\n\006status\030\002 \001(\01622.agricultura"
    "l.robot.navigation.v1.NavigationStatusR\006"
    "status\022P\n\010progress\030\003 \001(\01324.agricultural."
    "robot.navigation.v1.NavigationProgressR\010"
    "progress\0228\n\ttimestamp\030\004 \001(\0132\032.google.pro"
    "tobuf.TimestampR\ttimestamp\022L\n\005error\030\005 \001("
    "\01321.agricultural.robot.navigation.v1.Nav"
    "igationErrorH\000R\005error\210\001\001B\010\n\006_error\"\204\003\n\022N"
    "avigationProgress\022-\n\022distance_remaining\030"
    "\001 \001(\001R\021distanceRemaining\022+\n\021distance_tra"
    "veled\030\002 \001(\001R\020distanceTraveled\022@\n\016time_re"
    "maining\030\003 \001(\0132\031.google.protobuf.Duration"
    "R\rtimeRemaining\022<\n\014time_elapsed\030\004 \001(\0132\031."
    "google.protobuf.DurationR\013timeElapsed\0224\n"
    "\026current_waypoint_index\030\005 \001(\rR\024currentWa"
    "ypointIndex\022\'\n\017total_waypoints\030\006 \001(\rR\016to"
    "talWaypoints\0223\n\025completion_percentage\030\007 "
    "\001(\001R\024completionPercentage\"\212\002\n\017Navigation"
    "Error\022I\n\004code\030\001 \001(\01625.agricultural.robot"
    ".navigation.v1.NavigationErrorCodeR\004code"
    "\022 \n\013description\030\002 \001(\tR\013description\022;\n\013oc"
    "curred_at\030\003 \001(\0132\032.google.protobuf.Timest"
    "ampR\noccurredAt\022 \n\013recoverable\030\004 \001(\010R\013re"
    "coverable\022+\n\021suggested_actions\030\005 \003(\tR\020su"
    "ggestedActions\"N\n\024GetCameraInfoRequest\022\031"
    "\n\010robot_id\030\001 \001(\tR\007robotId\022\033\n\tcamera_id\030\002"
    " \001(\tR\010cameraId\"\234\001\n\022StreamVideoRequest\022\031\n"
    "\010robot_id\030\001 \001(\tR\007robotId\022\033\n\tcamera_id\030\002 "
    "\001(\tR\010cameraId\022N\n\007options\030\003 \001(\01324.agricul"
    "tural.robot.navigation.v1.VideoStreamOpt"
    "ionsR\007options\"\240\001\n\024CameraControlRequest\022\031"
    "\n\010robot_id\030\001 \001(\tR\007robotId\022\033\n\tcamera_id\030\002"
    " \001(\tR\010cameraId\022P\n\007command\030\003 \001(\01326.agricu"
    "ltural.robot.navigation.v1.CameraControl"
    "CommandR\007command\"\312\001\n\022CameraInfoResponse\022"
    "\030\n\007success\030\001 \001(\010R\007success\022\030\n\007message\030\002 \001"
    "(\tR\007message\022F\n\007cameras\030\003 \003(\0132,.agricultu"
    "ral.robot.navigation.v1.CameraInfoR\007came"
    "ras\0228\n\ttimestamp\030\004 \001(\0132\032.google.protobuf"
    ".TimestampR\ttimestamp\"\322\004\n\nCameraInfo\022\033\n\t"
    "camera_id\030\001 \001(\tR\010cameraId\022\022\n\004name\030\002 \001(\tR"
    "\004name\022@\n\004type\030\003 \001(\0162,.agricultural.robot"
    ".navigation.v1.CameraTypeR\004type\022L\n\nresol"
    "ution\030\004 \001(\0132,.agricultural.robot.navigat"
    "ion.v1.ResolutionR\nresolution\022\034\n\tframera"
    "te\030\005 \001(\001R\tframerate\022R\n\nintrinsics\030\006 \001(\0132"
    "2.agricultural.robot.navigation.v1.Camer"
    "aIntrinsicsR\nintrinsics\022R\n\ndistortion\030\007 "
    "\001(\01322.agricultural.robot.navigation.v1.C"
    "ameraDistortionR\ndistortion\022\031\n\010frame_id\030"
    "\010 \001(\tR\007frameId\022F\n\006status\030\t \001(\0162..agricul"
    "tural.robot.navigation.v1.CameraStatusR\006"
    "status\022Z\n\021supported_formats\030\n \003(\0162-.agri"
    "cultural.robot.navigation.v1.VideoFormat"
    "R\020supportedFormats\"\207\003\n\nVideoFrame\022\033\n\tcam"
    "era_id\030\001 \001(\tR\010cameraId\022\035\n\nimage_data\030\002 \001"
    "(\014R\timageData\022E\n\006format\030\003 \001(\0162-.agricult"
    "ural.robot.navigation.v1.VideoFormatR\006fo"
    "rmat\022L\n\nresolution\030\004 \001(\0132,.agricultural."
    "robot.navigation.v1.ResolutionR\nresoluti"
    "on\0228\n\ttimestamp\030\005 \001(\0132\032.google.protobuf."
    "TimestampR\ttimestamp\022!\n\014frame_number\030\006 \001"
    "(\004R\013frameNumber\022K\n\010metadata\030\007 \001(\0132/.agri"
    "cultural.robot.navigation.v1.FrameMetada"
    "taR\010metadata\"\213\003\n\022VideoStreamOptions\022E\n\006f"
    "ormat\030\001 \001(\0162-.agricultural.robot.navigat"
    "ion.v1.VideoFormatR\006format\022L\n\nresolution"
    "\030\002 \001(\0132,.agricultural.robot.navigation.v"
    "1.ResolutionR\nresolution\022\034\n\tframerate\030\003 "
    "\001(\rR\tframerate\022H\n\007quality\030\004 \001(\0162..agricu"
    "ltural.robot.navigation.v1.VideoQualityR"
    "\007quality\022-\n\022enable_compression\030\005 \001(\010R\021en"
    "ableCompression\022I\n\010overlays\030\006 \003(\0162-.agri"
    "cultural.robot.navigation.v1.OverlayType"
    "R\010overlays\"\206\002\n\024CameraControlCommand\022G\n\004t"
    "ype\030\001 \001(\01623.agricultural.robot.navigatio"
    "n.v1.CameraControlTypeR\004type\022f\n\nparamete"
    "rs\030\002 \003(\0132F.agricultural.robot.navigation"
    ".v1.CameraControlCommand.ParametersEntry"
    "R\nparameters\032=\n\017ParametersEntry\022\020\n\003key\030\001"
    " \001(\tR\003key\022\024\n\005value\030\002 \001(\001R\005value:\0028\001\"\302\002\n\025"
    "CameraControlResponse\022\030\n\007success\030\001 \001(\010R\007"
    "success\022\030\n\007message\030\002 \001(\tR\007message\022w\n\020cur"
    "rent_settings\030\003 \003(\0132L.agricultural.robot"
    ".navigation.v1.CameraControlResponse.Cur"
    "rentSettingsEntryR\017currentSettings\0228\n\tti"
    "mestamp\030\004 \001(\0132\032.google.protobuf.Timestam"
    "pR\ttimestamp\032B\n\024CurrentSettingsEntry\022\020\n\003"
    "key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\001R\005value:\0028\001"
    "\":\n\nResolution\022\024\n\005width\030\001 \001(\rR\005width\022\026\n\006"
    "height\030\002 \001(\rR\006height\"\333\001\n\020CameraIntrinsic"
    "s\022$\n\016focal_length_x\030\001 \001(\001R\014focalLengthX\022"
    "$\n\016focal_length_y\030\002 \001(\001R\014focalLengthY\022*\n"
    "\021principal_point_x\030\003 \001(\001R\017principalPoint"
    "X\022*\n\021principal_point_y\030\004 \001(\001R\017principalP"
    "ointY\022#\n\rcamera_matrix\030\005 \003(\001R\014cameraMatr"
    "ix\"\177\n\020CameraDistortion\022G\n\005model\030\001 \001(\01621."
    "agricultural.robot.navigation.v1.Distort"
    "ionModelR\005model\022\"\n\014coefficients\030\002 \003(\001R\014c"
    "oefficients\"\212\002\n\rFrameMetadata\022#\n\rexposur"
    "e_time\030\001 \001(\001R\014exposureTime\022\022\n\004gain\030\002 \001(\001"
    "R\004gain\022#\n\rwhite_balance\030\003 \001(\001R\014whiteBala"
    "nce\022=\n\014capture_time\030\004 \001(\0132\032.google.proto"
    "buf.TimestampR\013captureTime\022L\n\013camera_pos"
    "e\030\005 \001(\0132&.agricultural.robot.navigation."
    "v1.PoseH\000R\ncameraPose\210\001\001B\016\n\014_camera_pose"
    "\"9\n\034GetLocalizationStatusRequest\022\031\n\010robo"
    "t_id\030\001 \001(\tR\007robotId\"\247\003\n\035InitializeLocali"
    "zationRequest\022\031\n\010robot_id\030\001 \001(\tR\007robotId"
    "\022\\\n\014initial_pose\030\002 \001(\01324.agricultural.ro"
    "bot.navigation.v1.PoseWithCovarianceH\000R\013"
    "initialPose\210\001\001\022L\n\006method\030\003 \001(\01624.agricul"
    "tural.robot.navigation.v1.LocalizationMe"
    "thodR\006method\022o\n\nparameters\030\004 \003(\0132O.agric"
    "ultural.robot.navigation.v1.InitializeLo"
    "calizationRequest.ParametersEntryR\nparam"
    "eters\032=\n\017ParametersEntry\022\020\n\003key\030\001 \001(\tR\003k"
    "ey\022\024\n\005value\030\002 \001(\tR\005value:\0028\001B\017\n\r_initial"
    "_pose\"R\n\030ResetLocalizationRequest\022\031\n\010rob"
    "ot_id\030\001 \001(\tR\007robotId\022\033\n\tclear_map\030\002 \001(\010R"
    "\010clearMap\"\355\003\n\032LocalizationStatusResponse"
    "\022L\n\006status\030\001 \001(\01624.agricultural.robot.na"
    "vigation.v1.LocalizationStatusR\006status\022O"
    "\n\007quality\030\002 \001(\01325.agricultural.robot.nav"
    "igation.v1.LocalizationQualityR\007quality\022"
    "W\n\014current_pose\030\003 \001(\01324.agricultural.rob"
    "ot.navigation.v1.PoseWithCovarianceR\013cur"
    "rentPose\022L\n\006method\030\004 \001(\01624.agricultural."
    "robot.navigation.v1.LocalizationMethodR\006"
    "method\022O\n\007metrics\030\005 \001(\01325.agricultural.r"
    "obot.navigation.v1.LocalizationMetricsR\007"
    "metrics\0228\n\ttimestamp\030\006 \001(\0132\032.google.prot"
    "obuf.TimestampR\ttimestamp\"\322\001\n\024Localizati"
    "onResponse\022\030\n\007success\030\001 \001(\010R\007success\022\030\n\007"
    "message\030\002 \001(\tR\007message\022L\n\006status\030\003 \001(\01624"
    ".agricultural.robot.navigation.v1.Locali"
    "zationStatusR\006status\0228\n\ttimestamp\030\004 \001(\0132"
    "\032.google.protobuf.TimestampR\ttimestamp\"\301"
    "\002\n\023LocalizationQuality\022\036\n\nconfidence\030\001 \001"
    "(\001R\nconfidence\0221\n\024position_uncertainty\030\002"
    " \001(\001R\023positionUncertainty\0227\n\027orientation"
    "_uncertainty\030\003 \001(\001R\026orientationUncertain"
    "ty\022)\n\020matched_features\030\004 \001(\rR\017matchedFea"
    "tures\022%\n\016drift_estimate\030\005 \001(\001R\rdriftEsti"
    "mate\022L\n\006health\030\006 \001(\01624.agricultural.robo"
    "t.navigation.v1.LocalizationHealthR\006heal"
    "th\"\273\002\n\023LocalizationMetrics\022%\n\016particle_c"
    "ount\030\001 \001(\rR\rparticleCount\0222\n\025effective_s"
    "ample_size\030\002 \001(\001R\023effectiveSampleSize\022)\n"
    "\020convergence_rate\030\003 \001(\001R\017convergenceRate"
    "\022D\n\020update_frequency\030\004 \001(\0132\031.google.prot"
    "obuf.DurationR\017updateFrequency\0220\n\024sensor"
    "_updates_count\030\005 \001(\rR\022sensorUpdatesCount"
    "\022&\n\017map_match_score\030\006 \001(\001R\rmapMatchScore"
    "*\205\001\n\007MapType\022\030\n\024MAP_TYPE_UNSPECIFIED\020\000\022\033"
    "\n\027MAP_TYPE_OCCUPANCY_GRID\020\001\022\024\n\020MAP_TYPE_"
    "COSTMAP\020\002\022\025\n\021MAP_TYPE_SEMANTIC\020\003\022\026\n\022MAP_"
    "TYPE_ELEVATION\020\004*\210\001\n\tMapSource\022\032\n\026MAP_SO"
    "URCE_UNSPECIFIED\020\000\022\023\n\017MAP_SOURCE_SLAM\020\001\022"
    "\027\n\023MAP_SOURCE_UPLOADED\020\002\022\027\n\023MAP_SOURCE_S"
    "URVEYED\020\003\022\030\n\024MAP_SOURCE_SATELLITE\020\004*|\n\013C"
    "ontrolMode\022\034\n\030CONTROL_MODE_UNSPECIFIED\020\000"
    "\022\027\n\023CONTROL_MODE_MANUAL\020\001\022\031\n\025CONTROL_MOD"
    "E_ASSISTED\020\002\022\033\n\027CONTROL_MODE_AUTONOMOUS\020"
    "\003*\222\001\n\021EmergencyStopType\022#\n\037EMERGENCY_STO"
    "P_TYPE_UNSPECIFIED\020\000\022\034\n\030EMERGENCY_STOP_T"
    "YPE_SOFT\020\001\022\034\n\030EMERGENCY_STOP_TYPE_HARD\020\002"
    "\022\034\n\030EMERGENCY_STOP_TYPE_FULL\020\003*\357\001\n\023Safet"
    "yViolationType\022%\n!SAFETY_VIOLATION_TYPE_"
    "UNSPECIFIED\020\000\022%\n!SAFETY_VIOLATION_TYPE_S"
    "PEED_LIMIT\020\001\022\"\n\036SAFETY_VIOLATION_TYPE_OB"
    "STACLE\020\002\022\"\n\036SAFETY_VIOLATION_TYPE_BOUNDA"
    "RY\020\003\022\037\n\033SAFETY_VIOLATION_TYPE_SLOPE\020\004\022!\n"
    "\035SAFETY_VIOLATION_TYPE_BATTERY\020\005*\265\001\n\014Way"
    "pointType\022\035\n\031WAYPOINT_TYPE_UNSPECIFIED\020\000"
    "\022\036\n\032WAYPOINT_TYPE_PASS_THROUGH\020\001\022\026\n\022WAYP"
    "OINT_TYPE_STOP\020\002\022\034\n\030WAYPOINT_TYPE_INSPEC"
    "TION\020\003\022\026\n\022WAYPOINT_TYPE_WORK\020\004\022\030\n\024WAYPOI"
    "NT_TYPE_CHARGE\020\005*\352\001\n\022WaypointActionType\022"
    "$\n WAYPOINT_ACTION_TYPE_UNSPECIFIED\020\000\022\036\n"
    "\032WAYPOINT_ACTION_TYPE_PAUSE\020\001\022&\n\"WAYPOIN"
    "T_ACTION_TYPE_CAPTURE_IMAGE\020\002\022\036\n\032WAYPOIN"
    "T_ACTION_TYPE_SPRAY\020\003\022\035\n\031WAYPOINT_ACTION"
    "_TYPE_SCAN\020\004\022\'\n#WAYPOINT_ACTION_TYPE_COL"
    "LECT_SAMPLE\020\005*\237\001\n\013PlannerType\022\034\n\030PLANNER"
    "_TYPE_UNSPECIFIED\020\000\022\027\n\023PLANNER_TYPE_A_ST"
    "AR\020\001\022\024\n\020PLANNER_TYPE_RRT\020\002\022\024\n\020PLANNER_TY"
    "PE_DWA\020\003\022\024\n\020PLANNER_TYPE_TEB\020\004\022\027\n\023PLANNE"
    "R_TYPE_SPLINE\020\005*\306\001\n\022NavigationBehavior\022#"
    "\n\037NAVIGATION_BEHAVIOR_UNSPECIFIED\020\000\022\036\n\032N"
    "AVIGATION_BEHAVIOR_DIRECT\020\001\022$\n NAVIGATIO"
    "N_BEHAVIOR_CONSERVATIVE\020\002\022\"\n\036NAVIGATION_"
    "BEHAVIOR_AGGRESSIVE\020\003\022!\n\035NAVIGATION_BEHA"
    "VIOR_PRECISION\020\004*\274\001\n\027TrajectoryExecution"
    "Mode\022)\n%TRAJECTORY_EXECUTION_MODE_UNSPEC"
    "IFIED\020\000\022\'\n#TRAJECTORY_EXECUTION_MODE_IMM"
    "EDIATE\020\001\022$\n TRAJECTORY_EXECUTION_MODE_QU"
    "EUED\020\002\022\'\n#TRAJECTORY_EXECUTION_MODE_SCHE"
    "DULED\020\003*\262\002\n\020NavigationStatus\022!\n\035NAVIGATI"
    "ON_STATUS_UNSPECIFIED\020\000\022\032\n\026NAVIGATION_ST"
    "ATUS_IDLE\020\001\022\036\n\032NAVIGATION_STATUS_PLANNIN"
    "G\020\002\022\037\n\033NAVIGATION_STATUS_EXECUTING\020\003\022\034\n\030"
    "NAVIGATION_STATUS_PAUSED\020\004\022\037\n\033NAVIGATION"
    "_STATUS_COMPLETED\020\005\022\034\n\030NAVIGATION_STATUS"
    "_FAILED\020\006\022\037\n\033NAVIGATION_STATUS_CANCELLED"
    "\020\007\022 \n\034NAVIGATION_STATUS_RECOVERING\020\010*\236\002\n"
    "\020NavigationResult\022!\n\035NAVIGATION_RESULT_U"
    "NSPECIFIED\020\000\022\035\n\031NAVIGATION_RESULT_SUCCES"
    "S\020\001\022\035\n\031NAVIGATION_RESULT_TIMEOUT\020\002\022\036\n\032NA"
    "VIGATION_RESULT_OBSTACLE\020\003\022\"\n\036NAVIGATION"
    "_RESULT_INVALID_GOAL\020\004\022%\n!NAVIGATION_RES"
    "ULT_PLANNING_FAILED\020\005\022\037\n\033NAVIGATION_RESU"
    "LT_PREEMPTED\020\006\022\035\n\031NAVIGATION_RESULT_ABOR"
    "TED\020\007*\324\002\n\023NavigationErrorCode\022%\n!NAVIGAT"
    "ION_ERROR_CODE_UNSPECIFIED\020\000\022!\n\035NAVIGATI"
    "ON_ERROR_CODE_NO_PATH\020\001\022!\n\035NAVIGATION_ER"
    "ROR_CODE_TIMEOUT\020\002\022\"\n\036NAVIGATION_ERROR_C"
    "ODE_OBSTACLE\020\003\022+\n\'NAVIGATION_ERROR_CODE_"
    "LOCALIZATION_LOST\020\004\022,\n(NAVIGATION_ERROR_"
    "CODE_CONTROLLER_FAILURE\020\005\022&\n\"NAVIGATION_"
    "ERROR_CODE_INVALID_GOAL\020\006\022)\n%NAVIGATION_"
    "ERROR_CODE_RECOVERY_FAILED\020\007*\274\001\n\nCameraT"
    "ype\022\033\n\027CAMERA_TYPE_UNSPECIFIED\020\000\022\023\n\017CAME"
    "RA_TYPE_RGB\020\001\022\025\n\021CAMERA_TYPE_DEPTH\020\002\022\027\n\023"
    "CAMERA_TYPE_THERMAL\020\003\022\035\n\031CAMERA_TYPE_MUL"
    "TISPECTRAL\020\004\022\026\n\022CAMERA_TYPE_STEREO\020\005\022\025\n\021"
    "CAMERA_TYPE_LIDAR\020\006*\263\001\n\013VideoFormat\022\034\n\030V"
    "IDEO_FORMAT_UNSPECIFIED\020\000\022\026\n\022VIDEO_FORMA"
    "T_MJPEG\020\001\022\025\n\021VIDEO_FORMAT_H264\020\002\022\025\n\021VIDE"
    "O_FORMAT_H265\020\003\022\024\n\020VIDEO_FORMAT_VP8\020\004\022\024\n"
    "\020VIDEO_FORMAT_VP9\020\005\022\024\n\020VIDEO_FORMAT_RAW\020"
    "\006*\217\001\n\014VideoQuality\022\035\n\031VIDEO_QUALITY_UNSP"
    "ECIFIED\020\000\022\025\n\021VIDEO_QUALITY_LOW\020\001\022\030\n\024VIDE"
    "O_QUALITY_MEDIUM\020\002\022\026\n\022VIDEO_QUALITY_HIGH"
    "\020\003\022\027\n\023VIDEO_QUALITY_ULTRA\020\004*\233\001\n\014CameraSt"
    "atus\022\035\n\031CAMERA_STATUS_UNSPECIFIED\020\000\022\030\n\024C"
    "AMERA_STATUS_ACTIVE\020\001\022\032\n\026CAMERA_STATUS_I"
    "NACTIVE\020\002\022\027\n\023CAMERA_STATUS_ERROR\020\003\022\035\n\031CA"
    "MERA_STATUS_CALIBRATING\020\004*\227\002\n\021CameraCont"
    "rolType\022#\n\037CAMERA_CONTROL_TYPE_UNSPECIFI"
    "ED\020\000\022\033\n\027CAMERA_CONTROL_TYPE_PAN\020\001\022\034\n\030CAM"
    "ERA_CONTROL_TYPE_TILT\020\002\022\034\n\030CAMERA_CONTRO"
    "L_TYPE_ZOOM\020\003\022\035\n\031CAMERA_CONTROL_TYPE_FOC"
    "US\020\004\022 \n\034CAMERA_CONTROL_TYPE_EXPOSURE\020\005\022%"
    "\n!CAMERA_CONTROL_TYPE_WHITE_BALANCE\020\006\022\034\n"
    "\030CAMERA_CONTROL_TYPE_GAIN\020\007*\237\001\n\017Distorti"
    "onModel\022 \n\034DISTORTION_MODEL_UNSPECIFIED\020"
    "\000\022\036\n\032DISTORTION_MODEL_PLUMB_BOB\020\001\022(\n$DIS"
    "TORTION_MODEL_RATIONAL_POLYNOMIAL\020\002\022 \n\034D"
    "ISTORTION_MODEL_EQUIDISTANT\020\003*\317\001\n\013Overla"
    "yType\022\034\n\030OVERLAY_TYPE_UNSPECIFIED\020\000\022\032\n\026O"
    "VERLAY_TYPE_CROSSHAIR\020\001\022\025\n\021OVERLAY_TYPE_"
    "GRID\020\002\022\025\n\021OVERLAY_TYPE_POSE\020\003\022 \n\034OVERLAY"
    "_TYPE_NAVIGATION_PATH\020\004\022\032\n\026OVERLAY_TYPE_"
    "OBSTACLES\020\005\022\032\n\026OVERLAY_TYPE_TIMESTAMP\020\006*"
    "\345\001\n\022LocalizationStatus\022#\n\037LOCALIZATION_S"
    "TATUS_UNSPECIFIED\020\000\022$\n LOCALIZATION_STAT"
    "US_INITIALIZING\020\001\022 \n\034LOCALIZATION_STATUS"
    "_TRACKING\020\002\022\034\n\030LOCALIZATION_STATUS_LOST\020"
    "\003\022\"\n\036LOCALIZATION_STATUS_RECOVERING\020\004\022 \n"
    "\034LOCALIZATION_STATUS_DEGRADED\020\005*\203\002\n\022Loca"
    "lizationMethod\022#\n\037LOCALIZATION_METHOD_UN"
    "SPECIFIED\020\000\022\034\n\030LOCALIZATION_METHOD_AMCL\020"
    "\001\022\033\n\027LOCALIZATION_METHOD_EKF\020\002\022\'\n#LOCALI"
    "ZATION_METHOD_PARTICLE_FILTER\020\003\022#\n\037LOCAL"
    "IZATION_METHOD_VISUAL_SLAM\020\004\022\037\n\033LOCALIZA"
    "TION_METHOD_GPS_RTK\020\005\022\036\n\032LOCALIZATION_ME"
    "THOD_HYBRID\020\006*\265\001\n\022LocalizationHealth\022#\n\037"
    "LOCALIZATION_HEALTH_UNSPECIFIED\020\000\022\034\n\030LOC"
    "ALIZATION_HEALTH_GOOD\020\001\022\034\n\030LOCALIZATION_"
    "HEALTH_FAIR\020\002\022\034\n\030LOCALIZATION_HEALTH_POO"
    "R\020\003\022 \n\034LOCALIZATION_HEALTH_CRITICAL\020\0042\344\024"
    "\n\026RobotNavigationService\022h\n\006GetMap\022/.agr"
    "icultural.robot.navigation.v1.GetMapRequ"
    "est\032-.agricultural.robot.navigation.v1.M"
    "apResponse\022h\n\006SetMap\022/.agricultural.robo"
    "t.navigation.v1.SetMapRequest\032-.agricult"
    "ural.robot.navigation.v1.MapResponse\022n\n\t"
    "UpdateMap\0222.agricultural.robot.navigatio"
    "n.v1.UpdateMapRequest\032-.agricultural.rob"
    "ot.navigation.v1.MapResponse\022U\n\010ClearMap"
    "\0221.agricultural.robot.navigation.v1.Clea"
    "rMapRequest\032\026.google.protobuf.Empty\022w\n\013G"
    "etPosition\0224.agricultural.robot.navigati"
    "on.v1.GetPositionRequest\0322.agricultural."
    "robot.navigation.v1.PositionResponse\022w\n\013"
    "SetPosition\0224.agricultural.robot.navigat"
    "ion.v1.SetPositionRequest\0322.agricultural"
    ".robot.navigation.v1.PositionResponse\022}\n"
    "\016StreamPosition\0227.agricultural.robot.nav"
    "igation.v1.StreamPositionRequest\0320.agric"
    "ultural.robot.navigation.v1.PositionUpda"
    "te0\001\022|\n\023SendVelocityCommand\0221.agricultur"
    "al.robot.navigation.v1.VelocityCommand\0322"
    ".agricultural.robot.navigation.v1.Veloci"
    "tyResponse\022\203\001\n\026StreamVelocityCommands\0221."
    "agricultural.robot.navigation.v1.Velocit"
    "yCommand\0322.agricultural.robot.navigation"
    ".v1.VelocityResponse(\0010\001\022y\n\014StopMovement"
    "\0225.agricultural.robot.navigation.v1.Stop"
    "MovementRequest\0322.agricultural.robot.nav"
    "igation.v1.VelocityResponse\022r\n\010SendGoal\022"
    "0.agricultural.robot.navigation.v1.Navig"
    "ationGoal\0324.agricultural.robot.navigatio"
    "n.v1.NavigationResponse\022{\n\016SendTrajector"
    "y\0223.agricultural.robot.navigation.v1.Tra"
    "jectoryCommand\0324.agricultural.robot.navi"
    "gation.v1.NavigationResponse\022w\n\nCancelGo"
    "al\0223.agricultural.robot.navigation.v1.Ca"
    "ncelGoalRequest\0324.agricultural.robot.nav"
    "igation.v1.NavigationResponse\022\217\001\n\023GetNav"
    "igationStatus\022<.agricultural.robot.navig"
    "ation.v1.GetNavigationStatusRequest\032:.ag"
    "ricultural.robot.navigation.v1.Navigatio"
    "nStatusResponse\022\225\001\n\026StreamNavigationStat"
    "us\022\?.agricultural.robot.navigation.v1.St"
    "reamNavigationStatusRequest\0328.agricultur"
    "al.robot.navigation.v1.NavigationStatusU"
    "pdate0\001\022}\n\rGetCameraInfo\0226.agricultural."
    "robot.navigation.v1.GetCameraInfoRequest"
    "\0324.agricultural.robot.navigation.v1.Came"
    "raInfoResponse\022s\n\013StreamVideo\0224.agricult"
    "ural.robot.navigation.v1.StreamVideoRequ"
    "est\032,.agricultural.robot.navigation.v1.V"
    "ideoFrame0\001\022\200\001\n\rControlCamera\0226.agricult"
    "ural.robot.navigation.v1.CameraControlRe"
    "quest\0327.agricultural.robot.navigation.v1"
    ".CameraControlResponse\022\225\001\n\025GetLocalizati"
    "onStatus\022>.agricultural.robot.navigation"
    ".v1.GetLocalizationStatusRequest\032<.agric"
    "ultural.robot.navigation.v1.Localization"
    "StatusResponse\022\221\001\n\026InitializeLocalizatio"
    "n\022\?.agricultural.robot.navigation.v1.Ini"
    "tializeLocalizationRequest\0326.agricultura"
    "l.robot.navigation.v1.LocalizationRespon"
    "se\022\207\001\n\021ResetLocalization\022:.agricultural."
    "robot.navigation.v1.ResetLocalizationReq"
    "uest\0326.agricultural.robot.navigation.v1."
    "LocalizationResponseB\235\001\n/com.valencloud."
    "agricultural.robot.navigation.v1B\024RobotN"
    "avigationProtoP\001ZRgithub.com/valencloud/"
    "agricultural-platform/proto/robot/naviga"
    "tion/v1;navigationv1b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto_deps[3] = {
        &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto = {
    false,
    false,
    21868,
    descriptor_table_protodef_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
    "proto/robot/navigation/robot-navigation.proto",
    &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto_once,
    descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto_deps,
    3,
    66,
    schemas,
    file_default_instances,
    TableStruct_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto::offsets,
    file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
    file_level_service_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
};
namespace agricultural {
namespace robot {
namespace navigation {
namespace v1 {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MapType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MapType_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MapSource_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t MapSource_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ControlMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t ControlMode_internal_data_[] = {
    262144u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL EmergencyStopType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t EmergencyStopType_internal_data_[] = {
    262144u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL SafetyViolationType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t SafetyViolationType_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL WaypointType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t WaypointType_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL WaypointActionType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t WaypointActionType_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL PlannerType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t PlannerType_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL NavigationBehavior_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[8];
}
PROTOBUF_CONSTINIT const uint32_t NavigationBehavior_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL TrajectoryExecutionMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[9];
}
PROTOBUF_CONSTINIT const uint32_t TrajectoryExecutionMode_internal_data_[] = {
    262144u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL NavigationStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[10];
}
PROTOBUF_CONSTINIT const uint32_t NavigationStatus_internal_data_[] = {
    589824u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL NavigationResult_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[11];
}
PROTOBUF_CONSTINIT const uint32_t NavigationResult_internal_data_[] = {
    524288u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL NavigationErrorCode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[12];
}
PROTOBUF_CONSTINIT const uint32_t NavigationErrorCode_internal_data_[] = {
    524288u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CameraType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[13];
}
PROTOBUF_CONSTINIT const uint32_t CameraType_internal_data_[] = {
    458752u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL VideoFormat_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[14];
}
PROTOBUF_CONSTINIT const uint32_t VideoFormat_internal_data_[] = {
    458752u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL VideoQuality_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[15];
}
PROTOBUF_CONSTINIT const uint32_t VideoQuality_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CameraStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[16];
}
PROTOBUF_CONSTINIT const uint32_t CameraStatus_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CameraControlType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[17];
}
PROTOBUF_CONSTINIT const uint32_t CameraControlType_internal_data_[] = {
    524288u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL DistortionModel_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[18];
}
PROTOBUF_CONSTINIT const uint32_t DistortionModel_internal_data_[] = {
    262144u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL OverlayType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[19];
}
PROTOBUF_CONSTINIT const uint32_t OverlayType_internal_data_[] = {
    458752u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL LocalizationStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[20];
}
PROTOBUF_CONSTINIT const uint32_t LocalizationStatus_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL LocalizationMethod_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[21];
}
PROTOBUF_CONSTINIT const uint32_t LocalizationMethod_internal_data_[] = {
    458752u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL LocalizationHealth_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto);
  return file_level_enum_descriptors_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto[22];
}
PROTOBUF_CONSTINIT const uint32_t LocalizationHealth_internal_data_[] = {
    327680u, 0u, };
// ===================================================================

class GetMapRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetMapRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetMapRequest, _impl_._has_bits_);
};

GetMapRequest::GetMapRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetMapRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.GetMapRequest)
}
PROTOBUF_NDEBUG_INLINE GetMapRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::GetMapRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_),
        frame_id_(arena, from.frame_id_) {}

GetMapRequest::GetMapRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetMapRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetMapRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetMapRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.map_type_ = from._impl_.map_type_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.GetMapRequest)
}
PROTOBUF_NDEBUG_INLINE GetMapRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena),
        frame_id_(arena) {}

inline void GetMapRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.map_type_ = {};
}
GetMapRequest::~GetMapRequest() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.GetMapRequest)
  SharedDtor(*this);
}
inline void GetMapRequest::SharedDtor(MessageLite& self) {
  GetMapRequest& this_ = static_cast<GetMapRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  this_._impl_.frame_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetMapRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetMapRequest(arena);
}
constexpr auto GetMapRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetMapRequest),
                                            alignof(GetMapRequest));
}
constexpr auto GetMapRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetMapRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetMapRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetMapRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetMapRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetMapRequest>(), &GetMapRequest::ByteSizeLong,
              &GetMapRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetMapRequest, _impl_._cached_size_),
          false,
      },
      &GetMapRequest::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetMapRequest_class_data_ =
        GetMapRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetMapRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetMapRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetMapRequest_class_data_.tc_table);
  return GetMapRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 71, 2>
GetMapRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetMapRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetMapRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::GetMapRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetMapRequest, _impl_.robot_id_)}},
    // .agricultural.robot.navigation.v1.MapType map_type = 2 [json_name = "mapType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetMapRequest, _impl_.map_type_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(GetMapRequest, _impl_.map_type_)}},
    // optional string frame_id = 3 [json_name = "frameId"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(GetMapRequest, _impl_.frame_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(GetMapRequest, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.MapType map_type = 2 [json_name = "mapType"];
    {PROTOBUF_FIELD_OFFSET(GetMapRequest, _impl_.map_type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional string frame_id = 3 [json_name = "frameId"];
    {PROTOBUF_FIELD_OFFSET(GetMapRequest, _impl_.frame_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\10\0\10\0\0\0\0"
    "agricultural.robot.navigation.v1.GetMapRequest"
    "robot_id"
    "frame_id"
  }},
};
PROTOBUF_NOINLINE void GetMapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.GetMapRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.robot_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.frame_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.map_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetMapRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetMapRequest& this_ = static_cast<const GetMapRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetMapRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetMapRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.GetMapRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.GetMapRequest.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .agricultural.robot.navigation.v1.MapType map_type = 2 [json_name = "mapType"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_map_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_map_type(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string frame_id = 3 [json_name = "frameId"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_frame_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.GetMapRequest.frame_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.GetMapRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetMapRequest::ByteSizeLong(const MessageLite& base) {
  const GetMapRequest& this_ = static_cast<const GetMapRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetMapRequest::ByteSizeLong() const {
  const GetMapRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.GetMapRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // optional string frame_id = 3 [json_name = "frameId"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_frame_id());
    }
    // .agricultural.robot.navigation.v1.MapType map_type = 2 [json_name = "mapType"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_map_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_map_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetMapRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetMapRequest*>(&to_msg);
  auto& from = static_cast<const GetMapRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.GetMapRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_frame_id(from._internal_frame_id());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_map_type() != 0) {
        _this->_impl_.map_type_ = from._impl_.map_type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetMapRequest::CopyFrom(const GetMapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.GetMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetMapRequest::InternalSwap(GetMapRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.frame_id_, &other->_impl_.frame_id_, arena);
  swap(_impl_.map_type_, other->_impl_.map_type_);
}

::google::protobuf::Metadata GetMapRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetMapRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SetMapRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetMapRequest, _impl_._has_bits_);
};

SetMapRequest::SetMapRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SetMapRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.SetMapRequest)
}
PROTOBUF_NDEBUG_INLINE SetMapRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::SetMapRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_) {}

SetMapRequest::SetMapRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SetMapRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SetMapRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetMapRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.map_data_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.map_data_)
                : nullptr;
  _impl_.metadata_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.metadata_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.SetMapRequest)
}
PROTOBUF_NDEBUG_INLINE SetMapRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena) {}

inline void SetMapRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, map_data_),
           0,
           offsetof(Impl_, metadata_) -
               offsetof(Impl_, map_data_) +
               sizeof(Impl_::metadata_));
}
SetMapRequest::~SetMapRequest() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.SetMapRequest)
  SharedDtor(*this);
}
inline void SetMapRequest::SharedDtor(MessageLite& self) {
  SetMapRequest& this_ = static_cast<SetMapRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  delete this_._impl_.map_data_;
  delete this_._impl_.metadata_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SetMapRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SetMapRequest(arena);
}
constexpr auto SetMapRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SetMapRequest),
                                            alignof(SetMapRequest));
}
constexpr auto SetMapRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SetMapRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SetMapRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SetMapRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SetMapRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SetMapRequest>(), &SetMapRequest::ByteSizeLong,
              &SetMapRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SetMapRequest, _impl_._cached_size_),
          false,
      },
      &SetMapRequest::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SetMapRequest_class_data_ =
        SetMapRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SetMapRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SetMapRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SetMapRequest_class_data_.tc_table);
  return SetMapRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 63, 2>
SetMapRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetMapRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SetMapRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::SetMapRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetMapRequest, _impl_.robot_id_)}},
    // .agricultural.robot.navigation.v1.OccupancyGridMap map_data = 2 [json_name = "mapData"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SetMapRequest, _impl_.map_data_)}},
    // .agricultural.robot.navigation.v1.MapMetadata metadata = 3 [json_name = "metadata"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 1, PROTOBUF_FIELD_OFFSET(SetMapRequest, _impl_.metadata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(SetMapRequest, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.OccupancyGridMap map_data = 2 [json_name = "mapData"];
    {PROTOBUF_FIELD_OFFSET(SetMapRequest, _impl_.map_data_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agricultural.robot.navigation.v1.MapMetadata metadata = 3 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(SetMapRequest, _impl_.metadata_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::OccupancyGridMap>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::MapMetadata>()},
  }},
  {{
    "\56\10\0\0\0\0\0\0"
    "agricultural.robot.navigation.v1.SetMapRequest"
    "robot_id"
  }},
};
PROTOBUF_NOINLINE void SetMapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.SetMapRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.robot_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.map_data_ != nullptr);
      _impl_.map_data_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.metadata_ != nullptr);
      _impl_.metadata_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SetMapRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SetMapRequest& this_ = static_cast<const SetMapRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SetMapRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SetMapRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.SetMapRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.SetMapRequest.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.OccupancyGridMap map_data = 2 [json_name = "mapData"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.map_data_, this_._impl_.map_data_->GetCachedSize(), target,
        stream);
  }

  // .agricultural.robot.navigation.v1.MapMetadata metadata = 3 [json_name = "metadata"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.metadata_, this_._impl_.metadata_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.SetMapRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SetMapRequest::ByteSizeLong(const MessageLite& base) {
  const SetMapRequest& this_ = static_cast<const SetMapRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SetMapRequest::ByteSizeLong() const {
  const SetMapRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.SetMapRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // .agricultural.robot.navigation.v1.OccupancyGridMap map_data = 2 [json_name = "mapData"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.map_data_);
    }
    // .agricultural.robot.navigation.v1.MapMetadata metadata = 3 [json_name = "metadata"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.metadata_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SetMapRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetMapRequest*>(&to_msg);
  auto& from = static_cast<const SetMapRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.SetMapRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.map_data_ != nullptr);
      if (_this->_impl_.map_data_ == nullptr) {
        _this->_impl_.map_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.map_data_);
      } else {
        _this->_impl_.map_data_->MergeFrom(*from._impl_.map_data_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.metadata_ != nullptr);
      if (_this->_impl_.metadata_ == nullptr) {
        _this->_impl_.metadata_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.metadata_);
      } else {
        _this->_impl_.metadata_->MergeFrom(*from._impl_.metadata_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetMapRequest::CopyFrom(const SetMapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.SetMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetMapRequest::InternalSwap(SetMapRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetMapRequest, _impl_.metadata_)
      + sizeof(SetMapRequest::_impl_.metadata_)
      - PROTOBUF_FIELD_OFFSET(SetMapRequest, _impl_.map_data_)>(
          reinterpret_cast<char*>(&_impl_.map_data_),
          reinterpret_cast<char*>(&other->_impl_.map_data_));
}

::google::protobuf::Metadata SetMapRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateMapRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateMapRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateMapRequest, _impl_._has_bits_);
};

UpdateMapRequest::UpdateMapRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateMapRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.UpdateMapRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateMapRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::UpdateMapRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_) {}

UpdateMapRequest::UpdateMapRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateMapRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateMapRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateMapRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.update_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.UpdateMapRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateMapRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena) {}

inline void UpdateMapRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.update_ = {};
}
UpdateMapRequest::~UpdateMapRequest() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.UpdateMapRequest)
  SharedDtor(*this);
}
inline void UpdateMapRequest::SharedDtor(MessageLite& self) {
  UpdateMapRequest& this_ = static_cast<UpdateMapRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  delete this_._impl_.update_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateMapRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateMapRequest(arena);
}
constexpr auto UpdateMapRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UpdateMapRequest),
                                            alignof(UpdateMapRequest));
}
constexpr auto UpdateMapRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateMapRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateMapRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateMapRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateMapRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateMapRequest>(), &UpdateMapRequest::ByteSizeLong,
              &UpdateMapRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateMapRequest, _impl_._cached_size_),
          false,
      },
      &UpdateMapRequest::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateMapRequest_class_data_ =
        UpdateMapRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateMapRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateMapRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateMapRequest_class_data_.tc_table);
  return UpdateMapRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 66, 2>
UpdateMapRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateMapRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateMapRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::UpdateMapRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .agricultural.robot.navigation.v1.MapUpdate update = 2 [json_name = "update"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(UpdateMapRequest, _impl_.update_)}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateMapRequest, _impl_.robot_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(UpdateMapRequest, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.MapUpdate update = 2 [json_name = "update"];
    {PROTOBUF_FIELD_OFFSET(UpdateMapRequest, _impl_.update_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::MapUpdate>()},
  }},
  {{
    "\61\10\0\0\0\0\0\0"
    "agricultural.robot.navigation.v1.UpdateMapRequest"
    "robot_id"
  }},
};
PROTOBUF_NOINLINE void UpdateMapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.UpdateMapRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.robot_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.update_ != nullptr);
      _impl_.update_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateMapRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateMapRequest& this_ = static_cast<const UpdateMapRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateMapRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateMapRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.UpdateMapRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.UpdateMapRequest.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.MapUpdate update = 2 [json_name = "update"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.update_, this_._impl_.update_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.UpdateMapRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateMapRequest::ByteSizeLong(const MessageLite& base) {
  const UpdateMapRequest& this_ = static_cast<const UpdateMapRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateMapRequest::ByteSizeLong() const {
  const UpdateMapRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.UpdateMapRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // .agricultural.robot.navigation.v1.MapUpdate update = 2 [json_name = "update"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.update_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateMapRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateMapRequest*>(&to_msg);
  auto& from = static_cast<const UpdateMapRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.UpdateMapRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.update_ != nullptr);
      if (_this->_impl_.update_ == nullptr) {
        _this->_impl_.update_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_);
      } else {
        _this->_impl_.update_->MergeFrom(*from._impl_.update_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateMapRequest::CopyFrom(const UpdateMapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.UpdateMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateMapRequest::InternalSwap(UpdateMapRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  swap(_impl_.update_, other->_impl_.update_);
}

::google::protobuf::Metadata UpdateMapRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ClearMapRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ClearMapRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ClearMapRequest, _impl_._has_bits_);
};

ClearMapRequest::ClearMapRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ClearMapRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.ClearMapRequest)
}
PROTOBUF_NDEBUG_INLINE ClearMapRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::ClearMapRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_) {}

ClearMapRequest::ClearMapRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ClearMapRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ClearMapRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClearMapRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.map_type_ = from._impl_.map_type_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.ClearMapRequest)
}
PROTOBUF_NDEBUG_INLINE ClearMapRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena) {}

inline void ClearMapRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.map_type_ = {};
}
ClearMapRequest::~ClearMapRequest() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.ClearMapRequest)
  SharedDtor(*this);
}
inline void ClearMapRequest::SharedDtor(MessageLite& self) {
  ClearMapRequest& this_ = static_cast<ClearMapRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ClearMapRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ClearMapRequest(arena);
}
constexpr auto ClearMapRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ClearMapRequest),
                                            alignof(ClearMapRequest));
}
constexpr auto ClearMapRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ClearMapRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ClearMapRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ClearMapRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ClearMapRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ClearMapRequest>(), &ClearMapRequest::ByteSizeLong,
              &ClearMapRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ClearMapRequest, _impl_._cached_size_),
          false,
      },
      &ClearMapRequest::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ClearMapRequest_class_data_ =
        ClearMapRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ClearMapRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ClearMapRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ClearMapRequest_class_data_.tc_table);
  return ClearMapRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 65, 2>
ClearMapRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClearMapRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ClearMapRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::ClearMapRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .agricultural.robot.navigation.v1.MapType map_type = 2 [json_name = "mapType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClearMapRequest, _impl_.map_type_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ClearMapRequest, _impl_.map_type_)}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ClearMapRequest, _impl_.robot_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(ClearMapRequest, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.MapType map_type = 2 [json_name = "mapType"];
    {PROTOBUF_FIELD_OFFSET(ClearMapRequest, _impl_.map_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\60\10\0\0\0\0\0\0"
    "agricultural.robot.navigation.v1.ClearMapRequest"
    "robot_id"
  }},
};
PROTOBUF_NOINLINE void ClearMapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.ClearMapRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.robot_id_.ClearNonDefaultToEmpty();
  }
  _impl_.map_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ClearMapRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ClearMapRequest& this_ = static_cast<const ClearMapRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ClearMapRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ClearMapRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.ClearMapRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.ClearMapRequest.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .agricultural.robot.navigation.v1.MapType map_type = 2 [json_name = "mapType"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_map_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_map_type(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.ClearMapRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ClearMapRequest::ByteSizeLong(const MessageLite& base) {
  const ClearMapRequest& this_ = static_cast<const ClearMapRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ClearMapRequest::ByteSizeLong() const {
  const ClearMapRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.ClearMapRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // .agricultural.robot.navigation.v1.MapType map_type = 2 [json_name = "mapType"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_map_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_map_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ClearMapRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClearMapRequest*>(&to_msg);
  auto& from = static_cast<const ClearMapRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.ClearMapRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_map_type() != 0) {
        _this->_impl_.map_type_ = from._impl_.map_type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClearMapRequest::CopyFrom(const ClearMapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.ClearMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClearMapRequest::InternalSwap(ClearMapRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  swap(_impl_.map_type_, other->_impl_.map_type_);
}

::google::protobuf::Metadata ClearMapRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MapResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MapResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MapResponse, _impl_._has_bits_);
};

void MapResponse::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
MapResponse::MapResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MapResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.MapResponse)
}
PROTOBUF_NDEBUG_INLINE MapResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::MapResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_) {}

MapResponse::MapResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MapResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MapResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MapResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.map_data_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.map_data_)
                : nullptr;
  _impl_.metadata_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.metadata_)
                : nullptr;
  _impl_.timestamp_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.MapResponse)
}
PROTOBUF_NDEBUG_INLINE MapResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_(arena) {}

inline void MapResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, map_data_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, map_data_) +
               sizeof(Impl_::success_));
}
MapResponse::~MapResponse() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.MapResponse)
  SharedDtor(*this);
}
inline void MapResponse::SharedDtor(MessageLite& self) {
  MapResponse& this_ = static_cast<MapResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  delete this_._impl_.map_data_;
  delete this_._impl_.metadata_;
  delete this_._impl_.timestamp_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MapResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MapResponse(arena);
}
constexpr auto MapResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MapResponse),
                                            alignof(MapResponse));
}
constexpr auto MapResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MapResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MapResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MapResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MapResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MapResponse>(), &MapResponse::ByteSizeLong,
              &MapResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MapResponse, _impl_._cached_size_),
          false,
      },
      &MapResponse::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MapResponse_class_data_ =
        MapResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MapResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MapResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MapResponse_class_data_.tc_table);
  return MapResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 60, 2>
MapResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MapResponse, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MapResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::MapResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1 [json_name = "success"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MapResponse, _impl_.success_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(MapResponse, _impl_.success_)}},
    // string message = 2 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(MapResponse, _impl_.message_)}},
    // optional .agricultural.robot.navigation.v1.OccupancyGridMap map_data = 3 [json_name = "mapData"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(MapResponse, _impl_.map_data_)}},
    // optional .agricultural.robot.navigation.v1.MapMetadata metadata = 4 [json_name = "metadata"];
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 1, PROTOBUF_FIELD_OFFSET(MapResponse, _impl_.metadata_)}},
    // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 2, PROTOBUF_FIELD_OFFSET(MapResponse, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1 [json_name = "success"];
    {PROTOBUF_FIELD_OFFSET(MapResponse, _impl_.success_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string message = 2 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(MapResponse, _impl_.message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .agricultural.robot.navigation.v1.OccupancyGridMap map_data = 3 [json_name = "mapData"];
    {PROTOBUF_FIELD_OFFSET(MapResponse, _impl_.map_data_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .agricultural.robot.navigation.v1.MapMetadata metadata = 4 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(MapResponse, _impl_.metadata_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(MapResponse, _impl_.timestamp_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::OccupancyGridMap>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::MapMetadata>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
    "\54\0\7\0\0\0\0\0"
    "agricultural.robot.navigation.v1.MapResponse"
    "message"
  }},
};
PROTOBUF_NOINLINE void MapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.MapResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.map_data_ != nullptr);
      _impl_.map_data_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.metadata_ != nullptr);
      _impl_.metadata_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
  }
  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MapResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MapResponse& this_ = static_cast<const MapResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MapResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MapResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.MapResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1 [json_name = "success"];
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_success() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_success(), target);
    }
  }

  // string message = 2 [json_name = "message"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.MapResponse.message");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .agricultural.robot.navigation.v1.OccupancyGridMap map_data = 3 [json_name = "mapData"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.map_data_, this_._impl_.map_data_->GetCachedSize(), target,
        stream);
  }

  // optional .agricultural.robot.navigation.v1.MapMetadata metadata = 4 [json_name = "metadata"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.metadata_, this_._impl_.metadata_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.MapResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MapResponse::ByteSizeLong(const MessageLite& base) {
  const MapResponse& this_ = static_cast<const MapResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MapResponse::ByteSizeLong() const {
  const MapResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.MapResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // string message = 2 [json_name = "message"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // optional .agricultural.robot.navigation.v1.OccupancyGridMap map_data = 3 [json_name = "mapData"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.map_data_);
    }
    // optional .agricultural.robot.navigation.v1.MapMetadata metadata = 4 [json_name = "metadata"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.metadata_);
    }
    // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
    // bool success = 1 [json_name = "success"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_success() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MapResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MapResponse*>(&to_msg);
  auto& from = static_cast<const MapResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.MapResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.map_data_ != nullptr);
      if (_this->_impl_.map_data_ == nullptr) {
        _this->_impl_.map_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.map_data_);
      } else {
        _this->_impl_.map_data_->MergeFrom(*from._impl_.map_data_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.metadata_ != nullptr);
      if (_this->_impl_.metadata_ == nullptr) {
        _this->_impl_.metadata_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.metadata_);
      } else {
        _this->_impl_.metadata_->MergeFrom(*from._impl_.metadata_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_success() != 0) {
        _this->_impl_.success_ = from._impl_.success_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MapResponse::CopyFrom(const MapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.MapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MapResponse::InternalSwap(MapResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MapResponse, _impl_.success_)
      + sizeof(MapResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(MapResponse, _impl_.map_data_)>(
          reinterpret_cast<char*>(&_impl_.map_data_),
          reinterpret_cast<char*>(&other->_impl_.map_data_));
}

::google::protobuf::Metadata MapResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OccupancyGridMap::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OccupancyGridMap>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OccupancyGridMap, _impl_._has_bits_);
};

OccupancyGridMap::OccupancyGridMap(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OccupancyGridMap_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.OccupancyGridMap)
}
PROTOBUF_NDEBUG_INLINE OccupancyGridMap::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::OccupancyGridMap& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        data_(arena, from.data_),
        encoding_(arena, from.encoding_) {}

OccupancyGridMap::OccupancyGridMap(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OccupancyGridMap& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OccupancyGridMap_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OccupancyGridMap* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.info_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.info_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.OccupancyGridMap)
}
PROTOBUF_NDEBUG_INLINE OccupancyGridMap::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        data_(arena),
        encoding_(arena) {}

inline void OccupancyGridMap::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.info_ = {};
}
OccupancyGridMap::~OccupancyGridMap() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.OccupancyGridMap)
  SharedDtor(*this);
}
inline void OccupancyGridMap::SharedDtor(MessageLite& self) {
  OccupancyGridMap& this_ = static_cast<OccupancyGridMap&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.encoding_.Destroy();
  delete this_._impl_.info_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OccupancyGridMap::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OccupancyGridMap(arena);
}
constexpr auto OccupancyGridMap::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OccupancyGridMap),
                                            alignof(OccupancyGridMap));
}
constexpr auto OccupancyGridMap::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OccupancyGridMap_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OccupancyGridMap::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OccupancyGridMap>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OccupancyGridMap::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OccupancyGridMap>(), &OccupancyGridMap::ByteSizeLong,
              &OccupancyGridMap::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OccupancyGridMap, _impl_._cached_size_),
          false,
      },
      &OccupancyGridMap::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OccupancyGridMap_class_data_ =
        OccupancyGridMap::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OccupancyGridMap::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OccupancyGridMap_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OccupancyGridMap_class_data_.tc_table);
  return OccupancyGridMap_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 66, 2>
OccupancyGridMap::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OccupancyGridMap, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OccupancyGridMap_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::OccupancyGridMap>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .agricultural.robot.navigation.v1.MapMetadata info = 1 [json_name = "info"];
    {::_pbi::TcParser::FastMtS1,
     {10, 2, 0, PROTOBUF_FIELD_OFFSET(OccupancyGridMap, _impl_.info_)}},
    // bytes data = 2 [json_name = "data"];
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(OccupancyGridMap, _impl_.data_)}},
    // string encoding = 3 [json_name = "encoding"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(OccupancyGridMap, _impl_.encoding_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agricultural.robot.navigation.v1.MapMetadata info = 1 [json_name = "info"];
    {PROTOBUF_FIELD_OFFSET(OccupancyGridMap, _impl_.info_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes data = 2 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(OccupancyGridMap, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // string encoding = 3 [json_name = "encoding"];
    {PROTOBUF_FIELD_OFFSET(OccupancyGridMap, _impl_.encoding_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::MapMetadata>()},
  }},
  {{
    "\61\0\0\10\0\0\0\0"
    "agricultural.robot.navigation.v1.OccupancyGridMap"
    "encoding"
  }},
};
PROTOBUF_NOINLINE void OccupancyGridMap::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.OccupancyGridMap)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.data_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.encoding_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.info_ != nullptr);
      _impl_.info_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OccupancyGridMap::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OccupancyGridMap& this_ = static_cast<const OccupancyGridMap&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OccupancyGridMap::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OccupancyGridMap& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.OccupancyGridMap)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.MapMetadata info = 1 [json_name = "info"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.info_, this_._impl_.info_->GetCachedSize(), target,
        stream);
  }

  // bytes data = 2 [json_name = "data"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!this_._internal_data().empty()) {
      const ::std::string& _s = this_._internal_data();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // string encoding = 3 [json_name = "encoding"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (!this_._internal_encoding().empty()) {
      const ::std::string& _s = this_._internal_encoding();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.OccupancyGridMap.encoding");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.OccupancyGridMap)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OccupancyGridMap::ByteSizeLong(const MessageLite& base) {
  const OccupancyGridMap& this_ = static_cast<const OccupancyGridMap&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OccupancyGridMap::ByteSizeLong() const {
  const OccupancyGridMap& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.OccupancyGridMap)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // bytes data = 2 [json_name = "data"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_data().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_data());
      }
    }
    // string encoding = 3 [json_name = "encoding"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_encoding().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_encoding());
      }
    }
    // .agricultural.robot.navigation.v1.MapMetadata info = 1 [json_name = "info"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.info_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OccupancyGridMap::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OccupancyGridMap*>(&to_msg);
  auto& from = static_cast<const OccupancyGridMap&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.OccupancyGridMap)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_data().empty()) {
        _this->_internal_set_data(from._internal_data());
      } else {
        if (_this->_impl_.data_.IsDefault()) {
          _this->_internal_set_data("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_encoding().empty()) {
        _this->_internal_set_encoding(from._internal_encoding());
      } else {
        if (_this->_impl_.encoding_.IsDefault()) {
          _this->_internal_set_encoding("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.info_ != nullptr);
      if (_this->_impl_.info_ == nullptr) {
        _this->_impl_.info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.info_);
      } else {
        _this->_impl_.info_->MergeFrom(*from._impl_.info_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OccupancyGridMap::CopyFrom(const OccupancyGridMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.OccupancyGridMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OccupancyGridMap::InternalSwap(OccupancyGridMap* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.encoding_, &other->_impl_.encoding_, arena);
  swap(_impl_.info_, other->_impl_.info_);
}

::google::protobuf::Metadata OccupancyGridMap::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MapMetadata::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MapMetadata>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_._has_bits_);
};

void MapMetadata::clear_map_load_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.map_load_time_ != nullptr) _impl_.map_load_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
MapMetadata::MapMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MapMetadata_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.MapMetadata)
}
PROTOBUF_NDEBUG_INLINE MapMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::MapMetadata& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        frame_id_(arena, from.frame_id_) {}

MapMetadata::MapMetadata(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MapMetadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MapMetadata_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MapMetadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.map_load_time_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.map_load_time_)
                : nullptr;
  _impl_.origin_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, resolution_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, resolution_),
           offsetof(Impl_, source_) -
               offsetof(Impl_, resolution_) +
               sizeof(Impl_::source_));

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.MapMetadata)
}
PROTOBUF_NDEBUG_INLINE MapMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        frame_id_(arena) {}

inline void MapMetadata::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, map_load_time_),
           0,
           offsetof(Impl_, source_) -
               offsetof(Impl_, map_load_time_) +
               sizeof(Impl_::source_));
}
MapMetadata::~MapMetadata() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.MapMetadata)
  SharedDtor(*this);
}
inline void MapMetadata::SharedDtor(MessageLite& self) {
  MapMetadata& this_ = static_cast<MapMetadata&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.frame_id_.Destroy();
  delete this_._impl_.map_load_time_;
  delete this_._impl_.origin_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MapMetadata::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MapMetadata(arena);
}
constexpr auto MapMetadata::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MapMetadata),
                                            alignof(MapMetadata));
}
constexpr auto MapMetadata::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MapMetadata_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MapMetadata::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MapMetadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MapMetadata::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MapMetadata>(), &MapMetadata::ByteSizeLong,
              &MapMetadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_._cached_size_),
          false,
      },
      &MapMetadata::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MapMetadata_class_data_ =
        MapMetadata::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MapMetadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MapMetadata_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MapMetadata_class_data_.tc_table);
  return MapMetadata_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 2, 69, 2>
MapMetadata::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MapMetadata_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::MapMetadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .agricultural.robot.navigation.v1.MapSource source = 8 [json_name = "source"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MapMetadata, _impl_.source_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_.source_)}},
    // .google.protobuf.Timestamp map_load_time = 1 [json_name = "mapLoadTime"];
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_.map_load_time_)}},
    // float resolution = 2 [json_name = "resolution"];
    {::_pbi::TcParser::FastF32S1,
     {21, 3, 0, PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_.resolution_)}},
    // uint32 width = 3 [json_name = "width"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MapMetadata, _impl_.width_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_.width_)}},
    // uint32 height = 4 [json_name = "height"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MapMetadata, _impl_.height_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_.height_)}},
    // .agricultural.robot.navigation.v1.Pose origin = 5 [json_name = "origin"];
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 1, PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_.origin_)}},
    // string frame_id = 6 [json_name = "frameId"];
    {::_pbi::TcParser::FastUS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_.frame_id_)}},
    // uint32 version = 7 [json_name = "version"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MapMetadata, _impl_.version_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_.version_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp map_load_time = 1 [json_name = "mapLoadTime"];
    {PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_.map_load_time_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float resolution = 2 [json_name = "resolution"];
    {PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_.resolution_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // uint32 width = 3 [json_name = "width"];
    {PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_.width_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 height = 4 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_.height_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .agricultural.robot.navigation.v1.Pose origin = 5 [json_name = "origin"];
    {PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_.origin_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string frame_id = 6 [json_name = "frameId"];
    {PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_.frame_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 version = 7 [json_name = "version"];
    {PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_.version_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .agricultural.robot.navigation.v1.MapSource source = 8 [json_name = "source"];
    {PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_.source_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Pose>()},
  }},
  {{
    "\54\0\0\0\0\0\10\0\0\0\0\0\0\0\0\0"
    "agricultural.robot.navigation.v1.MapMetadata"
    "frame_id"
  }},
};
PROTOBUF_NOINLINE void MapMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.MapMetadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.frame_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.map_load_time_ != nullptr);
      _impl_.map_load_time_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000f8u) != 0) {
    ::memset(&_impl_.resolution_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.source_) -
        reinterpret_cast<char*>(&_impl_.resolution_)) + sizeof(_impl_.source_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MapMetadata::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MapMetadata& this_ = static_cast<const MapMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MapMetadata::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MapMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.MapMetadata)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp map_load_time = 1 [json_name = "mapLoadTime"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.map_load_time_, this_._impl_.map_load_time_->GetCachedSize(), target,
        stream);
  }

  // float resolution = 2 [json_name = "resolution"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_resolution()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_resolution(), target);
    }
  }

  // uint32 width = 3 [json_name = "width"];
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (this_._internal_width() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_width(), target);
    }
  }

  // uint32 height = 4 [json_name = "height"];
  if ((cached_has_bits & 0x00000020u) != 0) {
    if (this_._internal_height() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          4, this_._internal_height(), target);
    }
  }

  // .agricultural.robot.navigation.v1.Pose origin = 5 [json_name = "origin"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // string frame_id = 6 [json_name = "frameId"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!this_._internal_frame_id().empty()) {
      const ::std::string& _s = this_._internal_frame_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.MapMetadata.frame_id");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  // uint32 version = 7 [json_name = "version"];
  if ((cached_has_bits & 0x00000040u) != 0) {
    if (this_._internal_version() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          7, this_._internal_version(), target);
    }
  }

  // .agricultural.robot.navigation.v1.MapSource source = 8 [json_name = "source"];
  if ((cached_has_bits & 0x00000080u) != 0) {
    if (this_._internal_source() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          8, this_._internal_source(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.MapMetadata)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MapMetadata::ByteSizeLong(const MessageLite& base) {
  const MapMetadata& this_ = static_cast<const MapMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MapMetadata::ByteSizeLong() const {
  const MapMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.MapMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string frame_id = 6 [json_name = "frameId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_frame_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_frame_id());
      }
    }
    // .google.protobuf.Timestamp map_load_time = 1 [json_name = "mapLoadTime"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.map_load_time_);
    }
    // .agricultural.robot.navigation.v1.Pose origin = 5 [json_name = "origin"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
    // float resolution = 2 [json_name = "resolution"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_resolution()) != 0) {
        total_size += 5;
      }
    }
    // uint32 width = 3 [json_name = "width"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_width() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_width());
      }
    }
    // uint32 height = 4 [json_name = "height"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_height() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_height());
      }
    }
    // uint32 version = 7 [json_name = "version"];
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_version() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_version());
      }
    }
    // .agricultural.robot.navigation.v1.MapSource source = 8 [json_name = "source"];
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_source() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_source());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MapMetadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MapMetadata*>(&to_msg);
  auto& from = static_cast<const MapMetadata&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.MapMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_frame_id().empty()) {
        _this->_internal_set_frame_id(from._internal_frame_id());
      } else {
        if (_this->_impl_.frame_id_.IsDefault()) {
          _this->_internal_set_frame_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.map_load_time_ != nullptr);
      if (_this->_impl_.map_load_time_ == nullptr) {
        _this->_impl_.map_load_time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.map_load_time_);
      } else {
        _this->_impl_.map_load_time_->MergeFrom(*from._impl_.map_load_time_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_resolution()) != 0) {
        _this->_impl_.resolution_ = from._impl_.resolution_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_width() != 0) {
        _this->_impl_.width_ = from._impl_.width_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_height() != 0) {
        _this->_impl_.height_ = from._impl_.height_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_version() != 0) {
        _this->_impl_.version_ = from._impl_.version_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_source() != 0) {
        _this->_impl_.source_ = from._impl_.source_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MapMetadata::CopyFrom(const MapMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.MapMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MapMetadata::InternalSwap(MapMetadata* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.frame_id_, &other->_impl_.frame_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_.source_)
      + sizeof(MapMetadata::_impl_.source_)
      - PROTOBUF_FIELD_OFFSET(MapMetadata, _impl_.map_load_time_)>(
          reinterpret_cast<char*>(&_impl_.map_load_time_),
          reinterpret_cast<char*>(&other->_impl_.map_load_time_));
}

::google::protobuf::Metadata MapMetadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MapUpdate::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MapUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MapUpdate, _impl_._has_bits_);
};

void MapUpdate::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
MapUpdate::MapUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MapUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.MapUpdate)
}
PROTOBUF_NDEBUG_INLINE MapUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::MapUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        data_(arena, from.data_) {}

MapUpdate::MapUpdate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MapUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MapUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MapUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.update_region_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_region_)
                : nullptr;
  _impl_.timestamp_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.MapUpdate)
}
PROTOBUF_NDEBUG_INLINE MapUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        data_(arena) {}

inline void MapUpdate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, update_region_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, update_region_) +
               sizeof(Impl_::timestamp_));
}
MapUpdate::~MapUpdate() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.MapUpdate)
  SharedDtor(*this);
}
inline void MapUpdate::SharedDtor(MessageLite& self) {
  MapUpdate& this_ = static_cast<MapUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  delete this_._impl_.update_region_;
  delete this_._impl_.timestamp_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MapUpdate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MapUpdate(arena);
}
constexpr auto MapUpdate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MapUpdate),
                                            alignof(MapUpdate));
}
constexpr auto MapUpdate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MapUpdate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MapUpdate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MapUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MapUpdate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MapUpdate>(), &MapUpdate::ByteSizeLong,
              &MapUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MapUpdate, _impl_._cached_size_),
          false,
      },
      &MapUpdate::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MapUpdate_class_data_ =
        MapUpdate::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MapUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MapUpdate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MapUpdate_class_data_.tc_table);
  return MapUpdate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
MapUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MapUpdate, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MapUpdate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::MapUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .agricultural.robot.navigation.v1.Rectangle update_region = 1 [json_name = "updateRegion"];
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(MapUpdate, _impl_.update_region_)}},
    // bytes data = 2 [json_name = "data"];
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(MapUpdate, _impl_.data_)}},
    // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 1, PROTOBUF_FIELD_OFFSET(MapUpdate, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agricultural.robot.navigation.v1.Rectangle update_region = 1 [json_name = "updateRegion"];
    {PROTOBUF_FIELD_OFFSET(MapUpdate, _impl_.update_region_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes data = 2 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(MapUpdate, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(MapUpdate, _impl_.timestamp_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Rectangle>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void MapUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.MapUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.data_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.update_region_ != nullptr);
      _impl_.update_region_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MapUpdate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MapUpdate& this_ = static_cast<const MapUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MapUpdate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MapUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.MapUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.Rectangle update_region = 1 [json_name = "updateRegion"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.update_region_, this_._impl_.update_region_->GetCachedSize(), target,
        stream);
  }

  // bytes data = 2 [json_name = "data"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!this_._internal_data().empty()) {
      const ::std::string& _s = this_._internal_data();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.MapUpdate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MapUpdate::ByteSizeLong(const MessageLite& base) {
  const MapUpdate& this_ = static_cast<const MapUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MapUpdate::ByteSizeLong() const {
  const MapUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.MapUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // bytes data = 2 [json_name = "data"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_data().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_data());
      }
    }
    // .agricultural.robot.navigation.v1.Rectangle update_region = 1 [json_name = "updateRegion"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.update_region_);
    }
    // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MapUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MapUpdate*>(&to_msg);
  auto& from = static_cast<const MapUpdate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.MapUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_data().empty()) {
        _this->_internal_set_data(from._internal_data());
      } else {
        if (_this->_impl_.data_.IsDefault()) {
          _this->_internal_set_data("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.update_region_ != nullptr);
      if (_this->_impl_.update_region_ == nullptr) {
        _this->_impl_.update_region_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_region_);
      } else {
        _this->_impl_.update_region_->MergeFrom(*from._impl_.update_region_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MapUpdate::CopyFrom(const MapUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.MapUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MapUpdate::InternalSwap(MapUpdate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MapUpdate, _impl_.timestamp_)
      + sizeof(MapUpdate::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(MapUpdate, _impl_.update_region_)>(
          reinterpret_cast<char*>(&_impl_.update_region_),
          reinterpret_cast<char*>(&other->_impl_.update_region_));
}

::google::protobuf::Metadata MapUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Rectangle::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Rectangle>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Rectangle, _impl_._has_bits_);
};

Rectangle::Rectangle(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Rectangle_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.Rectangle)
}
PROTOBUF_NDEBUG_INLINE Rectangle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::Rectangle& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Rectangle::Rectangle(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Rectangle& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Rectangle_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Rectangle* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.min_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.min_)
                : nullptr;
  _impl_.max_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.max_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.Rectangle)
}
PROTOBUF_NDEBUG_INLINE Rectangle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Rectangle::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_),
           0,
           offsetof(Impl_, max_) -
               offsetof(Impl_, min_) +
               sizeof(Impl_::max_));
}
Rectangle::~Rectangle() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.Rectangle)
  SharedDtor(*this);
}
inline void Rectangle::SharedDtor(MessageLite& self) {
  Rectangle& this_ = static_cast<Rectangle&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.min_;
  delete this_._impl_.max_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Rectangle::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Rectangle(arena);
}
constexpr auto Rectangle::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Rectangle),
                                            alignof(Rectangle));
}
constexpr auto Rectangle::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Rectangle_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Rectangle::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Rectangle>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Rectangle::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Rectangle>(), &Rectangle::ByteSizeLong,
              &Rectangle::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Rectangle, _impl_._cached_size_),
          false,
      },
      &Rectangle::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Rectangle_class_data_ =
        Rectangle::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Rectangle::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Rectangle_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Rectangle_class_data_.tc_table);
  return Rectangle_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
Rectangle::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Rectangle, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Rectangle_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Rectangle>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .agricultural.robot.navigation.v1.Point2D max = 2 [json_name = "max"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Rectangle, _impl_.max_)}},
    // .agricultural.robot.navigation.v1.Point2D min = 1 [json_name = "min"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Rectangle, _impl_.min_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agricultural.robot.navigation.v1.Point2D min = 1 [json_name = "min"];
    {PROTOBUF_FIELD_OFFSET(Rectangle, _impl_.min_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agricultural.robot.navigation.v1.Point2D max = 2 [json_name = "max"];
    {PROTOBUF_FIELD_OFFSET(Rectangle, _impl_.max_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Point2D>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Point2D>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Rectangle::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.Rectangle)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.min_ != nullptr);
      _impl_.min_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.max_ != nullptr);
      _impl_.max_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Rectangle::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Rectangle& this_ = static_cast<const Rectangle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Rectangle::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Rectangle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.Rectangle)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.Point2D min = 1 [json_name = "min"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.min_, this_._impl_.min_->GetCachedSize(), target,
        stream);
  }

  // .agricultural.robot.navigation.v1.Point2D max = 2 [json_name = "max"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.max_, this_._impl_.max_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.Rectangle)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Rectangle::ByteSizeLong(const MessageLite& base) {
  const Rectangle& this_ = static_cast<const Rectangle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Rectangle::ByteSizeLong() const {
  const Rectangle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.Rectangle)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .agricultural.robot.navigation.v1.Point2D min = 1 [json_name = "min"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.min_);
    }
    // .agricultural.robot.navigation.v1.Point2D max = 2 [json_name = "max"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.max_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Rectangle::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Rectangle*>(&to_msg);
  auto& from = static_cast<const Rectangle&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.Rectangle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.min_ != nullptr);
      if (_this->_impl_.min_ == nullptr) {
        _this->_impl_.min_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.min_);
      } else {
        _this->_impl_.min_->MergeFrom(*from._impl_.min_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.max_ != nullptr);
      if (_this->_impl_.max_ == nullptr) {
        _this->_impl_.max_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.max_);
      } else {
        _this->_impl_.max_->MergeFrom(*from._impl_.max_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Rectangle::CopyFrom(const Rectangle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.Rectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Rectangle::InternalSwap(Rectangle* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Rectangle, _impl_.max_)
      + sizeof(Rectangle::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(Rectangle, _impl_.min_)>(
          reinterpret_cast<char*>(&_impl_.min_),
          reinterpret_cast<char*>(&other->_impl_.min_));
}

::google::protobuf::Metadata Rectangle::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetPositionRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetPositionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetPositionRequest, _impl_._has_bits_);
};

GetPositionRequest::GetPositionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetPositionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.GetPositionRequest)
}
PROTOBUF_NDEBUG_INLINE GetPositionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::GetPositionRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_),
        frame_id_(arena, from.frame_id_) {}

GetPositionRequest::GetPositionRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetPositionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetPositionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetPositionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.GetPositionRequest)
}
PROTOBUF_NDEBUG_INLINE GetPositionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena),
        frame_id_(arena) {}

inline void GetPositionRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetPositionRequest::~GetPositionRequest() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.GetPositionRequest)
  SharedDtor(*this);
}
inline void GetPositionRequest::SharedDtor(MessageLite& self) {
  GetPositionRequest& this_ = static_cast<GetPositionRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  this_._impl_.frame_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetPositionRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetPositionRequest(arena);
}
constexpr auto GetPositionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetPositionRequest),
                                            alignof(GetPositionRequest));
}
constexpr auto GetPositionRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetPositionRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetPositionRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetPositionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetPositionRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetPositionRequest>(), &GetPositionRequest::ByteSizeLong,
              &GetPositionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetPositionRequest, _impl_._cached_size_),
          false,
      },
      &GetPositionRequest::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetPositionRequest_class_data_ =
        GetPositionRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetPositionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetPositionRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetPositionRequest_class_data_.tc_table);
  return GetPositionRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 76, 2>
GetPositionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetPositionRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetPositionRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::GetPositionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string frame_id = 2 [json_name = "frameId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GetPositionRequest, _impl_.frame_id_)}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetPositionRequest, _impl_.robot_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(GetPositionRequest, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string frame_id = 2 [json_name = "frameId"];
    {PROTOBUF_FIELD_OFFSET(GetPositionRequest, _impl_.frame_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\63\10\10\0\0\0\0\0"
    "agricultural.robot.navigation.v1.GetPositionRequest"
    "robot_id"
    "frame_id"
  }},
};
PROTOBUF_NOINLINE void GetPositionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.GetPositionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.robot_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.frame_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetPositionRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetPositionRequest& this_ = static_cast<const GetPositionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetPositionRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetPositionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.GetPositionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.GetPositionRequest.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string frame_id = 2 [json_name = "frameId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_frame_id().empty()) {
      const ::std::string& _s = this_._internal_frame_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.GetPositionRequest.frame_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.GetPositionRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetPositionRequest::ByteSizeLong(const MessageLite& base) {
  const GetPositionRequest& this_ = static_cast<const GetPositionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetPositionRequest::ByteSizeLong() const {
  const GetPositionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.GetPositionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // string frame_id = 2 [json_name = "frameId"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_frame_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_frame_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetPositionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetPositionRequest*>(&to_msg);
  auto& from = static_cast<const GetPositionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.GetPositionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_frame_id().empty()) {
        _this->_internal_set_frame_id(from._internal_frame_id());
      } else {
        if (_this->_impl_.frame_id_.IsDefault()) {
          _this->_internal_set_frame_id("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPositionRequest::CopyFrom(const GetPositionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.GetPositionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetPositionRequest::InternalSwap(GetPositionRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.frame_id_, &other->_impl_.frame_id_, arena);
}

::google::protobuf::Metadata GetPositionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetPositionRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SetPositionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetPositionRequest, _impl_._has_bits_);
};

SetPositionRequest::SetPositionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SetPositionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.SetPositionRequest)
}
PROTOBUF_NDEBUG_INLINE SetPositionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::SetPositionRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_),
        frame_id_(arena, from.frame_id_) {}

SetPositionRequest::SetPositionRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SetPositionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SetPositionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetPositionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pose_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pose_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.SetPositionRequest)
}
PROTOBUF_NDEBUG_INLINE SetPositionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena),
        frame_id_(arena) {}

inline void SetPositionRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pose_ = {};
}
SetPositionRequest::~SetPositionRequest() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.SetPositionRequest)
  SharedDtor(*this);
}
inline void SetPositionRequest::SharedDtor(MessageLite& self) {
  SetPositionRequest& this_ = static_cast<SetPositionRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  this_._impl_.frame_id_.Destroy();
  delete this_._impl_.pose_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SetPositionRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SetPositionRequest(arena);
}
constexpr auto SetPositionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SetPositionRequest),
                                            alignof(SetPositionRequest));
}
constexpr auto SetPositionRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SetPositionRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SetPositionRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SetPositionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SetPositionRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SetPositionRequest>(), &SetPositionRequest::ByteSizeLong,
              &SetPositionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SetPositionRequest, _impl_._cached_size_),
          false,
      },
      &SetPositionRequest::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SetPositionRequest_class_data_ =
        SetPositionRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SetPositionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SetPositionRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SetPositionRequest_class_data_.tc_table);
  return SetPositionRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 76, 2>
SetPositionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetPositionRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SetPositionRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::SetPositionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetPositionRequest, _impl_.robot_id_)}},
    // .agricultural.robot.navigation.v1.PoseWithCovariance pose = 2 [json_name = "pose"];
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(SetPositionRequest, _impl_.pose_)}},
    // string frame_id = 3 [json_name = "frameId"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(SetPositionRequest, _impl_.frame_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(SetPositionRequest, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.PoseWithCovariance pose = 2 [json_name = "pose"];
    {PROTOBUF_FIELD_OFFSET(SetPositionRequest, _impl_.pose_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string frame_id = 3 [json_name = "frameId"];
    {PROTOBUF_FIELD_OFFSET(SetPositionRequest, _impl_.frame_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::PoseWithCovariance>()},
  }},
  {{
    "\63\10\0\10\0\0\0\0"
    "agricultural.robot.navigation.v1.SetPositionRequest"
    "robot_id"
    "frame_id"
  }},
};
PROTOBUF_NOINLINE void SetPositionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.SetPositionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.robot_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.frame_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.pose_ != nullptr);
      _impl_.pose_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SetPositionRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SetPositionRequest& this_ = static_cast<const SetPositionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SetPositionRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SetPositionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.SetPositionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.SetPositionRequest.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.PoseWithCovariance pose = 2 [json_name = "pose"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.pose_, this_._impl_.pose_->GetCachedSize(), target,
        stream);
  }

  // string frame_id = 3 [json_name = "frameId"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (!this_._internal_frame_id().empty()) {
      const ::std::string& _s = this_._internal_frame_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.SetPositionRequest.frame_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.SetPositionRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SetPositionRequest::ByteSizeLong(const MessageLite& base) {
  const SetPositionRequest& this_ = static_cast<const SetPositionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SetPositionRequest::ByteSizeLong() const {
  const SetPositionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.SetPositionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // string frame_id = 3 [json_name = "frameId"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_frame_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_frame_id());
      }
    }
    // .agricultural.robot.navigation.v1.PoseWithCovariance pose = 2 [json_name = "pose"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pose_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SetPositionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetPositionRequest*>(&to_msg);
  auto& from = static_cast<const SetPositionRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.SetPositionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_frame_id().empty()) {
        _this->_internal_set_frame_id(from._internal_frame_id());
      } else {
        if (_this->_impl_.frame_id_.IsDefault()) {
          _this->_internal_set_frame_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.pose_ != nullptr);
      if (_this->_impl_.pose_ == nullptr) {
        _this->_impl_.pose_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pose_);
      } else {
        _this->_impl_.pose_->MergeFrom(*from._impl_.pose_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetPositionRequest::CopyFrom(const SetPositionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.SetPositionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetPositionRequest::InternalSwap(SetPositionRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.frame_id_, &other->_impl_.frame_id_, arena);
  swap(_impl_.pose_, other->_impl_.pose_);
}

::google::protobuf::Metadata SetPositionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StreamPositionRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<StreamPositionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StreamPositionRequest, _impl_._has_bits_);
};

StreamPositionRequest::StreamPositionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StreamPositionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.StreamPositionRequest)
}
PROTOBUF_NDEBUG_INLINE StreamPositionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::StreamPositionRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_),
        frame_id_(arena, from.frame_id_) {}

StreamPositionRequest::StreamPositionRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StreamPositionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StreamPositionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StreamPositionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.frequency_hz_ = from._impl_.frequency_hz_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.StreamPositionRequest)
}
PROTOBUF_NDEBUG_INLINE StreamPositionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena),
        frame_id_(arena) {}

inline void StreamPositionRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.frequency_hz_ = {};
}
StreamPositionRequest::~StreamPositionRequest() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.StreamPositionRequest)
  SharedDtor(*this);
}
inline void StreamPositionRequest::SharedDtor(MessageLite& self) {
  StreamPositionRequest& this_ = static_cast<StreamPositionRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  this_._impl_.frame_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL StreamPositionRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StreamPositionRequest(arena);
}
constexpr auto StreamPositionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(StreamPositionRequest),
                                            alignof(StreamPositionRequest));
}
constexpr auto StreamPositionRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StreamPositionRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StreamPositionRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<StreamPositionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StreamPositionRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<StreamPositionRequest>(), &StreamPositionRequest::ByteSizeLong,
              &StreamPositionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StreamPositionRequest, _impl_._cached_size_),
          false,
      },
      &StreamPositionRequest::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull StreamPositionRequest_class_data_ =
        StreamPositionRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
StreamPositionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StreamPositionRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StreamPositionRequest_class_data_.tc_table);
  return StreamPositionRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 79, 2>
StreamPositionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StreamPositionRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    StreamPositionRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::StreamPositionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StreamPositionRequest, _impl_.robot_id_)}},
    // string frame_id = 2 [json_name = "frameId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(StreamPositionRequest, _impl_.frame_id_)}},
    // uint32 frequency_hz = 3 [json_name = "frequencyHz"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StreamPositionRequest, _impl_.frequency_hz_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(StreamPositionRequest, _impl_.frequency_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(StreamPositionRequest, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string frame_id = 2 [json_name = "frameId"];
    {PROTOBUF_FIELD_OFFSET(StreamPositionRequest, _impl_.frame_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 frequency_hz = 3 [json_name = "frequencyHz"];
    {PROTOBUF_FIELD_OFFSET(StreamPositionRequest, _impl_.frequency_hz_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\66\10\10\0\0\0\0\0"
    "agricultural.robot.navigation.v1.StreamPositionRequest"
    "robot_id"
    "frame_id"
  }},
};
PROTOBUF_NOINLINE void StreamPositionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.StreamPositionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.robot_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.frame_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.frequency_hz_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL StreamPositionRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const StreamPositionRequest& this_ = static_cast<const StreamPositionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL StreamPositionRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const StreamPositionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.StreamPositionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.StreamPositionRequest.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string frame_id = 2 [json_name = "frameId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_frame_id().empty()) {
      const ::std::string& _s = this_._internal_frame_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.StreamPositionRequest.frame_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // uint32 frequency_hz = 3 [json_name = "frequencyHz"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_frequency_hz() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_frequency_hz(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.StreamPositionRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StreamPositionRequest::ByteSizeLong(const MessageLite& base) {
  const StreamPositionRequest& this_ = static_cast<const StreamPositionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StreamPositionRequest::ByteSizeLong() const {
  const StreamPositionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.StreamPositionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // string frame_id = 2 [json_name = "frameId"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_frame_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_frame_id());
      }
    }
    // uint32 frequency_hz = 3 [json_name = "frequencyHz"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_frequency_hz() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_frequency_hz());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void StreamPositionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StreamPositionRequest*>(&to_msg);
  auto& from = static_cast<const StreamPositionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.StreamPositionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_frame_id().empty()) {
        _this->_internal_set_frame_id(from._internal_frame_id());
      } else {
        if (_this->_impl_.frame_id_.IsDefault()) {
          _this->_internal_set_frame_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_frequency_hz() != 0) {
        _this->_impl_.frequency_hz_ = from._impl_.frequency_hz_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreamPositionRequest::CopyFrom(const StreamPositionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.StreamPositionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StreamPositionRequest::InternalSwap(StreamPositionRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.frame_id_, &other->_impl_.frame_id_, arena);
  swap(_impl_.frequency_hz_, other->_impl_.frequency_hz_);
}

::google::protobuf::Metadata StreamPositionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PositionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PositionResponse, _impl_._has_bits_);
};

void PositionResponse::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
PositionResponse::PositionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PositionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.PositionResponse)
}
PROTOBUF_NDEBUG_INLINE PositionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::PositionResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_) {}

PositionResponse::PositionResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PositionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PositionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pose_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pose_)
                : nullptr;
  _impl_.timestamp_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.PositionResponse)
}
PROTOBUF_NDEBUG_INLINE PositionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_(arena) {}

inline void PositionResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pose_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, pose_) +
               sizeof(Impl_::success_));
}
PositionResponse::~PositionResponse() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.PositionResponse)
  SharedDtor(*this);
}
inline void PositionResponse::SharedDtor(MessageLite& self) {
  PositionResponse& this_ = static_cast<PositionResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  delete this_._impl_.pose_;
  delete this_._impl_.timestamp_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PositionResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PositionResponse(arena);
}
constexpr auto PositionResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PositionResponse),
                                            alignof(PositionResponse));
}
constexpr auto PositionResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PositionResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PositionResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PositionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PositionResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PositionResponse>(), &PositionResponse::ByteSizeLong,
              &PositionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PositionResponse, _impl_._cached_size_),
          false,
      },
      &PositionResponse::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PositionResponse_class_data_ =
        PositionResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PositionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PositionResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PositionResponse_class_data_.tc_table);
  return PositionResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 65, 2>
PositionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PositionResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PositionResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::PositionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 1, PROTOBUF_FIELD_OFFSET(PositionResponse, _impl_.timestamp_)}},
    // bool success = 1 [json_name = "success"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PositionResponse, _impl_.success_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(PositionResponse, _impl_.success_)}},
    // string message = 2 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(PositionResponse, _impl_.message_)}},
    // optional .agricultural.robot.navigation.v1.PoseWithCovariance pose = 3 [json_name = "pose"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(PositionResponse, _impl_.pose_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1 [json_name = "success"];
    {PROTOBUF_FIELD_OFFSET(PositionResponse, _impl_.success_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string message = 2 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(PositionResponse, _impl_.message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .agricultural.robot.navigation.v1.PoseWithCovariance pose = 3 [json_name = "pose"];
    {PROTOBUF_FIELD_OFFSET(PositionResponse, _impl_.pose_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(PositionResponse, _impl_.timestamp_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::PoseWithCovariance>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
    "\61\0\7\0\0\0\0\0"
    "agricultural.robot.navigation.v1.PositionResponse"
    "message"
  }},
};
PROTOBUF_NOINLINE void PositionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.PositionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.pose_ != nullptr);
      _impl_.pose_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
  }
  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PositionResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PositionResponse& this_ = static_cast<const PositionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PositionResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PositionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.PositionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1 [json_name = "success"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_success() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_success(), target);
    }
  }

  // string message = 2 [json_name = "message"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.PositionResponse.message");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .agricultural.robot.navigation.v1.PoseWithCovariance pose = 3 [json_name = "pose"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.pose_, this_._impl_.pose_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.PositionResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PositionResponse::ByteSizeLong(const MessageLite& base) {
  const PositionResponse& this_ = static_cast<const PositionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PositionResponse::ByteSizeLong() const {
  const PositionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.PositionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string message = 2 [json_name = "message"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // optional .agricultural.robot.navigation.v1.PoseWithCovariance pose = 3 [json_name = "pose"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pose_);
    }
    // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
    // bool success = 1 [json_name = "success"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_success() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PositionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionResponse*>(&to_msg);
  auto& from = static_cast<const PositionResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.PositionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.pose_ != nullptr);
      if (_this->_impl_.pose_ == nullptr) {
        _this->_impl_.pose_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pose_);
      } else {
        _this->_impl_.pose_->MergeFrom(*from._impl_.pose_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_success() != 0) {
        _this->_impl_.success_ = from._impl_.success_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionResponse::CopyFrom(const PositionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.PositionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionResponse::InternalSwap(PositionResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionResponse, _impl_.success_)
      + sizeof(PositionResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(PositionResponse, _impl_.pose_)>(
          reinterpret_cast<char*>(&_impl_.pose_),
          reinterpret_cast<char*>(&other->_impl_.pose_));
}

::google::protobuf::Metadata PositionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionUpdate::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PositionUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PositionUpdate, _impl_._has_bits_);
};

void PositionUpdate::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
PositionUpdate::PositionUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PositionUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.PositionUpdate)
}
PROTOBUF_NDEBUG_INLINE PositionUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::PositionUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_),
        frame_id_(arena, from.frame_id_) {}

PositionUpdate::PositionUpdate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PositionUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PositionUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pose_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pose_)
                : nullptr;
  _impl_.velocity_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.velocity_)
                : nullptr;
  _impl_.timestamp_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;
  _impl_.quality_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.quality_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.PositionUpdate)
}
PROTOBUF_NDEBUG_INLINE PositionUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena),
        frame_id_(arena) {}

inline void PositionUpdate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pose_),
           0,
           offsetof(Impl_, quality_) -
               offsetof(Impl_, pose_) +
               sizeof(Impl_::quality_));
}
PositionUpdate::~PositionUpdate() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.PositionUpdate)
  SharedDtor(*this);
}
inline void PositionUpdate::SharedDtor(MessageLite& self) {
  PositionUpdate& this_ = static_cast<PositionUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  this_._impl_.frame_id_.Destroy();
  delete this_._impl_.pose_;
  delete this_._impl_.velocity_;
  delete this_._impl_.timestamp_;
  delete this_._impl_.quality_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PositionUpdate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PositionUpdate(arena);
}
constexpr auto PositionUpdate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PositionUpdate),
                                            alignof(PositionUpdate));
}
constexpr auto PositionUpdate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PositionUpdate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PositionUpdate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PositionUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PositionUpdate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PositionUpdate>(), &PositionUpdate::ByteSizeLong,
              &PositionUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PositionUpdate, _impl_._cached_size_),
          false,
      },
      &PositionUpdate::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PositionUpdate_class_data_ =
        PositionUpdate::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PositionUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PositionUpdate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PositionUpdate_class_data_.tc_table);
  return PositionUpdate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 72, 2>
PositionUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PositionUpdate, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PositionUpdate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::PositionUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PositionUpdate, _impl_.robot_id_)}},
    // .agricultural.robot.navigation.v1.PoseWithCovariance pose = 2 [json_name = "pose"];
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(PositionUpdate, _impl_.pose_)}},
    // .agricultural.robot.navigation.v1.Twist velocity = 3 [json_name = "velocity"];
    {::_pbi::TcParser::FastMtS1,
     {26, 3, 1, PROTOBUF_FIELD_OFFSET(PositionUpdate, _impl_.velocity_)}},
    // string frame_id = 4 [json_name = "frameId"];
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(PositionUpdate, _impl_.frame_id_)}},
    // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 2, PROTOBUF_FIELD_OFFSET(PositionUpdate, _impl_.timestamp_)}},
    // .agricultural.robot.navigation.v1.LocalizationQuality quality = 6 [json_name = "quality"];
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 3, PROTOBUF_FIELD_OFFSET(PositionUpdate, _impl_.quality_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(PositionUpdate, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.PoseWithCovariance pose = 2 [json_name = "pose"];
    {PROTOBUF_FIELD_OFFSET(PositionUpdate, _impl_.pose_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agricultural.robot.navigation.v1.Twist velocity = 3 [json_name = "velocity"];
    {PROTOBUF_FIELD_OFFSET(PositionUpdate, _impl_.velocity_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string frame_id = 4 [json_name = "frameId"];
    {PROTOBUF_FIELD_OFFSET(PositionUpdate, _impl_.frame_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(PositionUpdate, _impl_.timestamp_), _Internal::kHasBitsOffset + 4, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agricultural.robot.navigation.v1.LocalizationQuality quality = 6 [json_name = "quality"];
    {PROTOBUF_FIELD_OFFSET(PositionUpdate, _impl_.quality_), _Internal::kHasBitsOffset + 5, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::PoseWithCovariance>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Twist>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::LocalizationQuality>()},
  }},
  {{
    "\57\10\0\0\10\0\0\0"
    "agricultural.robot.navigation.v1.PositionUpdate"
    "robot_id"
    "frame_id"
  }},
};
PROTOBUF_NOINLINE void PositionUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.PositionUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.robot_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.frame_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.pose_ != nullptr);
      _impl_.pose_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.velocity_ != nullptr);
      _impl_.velocity_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.quality_ != nullptr);
      _impl_.quality_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PositionUpdate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PositionUpdate& this_ = static_cast<const PositionUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PositionUpdate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PositionUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.PositionUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.PositionUpdate.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.PoseWithCovariance pose = 2 [json_name = "pose"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.pose_, this_._impl_.pose_->GetCachedSize(), target,
        stream);
  }

  // .agricultural.robot.navigation.v1.Twist velocity = 3 [json_name = "velocity"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.velocity_, this_._impl_.velocity_->GetCachedSize(), target,
        stream);
  }

  // string frame_id = 4 [json_name = "frameId"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (!this_._internal_frame_id().empty()) {
      const ::std::string& _s = this_._internal_frame_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.PositionUpdate.frame_id");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  // .agricultural.robot.navigation.v1.LocalizationQuality quality = 6 [json_name = "quality"];
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.quality_, this_._impl_.quality_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.PositionUpdate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PositionUpdate::ByteSizeLong(const MessageLite& base) {
  const PositionUpdate& this_ = static_cast<const PositionUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PositionUpdate::ByteSizeLong() const {
  const PositionUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.PositionUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // string frame_id = 4 [json_name = "frameId"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_frame_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_frame_id());
      }
    }
    // .agricultural.robot.navigation.v1.PoseWithCovariance pose = 2 [json_name = "pose"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pose_);
    }
    // .agricultural.robot.navigation.v1.Twist velocity = 3 [json_name = "velocity"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.velocity_);
    }
    // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
    // .agricultural.robot.navigation.v1.LocalizationQuality quality = 6 [json_name = "quality"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.quality_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PositionUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionUpdate*>(&to_msg);
  auto& from = static_cast<const PositionUpdate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.PositionUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_frame_id().empty()) {
        _this->_internal_set_frame_id(from._internal_frame_id());
      } else {
        if (_this->_impl_.frame_id_.IsDefault()) {
          _this->_internal_set_frame_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.pose_ != nullptr);
      if (_this->_impl_.pose_ == nullptr) {
        _this->_impl_.pose_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pose_);
      } else {
        _this->_impl_.pose_->MergeFrom(*from._impl_.pose_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.velocity_ != nullptr);
      if (_this->_impl_.velocity_ == nullptr) {
        _this->_impl_.velocity_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.velocity_);
      } else {
        _this->_impl_.velocity_->MergeFrom(*from._impl_.velocity_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.quality_ != nullptr);
      if (_this->_impl_.quality_ == nullptr) {
        _this->_impl_.quality_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.quality_);
      } else {
        _this->_impl_.quality_->MergeFrom(*from._impl_.quality_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionUpdate::CopyFrom(const PositionUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.PositionUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionUpdate::InternalSwap(PositionUpdate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.frame_id_, &other->_impl_.frame_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionUpdate, _impl_.quality_)
      + sizeof(PositionUpdate::_impl_.quality_)
      - PROTOBUF_FIELD_OFFSET(PositionUpdate, _impl_.pose_)>(
          reinterpret_cast<char*>(&_impl_.pose_),
          reinterpret_cast<char*>(&other->_impl_.pose_));
}

::google::protobuf::Metadata PositionUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Pose::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Pose>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Pose, _impl_._has_bits_);
};

Pose::Pose(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Pose_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.Pose)
}
PROTOBUF_NDEBUG_INLINE Pose::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::Pose& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Pose::Pose(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Pose& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Pose_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Pose* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_)
                : nullptr;
  _impl_.orientation_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.orientation_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.Pose)
}
PROTOBUF_NDEBUG_INLINE Pose::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Pose::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, orientation_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::orientation_));
}
Pose::~Pose() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.Pose)
  SharedDtor(*this);
}
inline void Pose::SharedDtor(MessageLite& self) {
  Pose& this_ = static_cast<Pose&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.position_;
  delete this_._impl_.orientation_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Pose::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Pose(arena);
}
constexpr auto Pose::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Pose),
                                            alignof(Pose));
}
constexpr auto Pose::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Pose_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Pose::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Pose>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Pose::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Pose>(), &Pose::ByteSizeLong,
              &Pose::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Pose, _impl_._cached_size_),
          false,
      },
      &Pose::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Pose_class_data_ =
        Pose::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Pose::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Pose_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Pose_class_data_.tc_table);
  return Pose_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
Pose::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Pose, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Pose_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Pose>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .agricultural.robot.navigation.v1.Quaternion orientation = 2 [json_name = "orientation"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Pose, _impl_.orientation_)}},
    // .agricultural.robot.navigation.v1.Point3D position = 1 [json_name = "position"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Pose, _impl_.position_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agricultural.robot.navigation.v1.Point3D position = 1 [json_name = "position"];
    {PROTOBUF_FIELD_OFFSET(Pose, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agricultural.robot.navigation.v1.Quaternion orientation = 2 [json_name = "orientation"];
    {PROTOBUF_FIELD_OFFSET(Pose, _impl_.orientation_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Point3D>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Quaternion>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Pose::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.Pose)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.orientation_ != nullptr);
      _impl_.orientation_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Pose::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Pose& this_ = static_cast<const Pose&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Pose::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Pose& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.Pose)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.Point3D position = 1 [json_name = "position"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
        stream);
  }

  // .agricultural.robot.navigation.v1.Quaternion orientation = 2 [json_name = "orientation"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.orientation_, this_._impl_.orientation_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.Pose)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Pose::ByteSizeLong(const MessageLite& base) {
  const Pose& this_ = static_cast<const Pose&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Pose::ByteSizeLong() const {
  const Pose& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.Pose)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .agricultural.robot.navigation.v1.Point3D position = 1 [json_name = "position"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
    }
    // .agricultural.robot.navigation.v1.Quaternion orientation = 2 [json_name = "orientation"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.orientation_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Pose::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Pose*>(&to_msg);
  auto& from = static_cast<const Pose&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.Pose)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.orientation_ != nullptr);
      if (_this->_impl_.orientation_ == nullptr) {
        _this->_impl_.orientation_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.orientation_);
      } else {
        _this->_impl_.orientation_->MergeFrom(*from._impl_.orientation_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Pose::CopyFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Pose::InternalSwap(Pose* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pose, _impl_.orientation_)
      + sizeof(Pose::_impl_.orientation_)
      - PROTOBUF_FIELD_OFFSET(Pose, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata Pose::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PoseWithCovariance::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PoseWithCovariance>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PoseWithCovariance, _impl_._has_bits_);
};

PoseWithCovariance::PoseWithCovariance(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PoseWithCovariance_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.PoseWithCovariance)
}
PROTOBUF_NDEBUG_INLINE PoseWithCovariance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::PoseWithCovariance& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        covariance_{visibility, arena, from.covariance_} {}

PoseWithCovariance::PoseWithCovariance(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PoseWithCovariance& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PoseWithCovariance_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PoseWithCovariance* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pose_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pose_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.PoseWithCovariance)
}
PROTOBUF_NDEBUG_INLINE PoseWithCovariance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        covariance_{visibility, arena} {}

inline void PoseWithCovariance::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pose_ = {};
}
PoseWithCovariance::~PoseWithCovariance() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.PoseWithCovariance)
  SharedDtor(*this);
}
inline void PoseWithCovariance::SharedDtor(MessageLite& self) {
  PoseWithCovariance& this_ = static_cast<PoseWithCovariance&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pose_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PoseWithCovariance::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PoseWithCovariance(arena);
}
constexpr auto PoseWithCovariance::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PoseWithCovariance, _impl_.covariance_) +
          decltype(PoseWithCovariance::_impl_.covariance_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PoseWithCovariance), alignof(PoseWithCovariance), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PoseWithCovariance::PlacementNew_,
                                 sizeof(PoseWithCovariance),
                                 alignof(PoseWithCovariance));
  }
}
constexpr auto PoseWithCovariance::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PoseWithCovariance_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PoseWithCovariance::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PoseWithCovariance>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PoseWithCovariance::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PoseWithCovariance>(), &PoseWithCovariance::ByteSizeLong,
              &PoseWithCovariance::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PoseWithCovariance, _impl_._cached_size_),
          false,
      },
      &PoseWithCovariance::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PoseWithCovariance_class_data_ =
        PoseWithCovariance::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PoseWithCovariance::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PoseWithCovariance_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PoseWithCovariance_class_data_.tc_table);
  return PoseWithCovariance_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
PoseWithCovariance::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PoseWithCovariance, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PoseWithCovariance_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::PoseWithCovariance>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated double covariance = 2 [json_name = "covariance"];
    {::_pbi::TcParser::FastF64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PoseWithCovariance, _impl_.covariance_)}},
    // .agricultural.robot.navigation.v1.Pose pose = 1 [json_name = "pose"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PoseWithCovariance, _impl_.pose_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agricultural.robot.navigation.v1.Pose pose = 1 [json_name = "pose"];
    {PROTOBUF_FIELD_OFFSET(PoseWithCovariance, _impl_.pose_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated double covariance = 2 [json_name = "covariance"];
    {PROTOBUF_FIELD_OFFSET(PoseWithCovariance, _impl_.covariance_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Pose>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void PoseWithCovariance::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.PoseWithCovariance)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.covariance_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.pose_ != nullptr);
    _impl_.pose_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PoseWithCovariance::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PoseWithCovariance& this_ = static_cast<const PoseWithCovariance&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PoseWithCovariance::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PoseWithCovariance& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.PoseWithCovariance)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.Pose pose = 1 [json_name = "pose"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.pose_, this_._impl_.pose_->GetCachedSize(), target,
        stream);
  }

  // repeated double covariance = 2 [json_name = "covariance"];
  if (this_._internal_covariance_size() > 0) {
    target = stream->WriteFixedPacked(2, this_._internal_covariance(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.PoseWithCovariance)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PoseWithCovariance::ByteSizeLong(const MessageLite& base) {
  const PoseWithCovariance& this_ = static_cast<const PoseWithCovariance&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PoseWithCovariance::ByteSizeLong() const {
  const PoseWithCovariance& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.PoseWithCovariance)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated double covariance = 2 [json_name = "covariance"];
    {
      ::size_t data_size = ::size_t{8} *
          ::_pbi::FromIntSize(this_._internal_covariance_size());
      ::size_t tag_size = data_size == 0
          ? 0
          : 1 + ::_pbi::WireFormatLite::Int32Size(
                              static_cast<::int32_t>(data_size));
      total_size += tag_size + data_size;
    }
  }
   {
    // .agricultural.robot.navigation.v1.Pose pose = 1 [json_name = "pose"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pose_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PoseWithCovariance::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PoseWithCovariance*>(&to_msg);
  auto& from = static_cast<const PoseWithCovariance&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.PoseWithCovariance)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_covariance()->MergeFrom(from._internal_covariance());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.pose_ != nullptr);
    if (_this->_impl_.pose_ == nullptr) {
      _this->_impl_.pose_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pose_);
    } else {
      _this->_impl_.pose_->MergeFrom(*from._impl_.pose_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PoseWithCovariance::CopyFrom(const PoseWithCovariance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.PoseWithCovariance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PoseWithCovariance::InternalSwap(PoseWithCovariance* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.covariance_.InternalSwap(&other->_impl_.covariance_);
  swap(_impl_.pose_, other->_impl_.pose_);
}

::google::protobuf::Metadata PoseWithCovariance::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Point2D::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Point2D>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Point2D, _impl_._has_bits_);
};

Point2D::Point2D(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Point2D_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.Point2D)
}
Point2D::Point2D(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Point2D& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Point2D_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Point2D::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Point2D::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::y_));
}
Point2D::~Point2D() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.Point2D)
  SharedDtor(*this);
}
inline void Point2D::SharedDtor(MessageLite& self) {
  Point2D& this_ = static_cast<Point2D&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Point2D::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Point2D(arena);
}
constexpr auto Point2D::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Point2D),
                                            alignof(Point2D));
}
constexpr auto Point2D::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Point2D_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Point2D::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Point2D>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Point2D::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Point2D>(), &Point2D::ByteSizeLong,
              &Point2D::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Point2D, _impl_._cached_size_),
          false,
      },
      &Point2D::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Point2D_class_data_ =
        Point2D::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Point2D::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Point2D_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Point2D_class_data_.tc_table);
  return Point2D_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
Point2D::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Point2D, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Point2D_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Point2D>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double y = 2 [json_name = "y"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(Point2D, _impl_.y_)}},
    // double x = 1 [json_name = "x"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(Point2D, _impl_.x_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double x = 1 [json_name = "x"];
    {PROTOBUF_FIELD_OFFSET(Point2D, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double y = 2 [json_name = "y"];
    {PROTOBUF_FIELD_OFFSET(Point2D, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Point2D::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.Point2D)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.y_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Point2D::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Point2D& this_ = static_cast<const Point2D&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Point2D::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Point2D& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.Point2D)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double x = 1 [json_name = "x"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_x(), target);
    }
  }

  // double y = 2 [json_name = "y"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_y(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.Point2D)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Point2D::ByteSizeLong(const MessageLite& base) {
  const Point2D& this_ = static_cast<const Point2D&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Point2D::ByteSizeLong() const {
  const Point2D& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.Point2D)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // double x = 1 [json_name = "x"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
        total_size += 9;
      }
    }
    // double y = 2 [json_name = "y"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Point2D::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Point2D*>(&to_msg);
  auto& from = static_cast<const Point2D&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.Point2D)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_x()) != 0) {
        _this->_impl_.x_ = from._impl_.x_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_y()) != 0) {
        _this->_impl_.y_ = from._impl_.y_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Point2D::CopyFrom(const Point2D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.Point2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Point2D::InternalSwap(Point2D* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Point2D, _impl_.y_)
      + sizeof(Point2D::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(Point2D, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Point2D::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Point3D::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Point3D>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Point3D, _impl_._has_bits_);
};

Point3D::Point3D(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Point3D_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.Point3D)
}
Point3D::Point3D(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Point3D& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Point3D_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Point3D::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Point3D::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Point3D::~Point3D() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.Point3D)
  SharedDtor(*this);
}
inline void Point3D::SharedDtor(MessageLite& self) {
  Point3D& this_ = static_cast<Point3D&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Point3D::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Point3D(arena);
}
constexpr auto Point3D::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Point3D),
                                            alignof(Point3D));
}
constexpr auto Point3D::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Point3D_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Point3D::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Point3D>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Point3D::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Point3D>(), &Point3D::ByteSizeLong,
              &Point3D::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Point3D, _impl_._cached_size_),
          false,
      },
      &Point3D::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Point3D_class_data_ =
        Point3D::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Point3D::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Point3D_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Point3D_class_data_.tc_table);
  return Point3D_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
Point3D::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Point3D, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Point3D_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Point3D>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double x = 1 [json_name = "x"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(Point3D, _impl_.x_)}},
    // double y = 2 [json_name = "y"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(Point3D, _impl_.y_)}},
    // double z = 3 [json_name = "z"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(Point3D, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double x = 1 [json_name = "x"];
    {PROTOBUF_FIELD_OFFSET(Point3D, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double y = 2 [json_name = "y"];
    {PROTOBUF_FIELD_OFFSET(Point3D, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double z = 3 [json_name = "z"];
    {PROTOBUF_FIELD_OFFSET(Point3D, _impl_.z_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Point3D::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.Point3D)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.z_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Point3D::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Point3D& this_ = static_cast<const Point3D&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Point3D::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Point3D& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.Point3D)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double x = 1 [json_name = "x"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_x(), target);
    }
  }

  // double y = 2 [json_name = "y"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_y(), target);
    }
  }

  // double z = 3 [json_name = "z"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_z()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_z(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.Point3D)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Point3D::ByteSizeLong(const MessageLite& base) {
  const Point3D& this_ = static_cast<const Point3D&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Point3D::ByteSizeLong() const {
  const Point3D& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.Point3D)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // double x = 1 [json_name = "x"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
        total_size += 9;
      }
    }
    // double y = 2 [json_name = "y"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
        total_size += 9;
      }
    }
    // double z = 3 [json_name = "z"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_z()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Point3D::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Point3D*>(&to_msg);
  auto& from = static_cast<const Point3D&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.Point3D)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_x()) != 0) {
        _this->_impl_.x_ = from._impl_.x_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_y()) != 0) {
        _this->_impl_.y_ = from._impl_.y_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_z()) != 0) {
        _this->_impl_.z_ = from._impl_.z_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Point3D::CopyFrom(const Point3D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.Point3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Point3D::InternalSwap(Point3D* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Point3D, _impl_.z_)
      + sizeof(Point3D::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Point3D, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Point3D::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Quaternion::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Quaternion>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Quaternion, _impl_._has_bits_);
};

Quaternion::Quaternion(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Quaternion_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.Quaternion)
}
Quaternion::Quaternion(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Quaternion& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Quaternion_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Quaternion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Quaternion::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, w_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::w_));
}
Quaternion::~Quaternion() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.Quaternion)
  SharedDtor(*this);
}
inline void Quaternion::SharedDtor(MessageLite& self) {
  Quaternion& this_ = static_cast<Quaternion&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Quaternion::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Quaternion(arena);
}
constexpr auto Quaternion::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Quaternion),
                                            alignof(Quaternion));
}
constexpr auto Quaternion::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Quaternion_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Quaternion::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Quaternion>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Quaternion::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Quaternion>(), &Quaternion::ByteSizeLong,
              &Quaternion::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Quaternion, _impl_._cached_size_),
          false,
      },
      &Quaternion::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Quaternion_class_data_ =
        Quaternion::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Quaternion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Quaternion_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Quaternion_class_data_.tc_table);
  return Quaternion_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
Quaternion::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Quaternion, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Quaternion_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Quaternion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double w = 4 [json_name = "w"];
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_)}},
    // double x = 1 [json_name = "x"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.x_)}},
    // double y = 2 [json_name = "y"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.y_)}},
    // double z = 3 [json_name = "z"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double x = 1 [json_name = "x"];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double y = 2 [json_name = "y"];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double z = 3 [json_name = "z"];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.z_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double w = 4 [json_name = "w"];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Quaternion::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.Quaternion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.w_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.w_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Quaternion::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Quaternion& this_ = static_cast<const Quaternion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Quaternion::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Quaternion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.Quaternion)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double x = 1 [json_name = "x"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_x(), target);
    }
  }

  // double y = 2 [json_name = "y"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_y(), target);
    }
  }

  // double z = 3 [json_name = "z"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_z()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_z(), target);
    }
  }

  // double w = 4 [json_name = "w"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_w()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_w(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.Quaternion)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Quaternion::ByteSizeLong(const MessageLite& base) {
  const Quaternion& this_ = static_cast<const Quaternion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Quaternion::ByteSizeLong() const {
  const Quaternion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.Quaternion)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // double x = 1 [json_name = "x"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
        total_size += 9;
      }
    }
    // double y = 2 [json_name = "y"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
        total_size += 9;
      }
    }
    // double z = 3 [json_name = "z"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_z()) != 0) {
        total_size += 9;
      }
    }
    // double w = 4 [json_name = "w"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_w()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Quaternion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Quaternion*>(&to_msg);
  auto& from = static_cast<const Quaternion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.Quaternion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_x()) != 0) {
        _this->_impl_.x_ = from._impl_.x_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_y()) != 0) {
        _this->_impl_.y_ = from._impl_.y_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_z()) != 0) {
        _this->_impl_.z_ = from._impl_.z_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_w()) != 0) {
        _this->_impl_.w_ = from._impl_.w_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Quaternion::CopyFrom(const Quaternion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.Quaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Quaternion::InternalSwap(Quaternion* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_)
      + sizeof(Quaternion::_impl_.w_)
      - PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Quaternion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Twist::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Twist>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Twist, _impl_._has_bits_);
};

Twist::Twist(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Twist_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.Twist)
}
PROTOBUF_NDEBUG_INLINE Twist::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::Twist& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Twist::Twist(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Twist& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Twist_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Twist* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.linear_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.linear_)
                : nullptr;
  _impl_.angular_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.angular_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.Twist)
}
PROTOBUF_NDEBUG_INLINE Twist::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Twist::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, linear_),
           0,
           offsetof(Impl_, angular_) -
               offsetof(Impl_, linear_) +
               sizeof(Impl_::angular_));
}
Twist::~Twist() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.Twist)
  SharedDtor(*this);
}
inline void Twist::SharedDtor(MessageLite& self) {
  Twist& this_ = static_cast<Twist&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.linear_;
  delete this_._impl_.angular_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Twist::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Twist(arena);
}
constexpr auto Twist::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Twist),
                                            alignof(Twist));
}
constexpr auto Twist::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Twist_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Twist::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Twist>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Twist::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Twist>(), &Twist::ByteSizeLong,
              &Twist::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Twist, _impl_._cached_size_),
          false,
      },
      &Twist::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Twist_class_data_ =
        Twist::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Twist::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Twist_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Twist_class_data_.tc_table);
  return Twist_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
Twist::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Twist, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Twist_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Twist>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .agricultural.robot.navigation.v1.Vector3 angular = 2 [json_name = "angular"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Twist, _impl_.angular_)}},
    // .agricultural.robot.navigation.v1.Vector3 linear = 1 [json_name = "linear"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Twist, _impl_.linear_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agricultural.robot.navigation.v1.Vector3 linear = 1 [json_name = "linear"];
    {PROTOBUF_FIELD_OFFSET(Twist, _impl_.linear_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agricultural.robot.navigation.v1.Vector3 angular = 2 [json_name = "angular"];
    {PROTOBUF_FIELD_OFFSET(Twist, _impl_.angular_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Vector3>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Vector3>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Twist::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.Twist)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.linear_ != nullptr);
      _impl_.linear_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.angular_ != nullptr);
      _impl_.angular_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Twist::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Twist& this_ = static_cast<const Twist&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Twist::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Twist& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.Twist)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.Vector3 linear = 1 [json_name = "linear"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.linear_, this_._impl_.linear_->GetCachedSize(), target,
        stream);
  }

  // .agricultural.robot.navigation.v1.Vector3 angular = 2 [json_name = "angular"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.angular_, this_._impl_.angular_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.Twist)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Twist::ByteSizeLong(const MessageLite& base) {
  const Twist& this_ = static_cast<const Twist&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Twist::ByteSizeLong() const {
  const Twist& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.Twist)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .agricultural.robot.navigation.v1.Vector3 linear = 1 [json_name = "linear"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.linear_);
    }
    // .agricultural.robot.navigation.v1.Vector3 angular = 2 [json_name = "angular"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.angular_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Twist::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Twist*>(&to_msg);
  auto& from = static_cast<const Twist&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.Twist)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.linear_ != nullptr);
      if (_this->_impl_.linear_ == nullptr) {
        _this->_impl_.linear_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.linear_);
      } else {
        _this->_impl_.linear_->MergeFrom(*from._impl_.linear_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.angular_ != nullptr);
      if (_this->_impl_.angular_ == nullptr) {
        _this->_impl_.angular_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.angular_);
      } else {
        _this->_impl_.angular_->MergeFrom(*from._impl_.angular_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Twist::CopyFrom(const Twist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.Twist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Twist::InternalSwap(Twist* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Twist, _impl_.angular_)
      + sizeof(Twist::_impl_.angular_)
      - PROTOBUF_FIELD_OFFSET(Twist, _impl_.linear_)>(
          reinterpret_cast<char*>(&_impl_.linear_),
          reinterpret_cast<char*>(&other->_impl_.linear_));
}

::google::protobuf::Metadata Twist::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Vector3::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Vector3>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Vector3, _impl_._has_bits_);
};

Vector3::Vector3(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Vector3_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.Vector3)
}
Vector3::Vector3(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Vector3& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Vector3_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Vector3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Vector3::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Vector3::~Vector3() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.Vector3)
  SharedDtor(*this);
}
inline void Vector3::SharedDtor(MessageLite& self) {
  Vector3& this_ = static_cast<Vector3&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Vector3::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Vector3(arena);
}
constexpr auto Vector3::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Vector3),
                                            alignof(Vector3));
}
constexpr auto Vector3::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Vector3_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Vector3::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Vector3>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Vector3::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Vector3>(), &Vector3::ByteSizeLong,
              &Vector3::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Vector3, _impl_._cached_size_),
          false,
      },
      &Vector3::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Vector3_class_data_ =
        Vector3::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Vector3::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Vector3_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Vector3_class_data_.tc_table);
  return Vector3_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
Vector3::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Vector3, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Vector3_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Vector3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double x = 1 [json_name = "x"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(Vector3, _impl_.x_)}},
    // double y = 2 [json_name = "y"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(Vector3, _impl_.y_)}},
    // double z = 3 [json_name = "z"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(Vector3, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double x = 1 [json_name = "x"];
    {PROTOBUF_FIELD_OFFSET(Vector3, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double y = 2 [json_name = "y"];
    {PROTOBUF_FIELD_OFFSET(Vector3, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double z = 3 [json_name = "z"];
    {PROTOBUF_FIELD_OFFSET(Vector3, _impl_.z_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Vector3::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.Vector3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.z_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Vector3::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Vector3& this_ = static_cast<const Vector3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Vector3::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Vector3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.Vector3)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double x = 1 [json_name = "x"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_x(), target);
    }
  }

  // double y = 2 [json_name = "y"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_y(), target);
    }
  }

  // double z = 3 [json_name = "z"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_z()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_z(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.Vector3)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Vector3::ByteSizeLong(const MessageLite& base) {
  const Vector3& this_ = static_cast<const Vector3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Vector3::ByteSizeLong() const {
  const Vector3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.Vector3)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // double x = 1 [json_name = "x"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
        total_size += 9;
      }
    }
    // double y = 2 [json_name = "y"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
        total_size += 9;
      }
    }
    // double z = 3 [json_name = "z"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_z()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Vector3::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vector3*>(&to_msg);
  auto& from = static_cast<const Vector3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.Vector3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_x()) != 0) {
        _this->_impl_.x_ = from._impl_.x_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_y()) != 0) {
        _this->_impl_.y_ = from._impl_.y_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_z()) != 0) {
        _this->_impl_.z_ = from._impl_.z_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vector3::CopyFrom(const Vector3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.Vector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vector3::InternalSwap(Vector3* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vector3, _impl_.z_)
      + sizeof(Vector3::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Vector3, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Vector3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VelocityCommand::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<VelocityCommand>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VelocityCommand, _impl_._has_bits_);
};

void VelocityCommand::clear_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timeout_ != nullptr) _impl_.timeout_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
VelocityCommand::VelocityCommand(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, VelocityCommand_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.VelocityCommand)
}
PROTOBUF_NDEBUG_INLINE VelocityCommand::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::VelocityCommand& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_) {}

VelocityCommand::VelocityCommand(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const VelocityCommand& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, VelocityCommand_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VelocityCommand* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cmd_vel_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cmd_vel_)
                : nullptr;
  _impl_.timeout_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timeout_)
                : nullptr;
  _impl_.joystick_input_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.joystick_input_)
                : nullptr;
  _impl_.safety_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.safety_)
                : nullptr;
  _impl_.control_mode_ = from._impl_.control_mode_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.VelocityCommand)
}
PROTOBUF_NDEBUG_INLINE VelocityCommand::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena) {}

inline void VelocityCommand::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cmd_vel_),
           0,
           offsetof(Impl_, control_mode_) -
               offsetof(Impl_, cmd_vel_) +
               sizeof(Impl_::control_mode_));
}
VelocityCommand::~VelocityCommand() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.VelocityCommand)
  SharedDtor(*this);
}
inline void VelocityCommand::SharedDtor(MessageLite& self) {
  VelocityCommand& this_ = static_cast<VelocityCommand&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  delete this_._impl_.cmd_vel_;
  delete this_._impl_.timeout_;
  delete this_._impl_.joystick_input_;
  delete this_._impl_.safety_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL VelocityCommand::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) VelocityCommand(arena);
}
constexpr auto VelocityCommand::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(VelocityCommand),
                                            alignof(VelocityCommand));
}
constexpr auto VelocityCommand::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_VelocityCommand_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &VelocityCommand::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<VelocityCommand>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &VelocityCommand::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<VelocityCommand>(), &VelocityCommand::ByteSizeLong,
              &VelocityCommand::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(VelocityCommand, _impl_._cached_size_),
          false,
      },
      &VelocityCommand::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull VelocityCommand_class_data_ =
        VelocityCommand::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
VelocityCommand::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&VelocityCommand_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(VelocityCommand_class_data_.tc_table);
  return VelocityCommand_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 65, 2>
VelocityCommand::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VelocityCommand, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    VelocityCommand_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::VelocityCommand>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VelocityCommand, _impl_.robot_id_)}},
    // .agricultural.robot.navigation.v1.Twist cmd_vel = 2 [json_name = "cmdVel"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(VelocityCommand, _impl_.cmd_vel_)}},
    // .google.protobuf.Duration timeout = 3 [json_name = "timeout"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 1, PROTOBUF_FIELD_OFFSET(VelocityCommand, _impl_.timeout_)}},
    // .agricultural.robot.navigation.v1.JoystickInput joystick_input = 4 [json_name = "joystickInput"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 2, PROTOBUF_FIELD_OFFSET(VelocityCommand, _impl_.joystick_input_)}},
    // .agricultural.robot.navigation.v1.SafetyConstraints safety = 5 [json_name = "safety"];
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 3, PROTOBUF_FIELD_OFFSET(VelocityCommand, _impl_.safety_)}},
    // .agricultural.robot.navigation.v1.ControlMode control_mode = 6 [json_name = "controlMode"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VelocityCommand, _impl_.control_mode_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(VelocityCommand, _impl_.control_mode_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(VelocityCommand, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.Twist cmd_vel = 2 [json_name = "cmdVel"];
    {PROTOBUF_FIELD_OFFSET(VelocityCommand, _impl_.cmd_vel_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Duration timeout = 3 [json_name = "timeout"];
    {PROTOBUF_FIELD_OFFSET(VelocityCommand, _impl_.timeout_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agricultural.robot.navigation.v1.JoystickInput joystick_input = 4 [json_name = "joystickInput"];
    {PROTOBUF_FIELD_OFFSET(VelocityCommand, _impl_.joystick_input_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agricultural.robot.navigation.v1.SafetyConstraints safety = 5 [json_name = "safety"];
    {PROTOBUF_FIELD_OFFSET(VelocityCommand, _impl_.safety_), _Internal::kHasBitsOffset + 4, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agricultural.robot.navigation.v1.ControlMode control_mode = 6 [json_name = "controlMode"];
    {PROTOBUF_FIELD_OFFSET(VelocityCommand, _impl_.control_mode_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Twist>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::JoystickInput>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::SafetyConstraints>()},
  }},
  {{
    "\60\10\0\0\0\0\0\0"
    "agricultural.robot.navigation.v1.VelocityCommand"
    "robot_id"
  }},
};
PROTOBUF_NOINLINE void VelocityCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.VelocityCommand)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.robot_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.cmd_vel_ != nullptr);
      _impl_.cmd_vel_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.timeout_ != nullptr);
      _impl_.timeout_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.joystick_input_ != nullptr);
      _impl_.joystick_input_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.safety_ != nullptr);
      _impl_.safety_->Clear();
    }
  }
  _impl_.control_mode_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL VelocityCommand::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const VelocityCommand& this_ = static_cast<const VelocityCommand&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL VelocityCommand::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const VelocityCommand& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.VelocityCommand)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.VelocityCommand.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.Twist cmd_vel = 2 [json_name = "cmdVel"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.cmd_vel_, this_._impl_.cmd_vel_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Duration timeout = 3 [json_name = "timeout"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.timeout_, this_._impl_.timeout_->GetCachedSize(), target,
        stream);
  }

  // .agricultural.robot.navigation.v1.JoystickInput joystick_input = 4 [json_name = "joystickInput"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.joystick_input_, this_._impl_.joystick_input_->GetCachedSize(), target,
        stream);
  }

  // .agricultural.robot.navigation.v1.SafetyConstraints safety = 5 [json_name = "safety"];
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.safety_, this_._impl_.safety_->GetCachedSize(), target,
        stream);
  }

  // .agricultural.robot.navigation.v1.ControlMode control_mode = 6 [json_name = "controlMode"];
  if ((cached_has_bits & 0x00000020u) != 0) {
    if (this_._internal_control_mode() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this_._internal_control_mode(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.VelocityCommand)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t VelocityCommand::ByteSizeLong(const MessageLite& base) {
  const VelocityCommand& this_ = static_cast<const VelocityCommand&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t VelocityCommand::ByteSizeLong() const {
  const VelocityCommand& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.VelocityCommand)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // .agricultural.robot.navigation.v1.Twist cmd_vel = 2 [json_name = "cmdVel"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cmd_vel_);
    }
    // .google.protobuf.Duration timeout = 3 [json_name = "timeout"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timeout_);
    }
    // .agricultural.robot.navigation.v1.JoystickInput joystick_input = 4 [json_name = "joystickInput"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.joystick_input_);
    }
    // .agricultural.robot.navigation.v1.SafetyConstraints safety = 5 [json_name = "safety"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.safety_);
    }
    // .agricultural.robot.navigation.v1.ControlMode control_mode = 6 [json_name = "controlMode"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_control_mode() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_control_mode());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void VelocityCommand::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VelocityCommand*>(&to_msg);
  auto& from = static_cast<const VelocityCommand&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.VelocityCommand)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.cmd_vel_ != nullptr);
      if (_this->_impl_.cmd_vel_ == nullptr) {
        _this->_impl_.cmd_vel_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cmd_vel_);
      } else {
        _this->_impl_.cmd_vel_->MergeFrom(*from._impl_.cmd_vel_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.timeout_ != nullptr);
      if (_this->_impl_.timeout_ == nullptr) {
        _this->_impl_.timeout_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timeout_);
      } else {
        _this->_impl_.timeout_->MergeFrom(*from._impl_.timeout_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.joystick_input_ != nullptr);
      if (_this->_impl_.joystick_input_ == nullptr) {
        _this->_impl_.joystick_input_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.joystick_input_);
      } else {
        _this->_impl_.joystick_input_->MergeFrom(*from._impl_.joystick_input_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.safety_ != nullptr);
      if (_this->_impl_.safety_ == nullptr) {
        _this->_impl_.safety_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.safety_);
      } else {
        _this->_impl_.safety_->MergeFrom(*from._impl_.safety_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_control_mode() != 0) {
        _this->_impl_.control_mode_ = from._impl_.control_mode_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VelocityCommand::CopyFrom(const VelocityCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.VelocityCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VelocityCommand::InternalSwap(VelocityCommand* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VelocityCommand, _impl_.control_mode_)
      + sizeof(VelocityCommand::_impl_.control_mode_)
      - PROTOBUF_FIELD_OFFSET(VelocityCommand, _impl_.cmd_vel_)>(
          reinterpret_cast<char*>(&_impl_.cmd_vel_),
          reinterpret_cast<char*>(&other->_impl_.cmd_vel_));
}

::google::protobuf::Metadata VelocityCommand::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class JoystickInput::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<JoystickInput>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(JoystickInput, _impl_._has_bits_);
};

void JoystickInput::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
JoystickInput::JoystickInput(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, JoystickInput_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.JoystickInput)
}
PROTOBUF_NDEBUG_INLINE JoystickInput::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::JoystickInput& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        axes_{visibility, arena, from.axes_},
        buttons_{visibility, arena, from.buttons_},
        controller_id_(arena, from.controller_id_) {}

JoystickInput::JoystickInput(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const JoystickInput& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, JoystickInput_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  JoystickInput* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.JoystickInput)
}
PROTOBUF_NDEBUG_INLINE JoystickInput::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        axes_{visibility, arena},
        buttons_{visibility, arena},
        controller_id_(arena) {}

inline void JoystickInput::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
JoystickInput::~JoystickInput() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.JoystickInput)
  SharedDtor(*this);
}
inline void JoystickInput::SharedDtor(MessageLite& self) {
  JoystickInput& this_ = static_cast<JoystickInput&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.controller_id_.Destroy();
  delete this_._impl_.timestamp_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL JoystickInput::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) JoystickInput(arena);
}
constexpr auto JoystickInput::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(JoystickInput, _impl_.axes_) +
          decltype(JoystickInput::_impl_.axes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(JoystickInput, _impl_.buttons_) +
          decltype(JoystickInput::_impl_.buttons_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(JoystickInput), alignof(JoystickInput), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&JoystickInput::PlacementNew_,
                                 sizeof(JoystickInput),
                                 alignof(JoystickInput));
  }
}
constexpr auto JoystickInput::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_JoystickInput_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &JoystickInput::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<JoystickInput>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &JoystickInput::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<JoystickInput>(), &JoystickInput::ByteSizeLong,
              &JoystickInput::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(JoystickInput, _impl_._cached_size_),
          false,
      },
      &JoystickInput::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull JoystickInput_class_data_ =
        JoystickInput::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
JoystickInput::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&JoystickInput_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(JoystickInput_class_data_.tc_table);
  return JoystickInput_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 68, 2>
JoystickInput::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(JoystickInput, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    JoystickInput_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::JoystickInput>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string controller_id = 4 [json_name = "controllerId"];
    {::_pbi::TcParser::FastUS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(JoystickInput, _impl_.controller_id_)}},
    // repeated float axes = 1 [json_name = "axes"];
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(JoystickInput, _impl_.axes_)}},
    // repeated bool buttons = 2 [json_name = "buttons"];
    {::_pbi::TcParser::FastV8P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(JoystickInput, _impl_.buttons_)}},
    // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(JoystickInput, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float axes = 1 [json_name = "axes"];
    {PROTOBUF_FIELD_OFFSET(JoystickInput, _impl_.axes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated bool buttons = 2 [json_name = "buttons"];
    {PROTOBUF_FIELD_OFFSET(JoystickInput, _impl_.buttons_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedBool)},
    // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(JoystickInput, _impl_.timestamp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string controller_id = 4 [json_name = "controllerId"];
    {PROTOBUF_FIELD_OFFSET(JoystickInput, _impl_.controller_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
    "\56\0\0\0\15\0\0\0"
    "agricultural.robot.navigation.v1.JoystickInput"
    "controller_id"
  }},
};
PROTOBUF_NOINLINE void JoystickInput::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.JoystickInput)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.axes_.Clear();
  _impl_.buttons_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.controller_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL JoystickInput::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const JoystickInput& this_ = static_cast<const JoystickInput&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL JoystickInput::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const JoystickInput& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.JoystickInput)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float axes = 1 [json_name = "axes"];
  if (this_._internal_axes_size() > 0) {
    target = stream->WriteFixedPacked(1, this_._internal_axes(), target);
  }

  // repeated bool buttons = 2 [json_name = "buttons"];
  if (this_._internal_buttons_size() > 0) {
    target = stream->WriteFixedPacked(2, this_._internal_buttons(), target);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  // string controller_id = 4 [json_name = "controllerId"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!this_._internal_controller_id().empty()) {
      const ::std::string& _s = this_._internal_controller_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.JoystickInput.controller_id");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.JoystickInput)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t JoystickInput::ByteSizeLong(const MessageLite& base) {
  const JoystickInput& this_ = static_cast<const JoystickInput&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t JoystickInput::ByteSizeLong() const {
  const JoystickInput& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.JoystickInput)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated float axes = 1 [json_name = "axes"];
    {
      ::size_t data_size = ::size_t{4} *
          ::_pbi::FromIntSize(this_._internal_axes_size());
      ::size_t tag_size = data_size == 0
          ? 0
          : 1 + ::_pbi::WireFormatLite::Int32Size(
                              static_cast<::int32_t>(data_size));
      total_size += tag_size + data_size;
    }
    // repeated bool buttons = 2 [json_name = "buttons"];
    {
      ::size_t data_size = ::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_buttons_size());
      ::size_t tag_size = data_size == 0
          ? 0
          : 1 + ::_pbi::WireFormatLite::Int32Size(
                              static_cast<::int32_t>(data_size));
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string controller_id = 4 [json_name = "controllerId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_controller_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_controller_id());
      }
    }
    // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void JoystickInput::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<JoystickInput*>(&to_msg);
  auto& from = static_cast<const JoystickInput&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.JoystickInput)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_axes()->MergeFrom(from._internal_axes());
  _this->_internal_mutable_buttons()->MergeFrom(from._internal_buttons());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_controller_id().empty()) {
        _this->_internal_set_controller_id(from._internal_controller_id());
      } else {
        if (_this->_impl_.controller_id_.IsDefault()) {
          _this->_internal_set_controller_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JoystickInput::CopyFrom(const JoystickInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.JoystickInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void JoystickInput::InternalSwap(JoystickInput* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.axes_.InternalSwap(&other->_impl_.axes_);
  _impl_.buttons_.InternalSwap(&other->_impl_.buttons_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.controller_id_, &other->_impl_.controller_id_, arena);
  swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata JoystickInput::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VelocityResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<VelocityResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VelocityResponse, _impl_._has_bits_);
};

void VelocityResponse::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
VelocityResponse::VelocityResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, VelocityResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.VelocityResponse)
}
PROTOBUF_NDEBUG_INLINE VelocityResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::VelocityResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        safety_violations_{visibility, arena, from.safety_violations_},
        message_(arena, from.message_) {}

VelocityResponse::VelocityResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const VelocityResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, VelocityResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VelocityResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.actual_velocity_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.actual_velocity_)
                : nullptr;
  _impl_.timestamp_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.VelocityResponse)
}
PROTOBUF_NDEBUG_INLINE VelocityResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        safety_violations_{visibility, arena},
        message_(arena) {}

inline void VelocityResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, actual_velocity_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, actual_velocity_) +
               sizeof(Impl_::success_));
}
VelocityResponse::~VelocityResponse() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.VelocityResponse)
  SharedDtor(*this);
}
inline void VelocityResponse::SharedDtor(MessageLite& self) {
  VelocityResponse& this_ = static_cast<VelocityResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  delete this_._impl_.actual_velocity_;
  delete this_._impl_.timestamp_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL VelocityResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) VelocityResponse(arena);
}
constexpr auto VelocityResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(VelocityResponse, _impl_.safety_violations_) +
          decltype(VelocityResponse::_impl_.safety_violations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(VelocityResponse), alignof(VelocityResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&VelocityResponse::PlacementNew_,
                                 sizeof(VelocityResponse),
                                 alignof(VelocityResponse));
  }
}
constexpr auto VelocityResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_VelocityResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &VelocityResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<VelocityResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &VelocityResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<VelocityResponse>(), &VelocityResponse::ByteSizeLong,
              &VelocityResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(VelocityResponse, _impl_._cached_size_),
          false,
      },
      &VelocityResponse::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull VelocityResponse_class_data_ =
        VelocityResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
VelocityResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&VelocityResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(VelocityResponse_class_data_.tc_table);
  return VelocityResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 65, 2>
VelocityResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VelocityResponse, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    VelocityResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::VelocityResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1 [json_name = "success"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(VelocityResponse, _impl_.success_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(VelocityResponse, _impl_.success_)}},
    // string message = 2 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(VelocityResponse, _impl_.message_)}},
    // .agricultural.robot.navigation.v1.Twist actual_velocity = 3 [json_name = "actualVelocity"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(VelocityResponse, _impl_.actual_velocity_)}},
    // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 1, PROTOBUF_FIELD_OFFSET(VelocityResponse, _impl_.timestamp_)}},
    // repeated .agricultural.robot.navigation.v1.SafetyViolation safety_violations = 5 [json_name = "safetyViolations"];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 2, PROTOBUF_FIELD_OFFSET(VelocityResponse, _impl_.safety_violations_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1 [json_name = "success"];
    {PROTOBUF_FIELD_OFFSET(VelocityResponse, _impl_.success_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string message = 2 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(VelocityResponse, _impl_.message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.Twist actual_velocity = 3 [json_name = "actualVelocity"];
    {PROTOBUF_FIELD_OFFSET(VelocityResponse, _impl_.actual_velocity_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(VelocityResponse, _impl_.timestamp_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .agricultural.robot.navigation.v1.SafetyViolation safety_violations = 5 [json_name = "safetyViolations"];
    {PROTOBUF_FIELD_OFFSET(VelocityResponse, _impl_.safety_violations_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Twist>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::SafetyViolation>()},
  }},
  {{
    "\61\0\7\0\0\0\0\0"
    "agricultural.robot.navigation.v1.VelocityResponse"
    "message"
  }},
};
PROTOBUF_NOINLINE void VelocityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.VelocityResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.safety_violations_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.actual_velocity_ != nullptr);
      _impl_.actual_velocity_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
  }
  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL VelocityResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const VelocityResponse& this_ = static_cast<const VelocityResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL VelocityResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const VelocityResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.VelocityResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1 [json_name = "success"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_success() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_success(), target);
    }
  }

  // string message = 2 [json_name = "message"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.VelocityResponse.message");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.Twist actual_velocity = 3 [json_name = "actualVelocity"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.actual_velocity_, this_._impl_.actual_velocity_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  // repeated .agricultural.robot.navigation.v1.SafetyViolation safety_violations = 5 [json_name = "safetyViolations"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_safety_violations_size());
       i < n; i++) {
    const auto& repfield = this_._internal_safety_violations().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.VelocityResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t VelocityResponse::ByteSizeLong(const MessageLite& base) {
  const VelocityResponse& this_ = static_cast<const VelocityResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t VelocityResponse::ByteSizeLong() const {
  const VelocityResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.VelocityResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .agricultural.robot.navigation.v1.SafetyViolation safety_violations = 5 [json_name = "safetyViolations"];
    {
      total_size += 1UL * this_._internal_safety_violations_size();
      for (const auto& msg : this_._internal_safety_violations()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string message = 2 [json_name = "message"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // .agricultural.robot.navigation.v1.Twist actual_velocity = 3 [json_name = "actualVelocity"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actual_velocity_);
    }
    // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
    // bool success = 1 [json_name = "success"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_success() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void VelocityResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VelocityResponse*>(&to_msg);
  auto& from = static_cast<const VelocityResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.VelocityResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_safety_violations()->MergeFrom(
      from._internal_safety_violations());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.actual_velocity_ != nullptr);
      if (_this->_impl_.actual_velocity_ == nullptr) {
        _this->_impl_.actual_velocity_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.actual_velocity_);
      } else {
        _this->_impl_.actual_velocity_->MergeFrom(*from._impl_.actual_velocity_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_success() != 0) {
        _this->_impl_.success_ = from._impl_.success_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VelocityResponse::CopyFrom(const VelocityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.VelocityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VelocityResponse::InternalSwap(VelocityResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.safety_violations_.InternalSwap(&other->_impl_.safety_violations_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VelocityResponse, _impl_.success_)
      + sizeof(VelocityResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(VelocityResponse, _impl_.actual_velocity_)>(
          reinterpret_cast<char*>(&_impl_.actual_velocity_),
          reinterpret_cast<char*>(&other->_impl_.actual_velocity_));
}

::google::protobuf::Metadata VelocityResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StopMovementRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<StopMovementRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StopMovementRequest, _impl_._has_bits_);
};

StopMovementRequest::StopMovementRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StopMovementRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.StopMovementRequest)
}
PROTOBUF_NDEBUG_INLINE StopMovementRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::StopMovementRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_) {}

StopMovementRequest::StopMovementRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StopMovementRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StopMovementRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StopMovementRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.stop_type_ = from._impl_.stop_type_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.StopMovementRequest)
}
PROTOBUF_NDEBUG_INLINE StopMovementRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena) {}

inline void StopMovementRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.stop_type_ = {};
}
StopMovementRequest::~StopMovementRequest() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.StopMovementRequest)
  SharedDtor(*this);
}
inline void StopMovementRequest::SharedDtor(MessageLite& self) {
  StopMovementRequest& this_ = static_cast<StopMovementRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL StopMovementRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StopMovementRequest(arena);
}
constexpr auto StopMovementRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(StopMovementRequest),
                                            alignof(StopMovementRequest));
}
constexpr auto StopMovementRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StopMovementRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StopMovementRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<StopMovementRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StopMovementRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<StopMovementRequest>(), &StopMovementRequest::ByteSizeLong,
              &StopMovementRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StopMovementRequest, _impl_._cached_size_),
          false,
      },
      &StopMovementRequest::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull StopMovementRequest_class_data_ =
        StopMovementRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
StopMovementRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StopMovementRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StopMovementRequest_class_data_.tc_table);
  return StopMovementRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 69, 2>
StopMovementRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StopMovementRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    StopMovementRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::StopMovementRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .agricultural.robot.navigation.v1.EmergencyStopType stop_type = 2 [json_name = "stopType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StopMovementRequest, _impl_.stop_type_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(StopMovementRequest, _impl_.stop_type_)}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StopMovementRequest, _impl_.robot_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(StopMovementRequest, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.EmergencyStopType stop_type = 2 [json_name = "stopType"];
    {PROTOBUF_FIELD_OFFSET(StopMovementRequest, _impl_.stop_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\64\10\0\0\0\0\0\0"
    "agricultural.robot.navigation.v1.StopMovementRequest"
    "robot_id"
  }},
};
PROTOBUF_NOINLINE void StopMovementRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.StopMovementRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.robot_id_.ClearNonDefaultToEmpty();
  }
  _impl_.stop_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL StopMovementRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const StopMovementRequest& this_ = static_cast<const StopMovementRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL StopMovementRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const StopMovementRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.StopMovementRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.StopMovementRequest.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .agricultural.robot.navigation.v1.EmergencyStopType stop_type = 2 [json_name = "stopType"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_stop_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_stop_type(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.StopMovementRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StopMovementRequest::ByteSizeLong(const MessageLite& base) {
  const StopMovementRequest& this_ = static_cast<const StopMovementRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StopMovementRequest::ByteSizeLong() const {
  const StopMovementRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.StopMovementRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // .agricultural.robot.navigation.v1.EmergencyStopType stop_type = 2 [json_name = "stopType"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_stop_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_stop_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void StopMovementRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StopMovementRequest*>(&to_msg);
  auto& from = static_cast<const StopMovementRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.StopMovementRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_stop_type() != 0) {
        _this->_impl_.stop_type_ = from._impl_.stop_type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StopMovementRequest::CopyFrom(const StopMovementRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.StopMovementRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StopMovementRequest::InternalSwap(StopMovementRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  swap(_impl_.stop_type_, other->_impl_.stop_type_);
}

::google::protobuf::Metadata StopMovementRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SafetyConstraints::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SafetyConstraints>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SafetyConstraints, _impl_._has_bits_);
};

SafetyConstraints::SafetyConstraints(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SafetyConstraints_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.SafetyConstraints)
}
PROTOBUF_NDEBUG_INLINE SafetyConstraints::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::SafetyConstraints& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        forbidden_zones_{visibility, arena, from.forbidden_zones_} {}

SafetyConstraints::SafetyConstraints(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SafetyConstraints& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SafetyConstraints_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SafetyConstraints* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_linear_velocity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, max_linear_velocity_),
           offsetof(Impl_, obstacle_avoidance_enabled_) -
               offsetof(Impl_, max_linear_velocity_) +
               sizeof(Impl_::obstacle_avoidance_enabled_));

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.SafetyConstraints)
}
PROTOBUF_NDEBUG_INLINE SafetyConstraints::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        forbidden_zones_{visibility, arena} {}

inline void SafetyConstraints::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_linear_velocity_),
           0,
           offsetof(Impl_, obstacle_avoidance_enabled_) -
               offsetof(Impl_, max_linear_velocity_) +
               sizeof(Impl_::obstacle_avoidance_enabled_));
}
SafetyConstraints::~SafetyConstraints() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.SafetyConstraints)
  SharedDtor(*this);
}
inline void SafetyConstraints::SharedDtor(MessageLite& self) {
  SafetyConstraints& this_ = static_cast<SafetyConstraints&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SafetyConstraints::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SafetyConstraints(arena);
}
constexpr auto SafetyConstraints::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SafetyConstraints, _impl_.forbidden_zones_) +
          decltype(SafetyConstraints::_impl_.forbidden_zones_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SafetyConstraints), alignof(SafetyConstraints), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SafetyConstraints::PlacementNew_,
                                 sizeof(SafetyConstraints),
                                 alignof(SafetyConstraints));
  }
}
constexpr auto SafetyConstraints::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SafetyConstraints_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SafetyConstraints::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SafetyConstraints>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SafetyConstraints::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SafetyConstraints>(), &SafetyConstraints::ByteSizeLong,
              &SafetyConstraints::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SafetyConstraints, _impl_._cached_size_),
          false,
      },
      &SafetyConstraints::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SafetyConstraints_class_data_ =
        SafetyConstraints::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SafetyConstraints::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SafetyConstraints_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SafetyConstraints_class_data_.tc_table);
  return SafetyConstraints_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 74, 2>
SafetyConstraints::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SafetyConstraints, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SafetyConstraints_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::SafetyConstraints>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double max_linear_velocity = 1 [json_name = "maxLinearVelocity"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(SafetyConstraints, _impl_.max_linear_velocity_)}},
    // double max_angular_velocity = 2 [json_name = "maxAngularVelocity"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(SafetyConstraints, _impl_.max_angular_velocity_)}},
    // double max_acceleration = 3 [json_name = "maxAcceleration"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(SafetyConstraints, _impl_.max_acceleration_)}},
    // bool obstacle_avoidance_enabled = 4 [json_name = "obstacleAvoidanceEnabled"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SafetyConstraints, _impl_.obstacle_avoidance_enabled_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(SafetyConstraints, _impl_.obstacle_avoidance_enabled_)}},
    // double safety_margin = 5 [json_name = "safetyMargin"];
    {::_pbi::TcParser::FastF64S1,
     {41, 3, 0, PROTOBUF_FIELD_OFFSET(SafetyConstraints, _impl_.safety_margin_)}},
    // repeated string forbidden_zones = 6 [json_name = "forbiddenZones"];
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SafetyConstraints, _impl_.forbidden_zones_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double max_linear_velocity = 1 [json_name = "maxLinearVelocity"];
    {PROTOBUF_FIELD_OFFSET(SafetyConstraints, _impl_.max_linear_velocity_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double max_angular_velocity = 2 [json_name = "maxAngularVelocity"];
    {PROTOBUF_FIELD_OFFSET(SafetyConstraints, _impl_.max_angular_velocity_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double max_acceleration = 3 [json_name = "maxAcceleration"];
    {PROTOBUF_FIELD_OFFSET(SafetyConstraints, _impl_.max_acceleration_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // bool obstacle_avoidance_enabled = 4 [json_name = "obstacleAvoidanceEnabled"];
    {PROTOBUF_FIELD_OFFSET(SafetyConstraints, _impl_.obstacle_avoidance_enabled_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // double safety_margin = 5 [json_name = "safetyMargin"];
    {PROTOBUF_FIELD_OFFSET(SafetyConstraints, _impl_.safety_margin_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // repeated string forbidden_zones = 6 [json_name = "forbiddenZones"];
    {PROTOBUF_FIELD_OFFSET(SafetyConstraints, _impl_.forbidden_zones_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\62\0\0\0\0\0\17\0"
    "agricultural.robot.navigation.v1.SafetyConstraints"
    "forbidden_zones"
  }},
};
PROTOBUF_NOINLINE void SafetyConstraints::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.SafetyConstraints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.forbidden_zones_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    ::memset(&_impl_.max_linear_velocity_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.obstacle_avoidance_enabled_) -
        reinterpret_cast<char*>(&_impl_.max_linear_velocity_)) + sizeof(_impl_.obstacle_avoidance_enabled_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SafetyConstraints::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SafetyConstraints& this_ = static_cast<const SafetyConstraints&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SafetyConstraints::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SafetyConstraints& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.SafetyConstraints)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double max_linear_velocity = 1 [json_name = "maxLinearVelocity"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_max_linear_velocity()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_max_linear_velocity(), target);
    }
  }

  // double max_angular_velocity = 2 [json_name = "maxAngularVelocity"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_max_angular_velocity()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_max_angular_velocity(), target);
    }
  }

  // double max_acceleration = 3 [json_name = "maxAcceleration"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_max_acceleration()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_max_acceleration(), target);
    }
  }

  // bool obstacle_avoidance_enabled = 4 [json_name = "obstacleAvoidanceEnabled"];
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_obstacle_avoidance_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_obstacle_avoidance_enabled(), target);
    }
  }

  // double safety_margin = 5 [json_name = "safetyMargin"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_safety_margin()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          5, this_._internal_safety_margin(), target);
    }
  }

  // repeated string forbidden_zones = 6 [json_name = "forbiddenZones"];
  for (int i = 0, n = this_._internal_forbidden_zones_size(); i < n; ++i) {
    const auto& s = this_._internal_forbidden_zones().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.SafetyConstraints.forbidden_zones");
    target = stream->WriteString(6, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.SafetyConstraints)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SafetyConstraints::ByteSizeLong(const MessageLite& base) {
  const SafetyConstraints& this_ = static_cast<const SafetyConstraints&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SafetyConstraints::ByteSizeLong() const {
  const SafetyConstraints& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.SafetyConstraints)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string forbidden_zones = 6 [json_name = "forbiddenZones"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_forbidden_zones().size());
      for (int i = 0, n = this_._internal_forbidden_zones().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_forbidden_zones().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // double max_linear_velocity = 1 [json_name = "maxLinearVelocity"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_max_linear_velocity()) != 0) {
        total_size += 9;
      }
    }
    // double max_angular_velocity = 2 [json_name = "maxAngularVelocity"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_max_angular_velocity()) != 0) {
        total_size += 9;
      }
    }
    // double max_acceleration = 3 [json_name = "maxAcceleration"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_max_acceleration()) != 0) {
        total_size += 9;
      }
    }
    // double safety_margin = 5 [json_name = "safetyMargin"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_safety_margin()) != 0) {
        total_size += 9;
      }
    }
    // bool obstacle_avoidance_enabled = 4 [json_name = "obstacleAvoidanceEnabled"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_obstacle_avoidance_enabled() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SafetyConstraints::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SafetyConstraints*>(&to_msg);
  auto& from = static_cast<const SafetyConstraints&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.SafetyConstraints)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_forbidden_zones()->MergeFrom(from._internal_forbidden_zones());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_max_linear_velocity()) != 0) {
        _this->_impl_.max_linear_velocity_ = from._impl_.max_linear_velocity_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_max_angular_velocity()) != 0) {
        _this->_impl_.max_angular_velocity_ = from._impl_.max_angular_velocity_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_max_acceleration()) != 0) {
        _this->_impl_.max_acceleration_ = from._impl_.max_acceleration_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_safety_margin()) != 0) {
        _this->_impl_.safety_margin_ = from._impl_.safety_margin_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_obstacle_avoidance_enabled() != 0) {
        _this->_impl_.obstacle_avoidance_enabled_ = from._impl_.obstacle_avoidance_enabled_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SafetyConstraints::CopyFrom(const SafetyConstraints& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.SafetyConstraints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SafetyConstraints::InternalSwap(SafetyConstraints* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.forbidden_zones_.InternalSwap(&other->_impl_.forbidden_zones_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SafetyConstraints, _impl_.obstacle_avoidance_enabled_)
      + sizeof(SafetyConstraints::_impl_.obstacle_avoidance_enabled_)
      - PROTOBUF_FIELD_OFFSET(SafetyConstraints, _impl_.max_linear_velocity_)>(
          reinterpret_cast<char*>(&_impl_.max_linear_velocity_),
          reinterpret_cast<char*>(&other->_impl_.max_linear_velocity_));
}

::google::protobuf::Metadata SafetyConstraints::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SafetyViolation::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SafetyViolation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SafetyViolation, _impl_._has_bits_);
};

void SafetyViolation::clear_detected_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.detected_at_ != nullptr) _impl_.detected_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SafetyViolation::SafetyViolation(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SafetyViolation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.SafetyViolation)
}
PROTOBUF_NDEBUG_INLINE SafetyViolation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::SafetyViolation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        description_(arena, from.description_) {}

SafetyViolation::SafetyViolation(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SafetyViolation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SafetyViolation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SafetyViolation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.detected_at_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.detected_at_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, severity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, severity_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, severity_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.SafetyViolation)
}
PROTOBUF_NDEBUG_INLINE SafetyViolation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        description_(arena) {}

inline void SafetyViolation::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, detected_at_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, detected_at_) +
               sizeof(Impl_::type_));
}
SafetyViolation::~SafetyViolation() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.SafetyViolation)
  SharedDtor(*this);
}
inline void SafetyViolation::SharedDtor(MessageLite& self) {
  SafetyViolation& this_ = static_cast<SafetyViolation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.description_.Destroy();
  delete this_._impl_.detected_at_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SafetyViolation::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SafetyViolation(arena);
}
constexpr auto SafetyViolation::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SafetyViolation),
                                            alignof(SafetyViolation));
}
constexpr auto SafetyViolation::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SafetyViolation_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SafetyViolation::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SafetyViolation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SafetyViolation::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SafetyViolation>(), &SafetyViolation::ByteSizeLong,
              &SafetyViolation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SafetyViolation, _impl_._cached_size_),
          false,
      },
      &SafetyViolation::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SafetyViolation_class_data_ =
        SafetyViolation::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SafetyViolation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SafetyViolation_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SafetyViolation_class_data_.tc_table);
  return SafetyViolation_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 68, 2>
SafetyViolation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SafetyViolation, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SafetyViolation_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::SafetyViolation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Timestamp detected_at = 4 [json_name = "detectedAt"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(SafetyViolation, _impl_.detected_at_)}},
    // .agricultural.robot.navigation.v1.SafetyViolationType type = 1 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SafetyViolation, _impl_.type_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(SafetyViolation, _impl_.type_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SafetyViolation, _impl_.description_)}},
    // double severity = 3 [json_name = "severity"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(SafetyViolation, _impl_.severity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agricultural.robot.navigation.v1.SafetyViolationType type = 1 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(SafetyViolation, _impl_.type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(SafetyViolation, _impl_.description_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double severity = 3 [json_name = "severity"];
    {PROTOBUF_FIELD_OFFSET(SafetyViolation, _impl_.severity_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // .google.protobuf.Timestamp detected_at = 4 [json_name = "detectedAt"];
    {PROTOBUF_FIELD_OFFSET(SafetyViolation, _impl_.detected_at_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
    "\60\0\13\0\0\0\0\0"
    "agricultural.robot.navigation.v1.SafetyViolation"
    "description"
  }},
};
PROTOBUF_NOINLINE void SafetyViolation::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.SafetyViolation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.detected_at_ != nullptr);
      _impl_.detected_at_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.severity_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.type_) -
        reinterpret_cast<char*>(&_impl_.severity_)) + sizeof(_impl_.type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SafetyViolation::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SafetyViolation& this_ = static_cast<const SafetyViolation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SafetyViolation::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SafetyViolation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.SafetyViolation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .agricultural.robot.navigation.v1.SafetyViolationType type = 1 [json_name = "type"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  // string description = 2 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.SafetyViolation.description");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // double severity = 3 [json_name = "severity"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_severity()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_severity(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp detected_at = 4 [json_name = "detectedAt"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.detected_at_, this_._impl_.detected_at_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.SafetyViolation)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SafetyViolation::ByteSizeLong(const MessageLite& base) {
  const SafetyViolation& this_ = static_cast<const SafetyViolation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SafetyViolation::ByteSizeLong() const {
  const SafetyViolation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.SafetyViolation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string description = 2 [json_name = "description"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // .google.protobuf.Timestamp detected_at = 4 [json_name = "detectedAt"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.detected_at_);
    }
    // double severity = 3 [json_name = "severity"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_severity()) != 0) {
        total_size += 9;
      }
    }
    // .agricultural.robot.navigation.v1.SafetyViolationType type = 1 [json_name = "type"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SafetyViolation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SafetyViolation*>(&to_msg);
  auto& from = static_cast<const SafetyViolation&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.SafetyViolation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.detected_at_ != nullptr);
      if (_this->_impl_.detected_at_ == nullptr) {
        _this->_impl_.detected_at_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.detected_at_);
      } else {
        _this->_impl_.detected_at_->MergeFrom(*from._impl_.detected_at_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_severity()) != 0) {
        _this->_impl_.severity_ = from._impl_.severity_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SafetyViolation::CopyFrom(const SafetyViolation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.SafetyViolation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SafetyViolation::InternalSwap(SafetyViolation* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SafetyViolation, _impl_.type_)
      + sizeof(SafetyViolation::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(SafetyViolation, _impl_.detected_at_)>(
          reinterpret_cast<char*>(&_impl_.detected_at_),
          reinterpret_cast<char*>(&other->_impl_.detected_at_));
}

::google::protobuf::Metadata SafetyViolation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NavigationGoal::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NavigationGoal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_._has_bits_);
};

void NavigationGoal::clear_deadline() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.deadline_ != nullptr) _impl_.deadline_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
NavigationGoal::NavigationGoal(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NavigationGoal_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.NavigationGoal)
}
PROTOBUF_NDEBUG_INLINE NavigationGoal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::NavigationGoal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        waypoints_{visibility, arena, from.waypoints_},
        robot_id_(arena, from.robot_id_),
        goal_id_(arena, from.goal_id_),
        frame_id_(arena, from.frame_id_) {}

NavigationGoal::NavigationGoal(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NavigationGoal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NavigationGoal_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NavigationGoal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.target_pose_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.target_pose_)
                : nullptr;
  _impl_.options_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_)
                : nullptr;
  _impl_.deadline_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.deadline_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.NavigationGoal)
}
PROTOBUF_NDEBUG_INLINE NavigationGoal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        waypoints_{visibility, arena},
        robot_id_(arena),
        goal_id_(arena),
        frame_id_(arena) {}

inline void NavigationGoal::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, target_pose_),
           0,
           offsetof(Impl_, deadline_) -
               offsetof(Impl_, target_pose_) +
               sizeof(Impl_::deadline_));
}
NavigationGoal::~NavigationGoal() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.NavigationGoal)
  SharedDtor(*this);
}
inline void NavigationGoal::SharedDtor(MessageLite& self) {
  NavigationGoal& this_ = static_cast<NavigationGoal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  this_._impl_.goal_id_.Destroy();
  this_._impl_.frame_id_.Destroy();
  delete this_._impl_.target_pose_;
  delete this_._impl_.options_;
  delete this_._impl_.deadline_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NavigationGoal::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NavigationGoal(arena);
}
constexpr auto NavigationGoal::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_.waypoints_) +
          decltype(NavigationGoal::_impl_.waypoints_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NavigationGoal), alignof(NavigationGoal), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NavigationGoal::PlacementNew_,
                                 sizeof(NavigationGoal),
                                 alignof(NavigationGoal));
  }
}
constexpr auto NavigationGoal::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NavigationGoal_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NavigationGoal::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NavigationGoal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NavigationGoal::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NavigationGoal>(), &NavigationGoal::ByteSizeLong,
              &NavigationGoal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_._cached_size_),
          false,
      },
      &NavigationGoal::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NavigationGoal_class_data_ =
        NavigationGoal::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NavigationGoal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NavigationGoal_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NavigationGoal_class_data_.tc_table);
  return NavigationGoal_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 4, 79, 2>
NavigationGoal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    NavigationGoal_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::NavigationGoal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_.robot_id_)}},
    // string goal_id = 2 [json_name = "goalId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_.goal_id_)}},
    // .agricultural.robot.navigation.v1.PoseWithCovariance target_pose = 3 [json_name = "targetPose"];
    {::_pbi::TcParser::FastMtS1,
     {26, 3, 0, PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_.target_pose_)}},
    // string frame_id = 4 [json_name = "frameId"];
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_.frame_id_)}},
    // .agricultural.robot.navigation.v1.NavigationOptions options = 5 [json_name = "options"];
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 1, PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_.options_)}},
    // repeated .agricultural.robot.navigation.v1.Waypoint waypoints = 6 [json_name = "waypoints"];
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 2, PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_.waypoints_)}},
    // .google.protobuf.Timestamp deadline = 7 [json_name = "deadline"];
    {::_pbi::TcParser::FastMtS1,
     {58, 5, 3, PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_.deadline_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string goal_id = 2 [json_name = "goalId"];
    {PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_.goal_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.PoseWithCovariance target_pose = 3 [json_name = "targetPose"];
    {PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_.target_pose_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string frame_id = 4 [json_name = "frameId"];
    {PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_.frame_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.NavigationOptions options = 5 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_.options_), _Internal::kHasBitsOffset + 4, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .agricultural.robot.navigation.v1.Waypoint waypoints = 6 [json_name = "waypoints"];
    {PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_.waypoints_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp deadline = 7 [json_name = "deadline"];
    {PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_.deadline_), _Internal::kHasBitsOffset + 5, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::PoseWithCovariance>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::NavigationOptions>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Waypoint>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
    "\57\10\7\0\10\0\0\0"
    "agricultural.robot.navigation.v1.NavigationGoal"
    "robot_id"
    "goal_id"
    "frame_id"
  }},
};
PROTOBUF_NOINLINE void NavigationGoal::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.NavigationGoal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.waypoints_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.robot_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.goal_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.frame_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.target_pose_ != nullptr);
      _impl_.target_pose_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.deadline_ != nullptr);
      _impl_.deadline_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NavigationGoal::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NavigationGoal& this_ = static_cast<const NavigationGoal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NavigationGoal::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NavigationGoal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.NavigationGoal)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.NavigationGoal.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string goal_id = 2 [json_name = "goalId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_goal_id().empty()) {
      const ::std::string& _s = this_._internal_goal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.NavigationGoal.goal_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.PoseWithCovariance target_pose = 3 [json_name = "targetPose"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.target_pose_, this_._impl_.target_pose_->GetCachedSize(), target,
        stream);
  }

  // string frame_id = 4 [json_name = "frameId"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (!this_._internal_frame_id().empty()) {
      const ::std::string& _s = this_._internal_frame_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.NavigationGoal.frame_id");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // .agricultural.robot.navigation.v1.NavigationOptions options = 5 [json_name = "options"];
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
        stream);
  }

  // repeated .agricultural.robot.navigation.v1.Waypoint waypoints = 6 [json_name = "waypoints"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_waypoints_size());
       i < n; i++) {
    const auto& repfield = this_._internal_waypoints().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .google.protobuf.Timestamp deadline = 7 [json_name = "deadline"];
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.deadline_, this_._impl_.deadline_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.NavigationGoal)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NavigationGoal::ByteSizeLong(const MessageLite& base) {
  const NavigationGoal& this_ = static_cast<const NavigationGoal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NavigationGoal::ByteSizeLong() const {
  const NavigationGoal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.NavigationGoal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .agricultural.robot.navigation.v1.Waypoint waypoints = 6 [json_name = "waypoints"];
    {
      total_size += 1UL * this_._internal_waypoints_size();
      for (const auto& msg : this_._internal_waypoints()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // string goal_id = 2 [json_name = "goalId"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_goal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_goal_id());
      }
    }
    // string frame_id = 4 [json_name = "frameId"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_frame_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_frame_id());
      }
    }
    // .agricultural.robot.navigation.v1.PoseWithCovariance target_pose = 3 [json_name = "targetPose"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.target_pose_);
    }
    // .agricultural.robot.navigation.v1.NavigationOptions options = 5 [json_name = "options"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
    }
    // .google.protobuf.Timestamp deadline = 7 [json_name = "deadline"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.deadline_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NavigationGoal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NavigationGoal*>(&to_msg);
  auto& from = static_cast<const NavigationGoal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.NavigationGoal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_waypoints()->MergeFrom(
      from._internal_waypoints());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_goal_id().empty()) {
        _this->_internal_set_goal_id(from._internal_goal_id());
      } else {
        if (_this->_impl_.goal_id_.IsDefault()) {
          _this->_internal_set_goal_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_frame_id().empty()) {
        _this->_internal_set_frame_id(from._internal_frame_id());
      } else {
        if (_this->_impl_.frame_id_.IsDefault()) {
          _this->_internal_set_frame_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.target_pose_ != nullptr);
      if (_this->_impl_.target_pose_ == nullptr) {
        _this->_impl_.target_pose_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.target_pose_);
      } else {
        _this->_impl_.target_pose_->MergeFrom(*from._impl_.target_pose_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.deadline_ != nullptr);
      if (_this->_impl_.deadline_ == nullptr) {
        _this->_impl_.deadline_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.deadline_);
      } else {
        _this->_impl_.deadline_->MergeFrom(*from._impl_.deadline_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NavigationGoal::CopyFrom(const NavigationGoal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.NavigationGoal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NavigationGoal::InternalSwap(NavigationGoal* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.waypoints_.InternalSwap(&other->_impl_.waypoints_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.goal_id_, &other->_impl_.goal_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.frame_id_, &other->_impl_.frame_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_.deadline_)
      + sizeof(NavigationGoal::_impl_.deadline_)
      - PROTOBUF_FIELD_OFFSET(NavigationGoal, _impl_.target_pose_)>(
          reinterpret_cast<char*>(&_impl_.target_pose_),
          reinterpret_cast<char*>(&other->_impl_.target_pose_));
}

::google::protobuf::Metadata NavigationGoal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TrajectoryCommand::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TrajectoryCommand>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TrajectoryCommand, _impl_._has_bits_);
};

TrajectoryCommand::TrajectoryCommand(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TrajectoryCommand_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.TrajectoryCommand)
}
PROTOBUF_NDEBUG_INLINE TrajectoryCommand::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::TrajectoryCommand& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        points_{visibility, arena, from.points_},
        robot_id_(arena, from.robot_id_),
        trajectory_id_(arena, from.trajectory_id_),
        frame_id_(arena, from.frame_id_) {}

TrajectoryCommand::TrajectoryCommand(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TrajectoryCommand& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TrajectoryCommand_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TrajectoryCommand* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.options_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.TrajectoryCommand)
}
PROTOBUF_NDEBUG_INLINE TrajectoryCommand::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        points_{visibility, arena},
        robot_id_(arena),
        trajectory_id_(arena),
        frame_id_(arena) {}

inline void TrajectoryCommand::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.options_ = {};
}
TrajectoryCommand::~TrajectoryCommand() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.TrajectoryCommand)
  SharedDtor(*this);
}
inline void TrajectoryCommand::SharedDtor(MessageLite& self) {
  TrajectoryCommand& this_ = static_cast<TrajectoryCommand&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  this_._impl_.trajectory_id_.Destroy();
  this_._impl_.frame_id_.Destroy();
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TrajectoryCommand::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TrajectoryCommand(arena);
}
constexpr auto TrajectoryCommand::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TrajectoryCommand, _impl_.points_) +
          decltype(TrajectoryCommand::_impl_.points_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TrajectoryCommand), alignof(TrajectoryCommand), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TrajectoryCommand::PlacementNew_,
                                 sizeof(TrajectoryCommand),
                                 alignof(TrajectoryCommand));
  }
}
constexpr auto TrajectoryCommand::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TrajectoryCommand_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TrajectoryCommand::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TrajectoryCommand>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TrajectoryCommand::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TrajectoryCommand>(), &TrajectoryCommand::ByteSizeLong,
              &TrajectoryCommand::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TrajectoryCommand, _impl_._cached_size_),
          false,
      },
      &TrajectoryCommand::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TrajectoryCommand_class_data_ =
        TrajectoryCommand::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TrajectoryCommand::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TrajectoryCommand_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TrajectoryCommand_class_data_.tc_table);
  return TrajectoryCommand_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 88, 2>
TrajectoryCommand::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TrajectoryCommand, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TrajectoryCommand_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::TrajectoryCommand>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TrajectoryCommand, _impl_.robot_id_)}},
    // string trajectory_id = 2 [json_name = "trajectoryId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TrajectoryCommand, _impl_.trajectory_id_)}},
    // repeated .agricultural.robot.navigation.v1.TrajectoryPoint points = 3 [json_name = "points"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TrajectoryCommand, _impl_.points_)}},
    // .agricultural.robot.navigation.v1.TrajectoryOptions options = 4 [json_name = "options"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 1, PROTOBUF_FIELD_OFFSET(TrajectoryCommand, _impl_.options_)}},
    // string frame_id = 5 [json_name = "frameId"];
    {::_pbi::TcParser::FastUS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(TrajectoryCommand, _impl_.frame_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(TrajectoryCommand, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string trajectory_id = 2 [json_name = "trajectoryId"];
    {PROTOBUF_FIELD_OFFSET(TrajectoryCommand, _impl_.trajectory_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .agricultural.robot.navigation.v1.TrajectoryPoint points = 3 [json_name = "points"];
    {PROTOBUF_FIELD_OFFSET(TrajectoryCommand, _impl_.points_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agricultural.robot.navigation.v1.TrajectoryOptions options = 4 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(TrajectoryCommand, _impl_.options_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string frame_id = 5 [json_name = "frameId"];
    {PROTOBUF_FIELD_OFFSET(TrajectoryCommand, _impl_.frame_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::TrajectoryPoint>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::TrajectoryOptions>()},
  }},
  {{
    "\62\10\15\0\0\10\0\0"
    "agricultural.robot.navigation.v1.TrajectoryCommand"
    "robot_id"
    "trajectory_id"
    "frame_id"
  }},
};
PROTOBUF_NOINLINE void TrajectoryCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.TrajectoryCommand)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.points_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.robot_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.trajectory_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.frame_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TrajectoryCommand::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TrajectoryCommand& this_ = static_cast<const TrajectoryCommand&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TrajectoryCommand::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TrajectoryCommand& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.TrajectoryCommand)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.TrajectoryCommand.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string trajectory_id = 2 [json_name = "trajectoryId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_trajectory_id().empty()) {
      const ::std::string& _s = this_._internal_trajectory_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.TrajectoryCommand.trajectory_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // repeated .agricultural.robot.navigation.v1.TrajectoryPoint points = 3 [json_name = "points"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_points_size());
       i < n; i++) {
    const auto& repfield = this_._internal_points().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.TrajectoryOptions options = 4 [json_name = "options"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
        stream);
  }

  // string frame_id = 5 [json_name = "frameId"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (!this_._internal_frame_id().empty()) {
      const ::std::string& _s = this_._internal_frame_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.TrajectoryCommand.frame_id");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.TrajectoryCommand)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TrajectoryCommand::ByteSizeLong(const MessageLite& base) {
  const TrajectoryCommand& this_ = static_cast<const TrajectoryCommand&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TrajectoryCommand::ByteSizeLong() const {
  const TrajectoryCommand& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.TrajectoryCommand)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .agricultural.robot.navigation.v1.TrajectoryPoint points = 3 [json_name = "points"];
    {
      total_size += 1UL * this_._internal_points_size();
      for (const auto& msg : this_._internal_points()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // string trajectory_id = 2 [json_name = "trajectoryId"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_trajectory_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_trajectory_id());
      }
    }
    // string frame_id = 5 [json_name = "frameId"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_frame_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_frame_id());
      }
    }
    // .agricultural.robot.navigation.v1.TrajectoryOptions options = 4 [json_name = "options"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TrajectoryCommand::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TrajectoryCommand*>(&to_msg);
  auto& from = static_cast<const TrajectoryCommand&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.TrajectoryCommand)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_points()->MergeFrom(
      from._internal_points());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_trajectory_id().empty()) {
        _this->_internal_set_trajectory_id(from._internal_trajectory_id());
      } else {
        if (_this->_impl_.trajectory_id_.IsDefault()) {
          _this->_internal_set_trajectory_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_frame_id().empty()) {
        _this->_internal_set_frame_id(from._internal_frame_id());
      } else {
        if (_this->_impl_.frame_id_.IsDefault()) {
          _this->_internal_set_frame_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TrajectoryCommand::CopyFrom(const TrajectoryCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.TrajectoryCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TrajectoryCommand::InternalSwap(TrajectoryCommand* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.points_.InternalSwap(&other->_impl_.points_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trajectory_id_, &other->_impl_.trajectory_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.frame_id_, &other->_impl_.frame_id_, arena);
  swap(_impl_.options_, other->_impl_.options_);
}

::google::protobuf::Metadata TrajectoryCommand::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Waypoint::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Waypoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Waypoint, _impl_._has_bits_);
};

void Waypoint::clear_max_duration_at_waypoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.max_duration_at_waypoint_ != nullptr) _impl_.max_duration_at_waypoint_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
Waypoint::Waypoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Waypoint_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.Waypoint)
}
PROTOBUF_NDEBUG_INLINE Waypoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::Waypoint& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        actions_{visibility, arena, from.actions_},
        waypoint_id_(arena, from.waypoint_id_) {}

Waypoint::Waypoint(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Waypoint& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Waypoint_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Waypoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pose_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pose_)
                : nullptr;
  _impl_.max_duration_at_waypoint_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.max_duration_at_waypoint_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.Waypoint)
}
PROTOBUF_NDEBUG_INLINE Waypoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        actions_{visibility, arena},
        waypoint_id_(arena) {}

inline void Waypoint::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pose_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, pose_) +
               sizeof(Impl_::type_));
}
Waypoint::~Waypoint() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.Waypoint)
  SharedDtor(*this);
}
inline void Waypoint::SharedDtor(MessageLite& self) {
  Waypoint& this_ = static_cast<Waypoint&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.waypoint_id_.Destroy();
  delete this_._impl_.pose_;
  delete this_._impl_.max_duration_at_waypoint_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Waypoint::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Waypoint(arena);
}
constexpr auto Waypoint::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Waypoint, _impl_.actions_) +
          decltype(Waypoint::_impl_.actions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Waypoint), alignof(Waypoint), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Waypoint::PlacementNew_,
                                 sizeof(Waypoint),
                                 alignof(Waypoint));
  }
}
constexpr auto Waypoint::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Waypoint_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Waypoint::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Waypoint>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Waypoint::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Waypoint>(), &Waypoint::ByteSizeLong,
              &Waypoint::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Waypoint, _impl_._cached_size_),
          false,
      },
      &Waypoint::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Waypoint_class_data_ =
        Waypoint::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Waypoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Waypoint_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Waypoint_class_data_.tc_table);
  return Waypoint_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 61, 2>
Waypoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Waypoint, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Waypoint_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Waypoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string waypoint_id = 1 [json_name = "waypointId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Waypoint, _impl_.waypoint_id_)}},
    // .agricultural.robot.navigation.v1.PoseWithCovariance pose = 2 [json_name = "pose"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Waypoint, _impl_.pose_)}},
    // .agricultural.robot.navigation.v1.WaypointType type = 3 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Waypoint, _impl_.type_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(Waypoint, _impl_.type_)}},
    // .google.protobuf.Duration max_duration_at_waypoint = 4 [json_name = "maxDurationAtWaypoint"];
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 1, PROTOBUF_FIELD_OFFSET(Waypoint, _impl_.max_duration_at_waypoint_)}},
    // repeated .agricultural.robot.navigation.v1.WaypointAction actions = 5 [json_name = "actions"];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 2, PROTOBUF_FIELD_OFFSET(Waypoint, _impl_.actions_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string waypoint_id = 1 [json_name = "waypointId"];
    {PROTOBUF_FIELD_OFFSET(Waypoint, _impl_.waypoint_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.PoseWithCovariance pose = 2 [json_name = "pose"];
    {PROTOBUF_FIELD_OFFSET(Waypoint, _impl_.pose_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agricultural.robot.navigation.v1.WaypointType type = 3 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(Waypoint, _impl_.type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .google.protobuf.Duration max_duration_at_waypoint = 4 [json_name = "maxDurationAtWaypoint"];
    {PROTOBUF_FIELD_OFFSET(Waypoint, _impl_.max_duration_at_waypoint_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .agricultural.robot.navigation.v1.WaypointAction actions = 5 [json_name = "actions"];
    {PROTOBUF_FIELD_OFFSET(Waypoint, _impl_.actions_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::PoseWithCovariance>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::WaypointAction>()},
  }},
  {{
    "\51\13\0\0\0\0\0\0"
    "agricultural.robot.navigation.v1.Waypoint"
    "waypoint_id"
  }},
};
PROTOBUF_NOINLINE void Waypoint::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.Waypoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.actions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.waypoint_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.pose_ != nullptr);
      _impl_.pose_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.max_duration_at_waypoint_ != nullptr);
      _impl_.max_duration_at_waypoint_->Clear();
    }
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Waypoint::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Waypoint& this_ = static_cast<const Waypoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Waypoint::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Waypoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.Waypoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string waypoint_id = 1 [json_name = "waypointId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_waypoint_id().empty()) {
      const ::std::string& _s = this_._internal_waypoint_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.Waypoint.waypoint_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.PoseWithCovariance pose = 2 [json_name = "pose"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.pose_, this_._impl_.pose_->GetCachedSize(), target,
        stream);
  }

  // .agricultural.robot.navigation.v1.WaypointType type = 3 [json_name = "type"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_type(), target);
    }
  }

  // .google.protobuf.Duration max_duration_at_waypoint = 4 [json_name = "maxDurationAtWaypoint"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.max_duration_at_waypoint_, this_._impl_.max_duration_at_waypoint_->GetCachedSize(), target,
        stream);
  }

  // repeated .agricultural.robot.navigation.v1.WaypointAction actions = 5 [json_name = "actions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_actions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_actions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.Waypoint)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Waypoint::ByteSizeLong(const MessageLite& base) {
  const Waypoint& this_ = static_cast<const Waypoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Waypoint::ByteSizeLong() const {
  const Waypoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.Waypoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .agricultural.robot.navigation.v1.WaypointAction actions = 5 [json_name = "actions"];
    {
      total_size += 1UL * this_._internal_actions_size();
      for (const auto& msg : this_._internal_actions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string waypoint_id = 1 [json_name = "waypointId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_waypoint_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_waypoint_id());
      }
    }
    // .agricultural.robot.navigation.v1.PoseWithCovariance pose = 2 [json_name = "pose"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pose_);
    }
    // .google.protobuf.Duration max_duration_at_waypoint = 4 [json_name = "maxDurationAtWaypoint"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.max_duration_at_waypoint_);
    }
    // .agricultural.robot.navigation.v1.WaypointType type = 3 [json_name = "type"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Waypoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Waypoint*>(&to_msg);
  auto& from = static_cast<const Waypoint&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.Waypoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_actions()->MergeFrom(
      from._internal_actions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_waypoint_id().empty()) {
        _this->_internal_set_waypoint_id(from._internal_waypoint_id());
      } else {
        if (_this->_impl_.waypoint_id_.IsDefault()) {
          _this->_internal_set_waypoint_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.pose_ != nullptr);
      if (_this->_impl_.pose_ == nullptr) {
        _this->_impl_.pose_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pose_);
      } else {
        _this->_impl_.pose_->MergeFrom(*from._impl_.pose_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.max_duration_at_waypoint_ != nullptr);
      if (_this->_impl_.max_duration_at_waypoint_ == nullptr) {
        _this->_impl_.max_duration_at_waypoint_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.max_duration_at_waypoint_);
      } else {
        _this->_impl_.max_duration_at_waypoint_->MergeFrom(*from._impl_.max_duration_at_waypoint_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Waypoint::CopyFrom(const Waypoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.Waypoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Waypoint::InternalSwap(Waypoint* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.actions_.InternalSwap(&other->_impl_.actions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.waypoint_id_, &other->_impl_.waypoint_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Waypoint, _impl_.type_)
      + sizeof(Waypoint::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(Waypoint, _impl_.pose_)>(
          reinterpret_cast<char*>(&_impl_.pose_),
          reinterpret_cast<char*>(&other->_impl_.pose_));
}

::google::protobuf::Metadata Waypoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TrajectoryPoint::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TrajectoryPoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_._has_bits_);
};

void TrajectoryPoint::clear_time_from_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_from_start_ != nullptr) _impl_.time_from_start_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
TrajectoryPoint::TrajectoryPoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TrajectoryPoint_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.TrajectoryPoint)
}
PROTOBUF_NDEBUG_INLINE TrajectoryPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::TrajectoryPoint& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        accelerations_{visibility, arena, from.accelerations_} {}

TrajectoryPoint::TrajectoryPoint(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TrajectoryPoint& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TrajectoryPoint_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TrajectoryPoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pose_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pose_)
                : nullptr;
  _impl_.velocity_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.velocity_)
                : nullptr;
  _impl_.time_from_start_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_from_start_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.TrajectoryPoint)
}
PROTOBUF_NDEBUG_INLINE TrajectoryPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        accelerations_{visibility, arena} {}

inline void TrajectoryPoint::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pose_),
           0,
           offsetof(Impl_, time_from_start_) -
               offsetof(Impl_, pose_) +
               sizeof(Impl_::time_from_start_));
}
TrajectoryPoint::~TrajectoryPoint() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.TrajectoryPoint)
  SharedDtor(*this);
}
inline void TrajectoryPoint::SharedDtor(MessageLite& self) {
  TrajectoryPoint& this_ = static_cast<TrajectoryPoint&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pose_;
  delete this_._impl_.velocity_;
  delete this_._impl_.time_from_start_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TrajectoryPoint::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TrajectoryPoint(arena);
}
constexpr auto TrajectoryPoint::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.accelerations_) +
          decltype(TrajectoryPoint::_impl_.accelerations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TrajectoryPoint), alignof(TrajectoryPoint), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TrajectoryPoint::PlacementNew_,
                                 sizeof(TrajectoryPoint),
                                 alignof(TrajectoryPoint));
  }
}
constexpr auto TrajectoryPoint::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TrajectoryPoint_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TrajectoryPoint::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TrajectoryPoint>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TrajectoryPoint::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TrajectoryPoint>(), &TrajectoryPoint::ByteSizeLong,
              &TrajectoryPoint::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_._cached_size_),
          false,
      },
      &TrajectoryPoint::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TrajectoryPoint_class_data_ =
        TrajectoryPoint::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TrajectoryPoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TrajectoryPoint_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TrajectoryPoint_class_data_.tc_table);
  return TrajectoryPoint_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 0, 2>
TrajectoryPoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TrajectoryPoint_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::TrajectoryPoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated double accelerations = 4 [json_name = "accelerations"];
    {::_pbi::TcParser::FastF64P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.accelerations_)}},
    // .agricultural.robot.navigation.v1.Pose pose = 1 [json_name = "pose"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.pose_)}},
    // .agricultural.robot.navigation.v1.Twist velocity = 2 [json_name = "velocity"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.velocity_)}},
    // .google.protobuf.Timestamp time_from_start = 3 [json_name = "timeFromStart"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.time_from_start_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agricultural.robot.navigation.v1.Pose pose = 1 [json_name = "pose"];
    {PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.pose_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agricultural.robot.navigation.v1.Twist velocity = 2 [json_name = "velocity"];
    {PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.velocity_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp time_from_start = 3 [json_name = "timeFromStart"];
    {PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.time_from_start_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated double accelerations = 4 [json_name = "accelerations"];
    {PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.accelerations_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Pose>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Twist>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TrajectoryPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.TrajectoryPoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accelerations_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.pose_ != nullptr);
      _impl_.pose_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.velocity_ != nullptr);
      _impl_.velocity_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.time_from_start_ != nullptr);
      _impl_.time_from_start_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TrajectoryPoint::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TrajectoryPoint& this_ = static_cast<const TrajectoryPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TrajectoryPoint::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TrajectoryPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.TrajectoryPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.Pose pose = 1 [json_name = "pose"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.pose_, this_._impl_.pose_->GetCachedSize(), target,
        stream);
  }

  // .agricultural.robot.navigation.v1.Twist velocity = 2 [json_name = "velocity"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.velocity_, this_._impl_.velocity_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Timestamp time_from_start = 3 [json_name = "timeFromStart"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.time_from_start_, this_._impl_.time_from_start_->GetCachedSize(), target,
        stream);
  }

  // repeated double accelerations = 4 [json_name = "accelerations"];
  if (this_._internal_accelerations_size() > 0) {
    target = stream->WriteFixedPacked(4, this_._internal_accelerations(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.TrajectoryPoint)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TrajectoryPoint::ByteSizeLong(const MessageLite& base) {
  const TrajectoryPoint& this_ = static_cast<const TrajectoryPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TrajectoryPoint::ByteSizeLong() const {
  const TrajectoryPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.TrajectoryPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated double accelerations = 4 [json_name = "accelerations"];
    {
      ::size_t data_size = ::size_t{8} *
          ::_pbi::FromIntSize(this_._internal_accelerations_size());
      ::size_t tag_size = data_size == 0
          ? 0
          : 1 + ::_pbi::WireFormatLite::Int32Size(
                              static_cast<::int32_t>(data_size));
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .agricultural.robot.navigation.v1.Pose pose = 1 [json_name = "pose"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pose_);
    }
    // .agricultural.robot.navigation.v1.Twist velocity = 2 [json_name = "velocity"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.velocity_);
    }
    // .google.protobuf.Timestamp time_from_start = 3 [json_name = "timeFromStart"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_from_start_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TrajectoryPoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TrajectoryPoint*>(&to_msg);
  auto& from = static_cast<const TrajectoryPoint&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.TrajectoryPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_accelerations()->MergeFrom(from._internal_accelerations());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.pose_ != nullptr);
      if (_this->_impl_.pose_ == nullptr) {
        _this->_impl_.pose_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pose_);
      } else {
        _this->_impl_.pose_->MergeFrom(*from._impl_.pose_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.velocity_ != nullptr);
      if (_this->_impl_.velocity_ == nullptr) {
        _this->_impl_.velocity_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.velocity_);
      } else {
        _this->_impl_.velocity_->MergeFrom(*from._impl_.velocity_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.time_from_start_ != nullptr);
      if (_this->_impl_.time_from_start_ == nullptr) {
        _this->_impl_.time_from_start_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_from_start_);
      } else {
        _this->_impl_.time_from_start_->MergeFrom(*from._impl_.time_from_start_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TrajectoryPoint::CopyFrom(const TrajectoryPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.TrajectoryPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TrajectoryPoint::InternalSwap(TrajectoryPoint* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.accelerations_.InternalSwap(&other->_impl_.accelerations_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.time_from_start_)
      + sizeof(TrajectoryPoint::_impl_.time_from_start_)
      - PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.pose_)>(
          reinterpret_cast<char*>(&_impl_.pose_),
          reinterpret_cast<char*>(&other->_impl_.pose_));
}

::google::protobuf::Metadata TrajectoryPoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NavigationOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NavigationOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_._has_bits_);
};

NavigationOptions::NavigationOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NavigationOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.NavigationOptions)
}
PROTOBUF_NDEBUG_INLINE NavigationOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::NavigationOptions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        avoid_zones_{visibility, arena, from.avoid_zones_} {}

NavigationOptions::NavigationOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NavigationOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NavigationOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NavigationOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tolerance_linear_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tolerance_linear_),
           offsetof(Impl_, max_retries_) -
               offsetof(Impl_, tolerance_linear_) +
               sizeof(Impl_::max_retries_));

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.NavigationOptions)
}
PROTOBUF_NDEBUG_INLINE NavigationOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        avoid_zones_{visibility, arena} {}

inline void NavigationOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tolerance_linear_),
           0,
           offsetof(Impl_, max_retries_) -
               offsetof(Impl_, tolerance_linear_) +
               sizeof(Impl_::max_retries_));
}
NavigationOptions::~NavigationOptions() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.NavigationOptions)
  SharedDtor(*this);
}
inline void NavigationOptions::SharedDtor(MessageLite& self) {
  NavigationOptions& this_ = static_cast<NavigationOptions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NavigationOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NavigationOptions(arena);
}
constexpr auto NavigationOptions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.avoid_zones_) +
          decltype(NavigationOptions::_impl_.avoid_zones_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(NavigationOptions), alignof(NavigationOptions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NavigationOptions::PlacementNew_,
                                 sizeof(NavigationOptions),
                                 alignof(NavigationOptions));
  }
}
constexpr auto NavigationOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NavigationOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NavigationOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NavigationOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NavigationOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NavigationOptions>(), &NavigationOptions::ByteSizeLong,
              &NavigationOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_._cached_size_),
          false,
      },
      &NavigationOptions::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NavigationOptions_class_data_ =
        NavigationOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NavigationOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NavigationOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NavigationOptions_class_data_.tc_table);
  return NavigationOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 78, 2>
NavigationOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    NavigationOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::NavigationOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 max_retries = 8 [json_name = "maxRetries"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NavigationOptions, _impl_.max_retries_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.max_retries_)}},
    // .agricultural.robot.navigation.v1.PlannerType planner = 1 [json_name = "planner"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NavigationOptions, _impl_.planner_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.planner_)}},
    // double tolerance_linear = 2 [json_name = "toleranceLinear"];
    {::_pbi::TcParser::FastF64S1,
     {17, 0, 0, PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.tolerance_linear_)}},
    // double tolerance_angular = 3 [json_name = "toleranceAngular"];
    {::_pbi::TcParser::FastF64S1,
     {25, 3, 0, PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.tolerance_angular_)}},
    // bool use_obstacle_avoidance = 4 [json_name = "useObstacleAvoidance"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NavigationOptions, _impl_.use_obstacle_avoidance_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.use_obstacle_avoidance_)}},
    // repeated string avoid_zones = 5 [json_name = "avoidZones"];
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.avoid_zones_)}},
    // .agricultural.robot.navigation.v1.NavigationBehavior behavior = 6 [json_name = "behavior"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NavigationOptions, _impl_.behavior_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.behavior_)}},
    // uint32 max_planning_time_ms = 7 [json_name = "maxPlanningTimeMs"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NavigationOptions, _impl_.max_planning_time_ms_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.max_planning_time_ms_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agricultural.robot.navigation.v1.PlannerType planner = 1 [json_name = "planner"];
    {PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.planner_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // double tolerance_linear = 2 [json_name = "toleranceLinear"];
    {PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.tolerance_linear_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double tolerance_angular = 3 [json_name = "toleranceAngular"];
    {PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.tolerance_angular_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // bool use_obstacle_avoidance = 4 [json_name = "useObstacleAvoidance"];
    {PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.use_obstacle_avoidance_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated string avoid_zones = 5 [json_name = "avoidZones"];
    {PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.avoid_zones_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .agricultural.robot.navigation.v1.NavigationBehavior behavior = 6 [json_name = "behavior"];
    {PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.behavior_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // uint32 max_planning_time_ms = 7 [json_name = "maxPlanningTimeMs"];
    {PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.max_planning_time_ms_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 max_retries = 8 [json_name = "maxRetries"];
    {PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.max_retries_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\62\0\0\0\0\13\0\0\0\0\0\0\0\0\0\0"
    "agricultural.robot.navigation.v1.NavigationOptions"
    "avoid_zones"
  }},
};
PROTOBUF_NOINLINE void NavigationOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.NavigationOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.avoid_zones_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    ::memset(&_impl_.tolerance_linear_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_retries_) -
        reinterpret_cast<char*>(&_impl_.tolerance_linear_)) + sizeof(_impl_.max_retries_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NavigationOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NavigationOptions& this_ = static_cast<const NavigationOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NavigationOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NavigationOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.NavigationOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .agricultural.robot.navigation.v1.PlannerType planner = 1 [json_name = "planner"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_planner() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_planner(), target);
    }
  }

  // double tolerance_linear = 2 [json_name = "toleranceLinear"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_tolerance_linear()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_tolerance_linear(), target);
    }
  }

  // double tolerance_angular = 3 [json_name = "toleranceAngular"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_tolerance_angular()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_tolerance_angular(), target);
    }
  }

  // bool use_obstacle_avoidance = 4 [json_name = "useObstacleAvoidance"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_use_obstacle_avoidance() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_use_obstacle_avoidance(), target);
    }
  }

  // repeated string avoid_zones = 5 [json_name = "avoidZones"];
  for (int i = 0, n = this_._internal_avoid_zones_size(); i < n; ++i) {
    const auto& s = this_._internal_avoid_zones().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.NavigationOptions.avoid_zones");
    target = stream->WriteString(5, s, target);
  }

  // .agricultural.robot.navigation.v1.NavigationBehavior behavior = 6 [json_name = "behavior"];
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_behavior() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this_._internal_behavior(), target);
    }
  }

  // uint32 max_planning_time_ms = 7 [json_name = "maxPlanningTimeMs"];
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_max_planning_time_ms() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          7, this_._internal_max_planning_time_ms(), target);
    }
  }

  // uint32 max_retries = 8 [json_name = "maxRetries"];
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_max_retries() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          8, this_._internal_max_retries(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.NavigationOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NavigationOptions::ByteSizeLong(const MessageLite& base) {
  const NavigationOptions& this_ = static_cast<const NavigationOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NavigationOptions::ByteSizeLong() const {
  const NavigationOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.NavigationOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string avoid_zones = 5 [json_name = "avoidZones"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_avoid_zones().size());
      for (int i = 0, n = this_._internal_avoid_zones().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_avoid_zones().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // double tolerance_linear = 2 [json_name = "toleranceLinear"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_tolerance_linear()) != 0) {
        total_size += 9;
      }
    }
    // .agricultural.robot.navigation.v1.PlannerType planner = 1 [json_name = "planner"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_planner() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_planner());
      }
    }
    // bool use_obstacle_avoidance = 4 [json_name = "useObstacleAvoidance"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_use_obstacle_avoidance() != 0) {
        total_size += 2;
      }
    }
    // double tolerance_angular = 3 [json_name = "toleranceAngular"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_tolerance_angular()) != 0) {
        total_size += 9;
      }
    }
    // .agricultural.robot.navigation.v1.NavigationBehavior behavior = 6 [json_name = "behavior"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_behavior() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_behavior());
      }
    }
    // uint32 max_planning_time_ms = 7 [json_name = "maxPlanningTimeMs"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_max_planning_time_ms() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_max_planning_time_ms());
      }
    }
    // uint32 max_retries = 8 [json_name = "maxRetries"];
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_max_retries() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_max_retries());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NavigationOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NavigationOptions*>(&to_msg);
  auto& from = static_cast<const NavigationOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.NavigationOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_avoid_zones()->MergeFrom(from._internal_avoid_zones());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_tolerance_linear()) != 0) {
        _this->_impl_.tolerance_linear_ = from._impl_.tolerance_linear_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_planner() != 0) {
        _this->_impl_.planner_ = from._impl_.planner_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_use_obstacle_avoidance() != 0) {
        _this->_impl_.use_obstacle_avoidance_ = from._impl_.use_obstacle_avoidance_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_tolerance_angular()) != 0) {
        _this->_impl_.tolerance_angular_ = from._impl_.tolerance_angular_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_behavior() != 0) {
        _this->_impl_.behavior_ = from._impl_.behavior_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_max_planning_time_ms() != 0) {
        _this->_impl_.max_planning_time_ms_ = from._impl_.max_planning_time_ms_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_max_retries() != 0) {
        _this->_impl_.max_retries_ = from._impl_.max_retries_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NavigationOptions::CopyFrom(const NavigationOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.NavigationOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NavigationOptions::InternalSwap(NavigationOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.avoid_zones_.InternalSwap(&other->_impl_.avoid_zones_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.max_retries_)
      + sizeof(NavigationOptions::_impl_.max_retries_)
      - PROTOBUF_FIELD_OFFSET(NavigationOptions, _impl_.tolerance_linear_)>(
          reinterpret_cast<char*>(&_impl_.tolerance_linear_),
          reinterpret_cast<char*>(&other->_impl_.tolerance_linear_));
}

::google::protobuf::Metadata NavigationOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TrajectoryOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TrajectoryOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TrajectoryOptions, _impl_._has_bits_);
};

TrajectoryOptions::TrajectoryOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TrajectoryOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.TrajectoryOptions)
}
TrajectoryOptions::TrajectoryOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TrajectoryOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TrajectoryOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE TrajectoryOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TrajectoryOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, velocity_scaling_),
           0,
           offsetof(Impl_, execution_mode_) -
               offsetof(Impl_, velocity_scaling_) +
               sizeof(Impl_::execution_mode_));
}
TrajectoryOptions::~TrajectoryOptions() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.TrajectoryOptions)
  SharedDtor(*this);
}
inline void TrajectoryOptions::SharedDtor(MessageLite& self) {
  TrajectoryOptions& this_ = static_cast<TrajectoryOptions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TrajectoryOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TrajectoryOptions(arena);
}
constexpr auto TrajectoryOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TrajectoryOptions),
                                            alignof(TrajectoryOptions));
}
constexpr auto TrajectoryOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TrajectoryOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TrajectoryOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TrajectoryOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TrajectoryOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TrajectoryOptions>(), &TrajectoryOptions::ByteSizeLong,
              &TrajectoryOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TrajectoryOptions, _impl_._cached_size_),
          false,
      },
      &TrajectoryOptions::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TrajectoryOptions_class_data_ =
        TrajectoryOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TrajectoryOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TrajectoryOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TrajectoryOptions_class_data_.tc_table);
  return TrajectoryOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
TrajectoryOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TrajectoryOptions, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TrajectoryOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::TrajectoryOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .agricultural.robot.navigation.v1.TrajectoryExecutionMode execution_mode = 4 [json_name = "executionMode"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TrajectoryOptions, _impl_.execution_mode_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(TrajectoryOptions, _impl_.execution_mode_)}},
    // bool interpolate_path = 1 [json_name = "interpolatePath"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TrajectoryOptions, _impl_.interpolate_path_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TrajectoryOptions, _impl_.interpolate_path_)}},
    // double velocity_scaling = 2 [json_name = "velocityScaling"];
    {::_pbi::TcParser::FastF64S1,
     {17, 0, 0, PROTOBUF_FIELD_OFFSET(TrajectoryOptions, _impl_.velocity_scaling_)}},
    // bool check_collisions = 3 [json_name = "checkCollisions"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TrajectoryOptions, _impl_.check_collisions_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TrajectoryOptions, _impl_.check_collisions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool interpolate_path = 1 [json_name = "interpolatePath"];
    {PROTOBUF_FIELD_OFFSET(TrajectoryOptions, _impl_.interpolate_path_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // double velocity_scaling = 2 [json_name = "velocityScaling"];
    {PROTOBUF_FIELD_OFFSET(TrajectoryOptions, _impl_.velocity_scaling_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // bool check_collisions = 3 [json_name = "checkCollisions"];
    {PROTOBUF_FIELD_OFFSET(TrajectoryOptions, _impl_.check_collisions_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .agricultural.robot.navigation.v1.TrajectoryExecutionMode execution_mode = 4 [json_name = "executionMode"];
    {PROTOBUF_FIELD_OFFSET(TrajectoryOptions, _impl_.execution_mode_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void TrajectoryOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.TrajectoryOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.velocity_scaling_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.execution_mode_) -
        reinterpret_cast<char*>(&_impl_.velocity_scaling_)) + sizeof(_impl_.execution_mode_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TrajectoryOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TrajectoryOptions& this_ = static_cast<const TrajectoryOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TrajectoryOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TrajectoryOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.TrajectoryOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool interpolate_path = 1 [json_name = "interpolatePath"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_interpolate_path() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_interpolate_path(), target);
    }
  }

  // double velocity_scaling = 2 [json_name = "velocityScaling"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_velocity_scaling()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_velocity_scaling(), target);
    }
  }

  // bool check_collisions = 3 [json_name = "checkCollisions"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_check_collisions() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_check_collisions(), target);
    }
  }

  // .agricultural.robot.navigation.v1.TrajectoryExecutionMode execution_mode = 4 [json_name = "executionMode"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_execution_mode() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_execution_mode(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.TrajectoryOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TrajectoryOptions::ByteSizeLong(const MessageLite& base) {
  const TrajectoryOptions& this_ = static_cast<const TrajectoryOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TrajectoryOptions::ByteSizeLong() const {
  const TrajectoryOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.TrajectoryOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // double velocity_scaling = 2 [json_name = "velocityScaling"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_velocity_scaling()) != 0) {
        total_size += 9;
      }
    }
    // bool interpolate_path = 1 [json_name = "interpolatePath"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_interpolate_path() != 0) {
        total_size += 2;
      }
    }
    // bool check_collisions = 3 [json_name = "checkCollisions"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_check_collisions() != 0) {
        total_size += 2;
      }
    }
    // .agricultural.robot.navigation.v1.TrajectoryExecutionMode execution_mode = 4 [json_name = "executionMode"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_execution_mode() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_execution_mode());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TrajectoryOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TrajectoryOptions*>(&to_msg);
  auto& from = static_cast<const TrajectoryOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.TrajectoryOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_velocity_scaling()) != 0) {
        _this->_impl_.velocity_scaling_ = from._impl_.velocity_scaling_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_interpolate_path() != 0) {
        _this->_impl_.interpolate_path_ = from._impl_.interpolate_path_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_check_collisions() != 0) {
        _this->_impl_.check_collisions_ = from._impl_.check_collisions_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_execution_mode() != 0) {
        _this->_impl_.execution_mode_ = from._impl_.execution_mode_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TrajectoryOptions::CopyFrom(const TrajectoryOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.TrajectoryOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TrajectoryOptions::InternalSwap(TrajectoryOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrajectoryOptions, _impl_.execution_mode_)
      + sizeof(TrajectoryOptions::_impl_.execution_mode_)
      - PROTOBUF_FIELD_OFFSET(TrajectoryOptions, _impl_.velocity_scaling_)>(
          reinterpret_cast<char*>(&_impl_.velocity_scaling_),
          reinterpret_cast<char*>(&other->_impl_.velocity_scaling_));
}

::google::protobuf::Metadata TrajectoryOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
WaypointAction_ParametersEntry_DoNotUse::WaypointAction_ParametersEntry_DoNotUse()
    : SuperType(WaypointAction_ParametersEntry_DoNotUse_class_data_.base()) {}
WaypointAction_ParametersEntry_DoNotUse::WaypointAction_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, WaypointAction_ParametersEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
WaypointAction_ParametersEntry_DoNotUse::WaypointAction_ParametersEntry_DoNotUse() : SuperType() {}
WaypointAction_ParametersEntry_DoNotUse::WaypointAction_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL WaypointAction_ParametersEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WaypointAction_ParametersEntry_DoNotUse(arena);
}
constexpr auto WaypointAction_ParametersEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(WaypointAction_ParametersEntry_DoNotUse),
                                            alignof(WaypointAction_ParametersEntry_DoNotUse));
}
constexpr auto WaypointAction_ParametersEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WaypointAction_ParametersEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WaypointAction_ParametersEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WaypointAction_ParametersEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WaypointAction_ParametersEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&WaypointAction_ParametersEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WaypointAction_ParametersEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &WaypointAction_ParametersEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull WaypointAction_ParametersEntry_DoNotUse_class_data_ =
        WaypointAction_ParametersEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
WaypointAction_ParametersEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WaypointAction_ParametersEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WaypointAction_ParametersEntry_DoNotUse_class_data_.tc_table);
  return WaypointAction_ParametersEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 80, 2>
WaypointAction_ParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WaypointAction_ParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    WaypointAction_ParametersEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::WaypointAction_ParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(WaypointAction_ParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(WaypointAction_ParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(WaypointAction_ParametersEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(WaypointAction_ParametersEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\77\3\5\0\0\0\0\0"
    "agricultural.robot.navigation.v1.WaypointAction.ParametersEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class WaypointAction::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<WaypointAction>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WaypointAction, _impl_._has_bits_);
};

void WaypointAction::clear_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.duration_ != nullptr) _impl_.duration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
WaypointAction::WaypointAction(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WaypointAction_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.WaypointAction)
}
PROTOBUF_NDEBUG_INLINE WaypointAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::WaypointAction& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        parameters_{visibility, arena, from.parameters_} {}

WaypointAction::WaypointAction(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const WaypointAction& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WaypointAction_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WaypointAction* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.duration_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.duration_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.WaypointAction)
}
PROTOBUF_NDEBUG_INLINE WaypointAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        parameters_{visibility, arena} {}

inline void WaypointAction::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, duration_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, duration_) +
               sizeof(Impl_::type_));
}
WaypointAction::~WaypointAction() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.WaypointAction)
  SharedDtor(*this);
}
inline void WaypointAction::SharedDtor(MessageLite& self) {
  WaypointAction& this_ = static_cast<WaypointAction&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.duration_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL WaypointAction::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WaypointAction(arena);
}
constexpr auto WaypointAction::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(WaypointAction, _impl_.parameters_) +
          decltype(WaypointAction::_impl_.parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(WaypointAction, _impl_.parameters_) +
          decltype(WaypointAction::_impl_.parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(WaypointAction), alignof(WaypointAction), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&WaypointAction::PlacementNew_,
                                 sizeof(WaypointAction),
                                 alignof(WaypointAction));
  }
}
constexpr auto WaypointAction::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WaypointAction_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WaypointAction::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WaypointAction>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WaypointAction::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WaypointAction>(), &WaypointAction::ByteSizeLong,
              &WaypointAction::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WaypointAction, _impl_._cached_size_),
          false,
      },
      &WaypointAction::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull WaypointAction_class_data_ =
        WaypointAction::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
WaypointAction::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WaypointAction_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WaypointAction_class_data_.tc_table);
  return WaypointAction_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 2, 66, 2>
WaypointAction::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WaypointAction, _impl_._has_bits_),
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    WaypointAction_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::WaypointAction>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Duration duration = 2 [json_name = "duration"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(WaypointAction, _impl_.duration_)}},
    // .agricultural.robot.navigation.v1.WaypointActionType type = 1 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WaypointAction, _impl_.type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(WaypointAction, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agricultural.robot.navigation.v1.WaypointActionType type = 1 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(WaypointAction, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .google.protobuf.Duration duration = 2 [json_name = "duration"];
    {PROTOBUF_FIELD_OFFSET(WaypointAction, _impl_.duration_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> parameters = 3 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(WaypointAction, _impl_.parameters_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\57\0\0\12\0\0\0\0"
    "agricultural.robot.navigation.v1.WaypointAction"
    "parameters"
  }},
};
PROTOBUF_NOINLINE void WaypointAction::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.WaypointAction)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.duration_ != nullptr);
    _impl_.duration_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WaypointAction::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WaypointAction& this_ = static_cast<const WaypointAction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WaypointAction::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WaypointAction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.WaypointAction)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .agricultural.robot.navigation.v1.WaypointActionType type = 1 [json_name = "type"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Duration duration = 2 [json_name = "duration"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.duration_, this_._impl_.duration_->GetCachedSize(), target,
        stream);
  }

  // map<string, string> parameters = 3 [json_name = "parameters"];
  if (!this_._internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.WaypointAction.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.WaypointAction.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.WaypointAction.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.WaypointAction.parameters");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.WaypointAction)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WaypointAction::ByteSizeLong(const MessageLite& base) {
  const WaypointAction& this_ = static_cast<const WaypointAction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WaypointAction::ByteSizeLong() const {
  const WaypointAction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.WaypointAction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> parameters = 3 [json_name = "parameters"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_parameters_size());
      for (const auto& entry : this_._internal_parameters()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .google.protobuf.Duration duration = 2 [json_name = "duration"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.duration_);
    }
    // .agricultural.robot.navigation.v1.WaypointActionType type = 1 [json_name = "type"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WaypointAction::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WaypointAction*>(&to_msg);
  auto& from = static_cast<const WaypointAction&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.WaypointAction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.duration_ != nullptr);
      if (_this->_impl_.duration_ == nullptr) {
        _this->_impl_.duration_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.duration_);
      } else {
        _this->_impl_.duration_->MergeFrom(*from._impl_.duration_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WaypointAction::CopyFrom(const WaypointAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.WaypointAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WaypointAction::InternalSwap(WaypointAction* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WaypointAction, _impl_.type_)
      + sizeof(WaypointAction::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(WaypointAction, _impl_.duration_)>(
          reinterpret_cast<char*>(&_impl_.duration_),
          reinterpret_cast<char*>(&other->_impl_.duration_));
}

::google::protobuf::Metadata WaypointAction::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CancelGoalRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CancelGoalRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CancelGoalRequest, _impl_._has_bits_);
};

CancelGoalRequest::CancelGoalRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CancelGoalRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.CancelGoalRequest)
}
PROTOBUF_NDEBUG_INLINE CancelGoalRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::CancelGoalRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_),
        goal_id_(arena, from.goal_id_) {}

CancelGoalRequest::CancelGoalRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CancelGoalRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CancelGoalRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CancelGoalRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.CancelGoalRequest)
}
PROTOBUF_NDEBUG_INLINE CancelGoalRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena),
        goal_id_(arena) {}

inline void CancelGoalRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CancelGoalRequest::~CancelGoalRequest() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.CancelGoalRequest)
  SharedDtor(*this);
}
inline void CancelGoalRequest::SharedDtor(MessageLite& self) {
  CancelGoalRequest& this_ = static_cast<CancelGoalRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  this_._impl_.goal_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CancelGoalRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CancelGoalRequest(arena);
}
constexpr auto CancelGoalRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CancelGoalRequest),
                                            alignof(CancelGoalRequest));
}
constexpr auto CancelGoalRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CancelGoalRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CancelGoalRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CancelGoalRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CancelGoalRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CancelGoalRequest>(), &CancelGoalRequest::ByteSizeLong,
              &CancelGoalRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CancelGoalRequest, _impl_._cached_size_),
          false,
      },
      &CancelGoalRequest::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CancelGoalRequest_class_data_ =
        CancelGoalRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CancelGoalRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CancelGoalRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CancelGoalRequest_class_data_.tc_table);
  return CancelGoalRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 74, 2>
CancelGoalRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CancelGoalRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CancelGoalRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::CancelGoalRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string goal_id = 2 [json_name = "goalId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CancelGoalRequest, _impl_.goal_id_)}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CancelGoalRequest, _impl_.robot_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(CancelGoalRequest, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string goal_id = 2 [json_name = "goalId"];
    {PROTOBUF_FIELD_OFFSET(CancelGoalRequest, _impl_.goal_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\62\10\7\0\0\0\0\0"
    "agricultural.robot.navigation.v1.CancelGoalRequest"
    "robot_id"
    "goal_id"
  }},
};
PROTOBUF_NOINLINE void CancelGoalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.CancelGoalRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.robot_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.goal_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CancelGoalRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CancelGoalRequest& this_ = static_cast<const CancelGoalRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CancelGoalRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CancelGoalRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.CancelGoalRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.CancelGoalRequest.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string goal_id = 2 [json_name = "goalId"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_goal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.CancelGoalRequest.goal_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.CancelGoalRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CancelGoalRequest::ByteSizeLong(const MessageLite& base) {
  const CancelGoalRequest& this_ = static_cast<const CancelGoalRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CancelGoalRequest::ByteSizeLong() const {
  const CancelGoalRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.CancelGoalRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // optional string goal_id = 2 [json_name = "goalId"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_goal_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CancelGoalRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CancelGoalRequest*>(&to_msg);
  auto& from = static_cast<const CancelGoalRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.CancelGoalRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_goal_id(from._internal_goal_id());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelGoalRequest::CopyFrom(const CancelGoalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.CancelGoalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CancelGoalRequest::InternalSwap(CancelGoalRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.goal_id_, &other->_impl_.goal_id_, arena);
}

::google::protobuf::Metadata CancelGoalRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetNavigationStatusRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetNavigationStatusRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetNavigationStatusRequest, _impl_._has_bits_);
};

GetNavigationStatusRequest::GetNavigationStatusRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetNavigationStatusRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.GetNavigationStatusRequest)
}
PROTOBUF_NDEBUG_INLINE GetNavigationStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::GetNavigationStatusRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_) {}

GetNavigationStatusRequest::GetNavigationStatusRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetNavigationStatusRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetNavigationStatusRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetNavigationStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.GetNavigationStatusRequest)
}
PROTOBUF_NDEBUG_INLINE GetNavigationStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena) {}

inline void GetNavigationStatusRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetNavigationStatusRequest::~GetNavigationStatusRequest() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.GetNavigationStatusRequest)
  SharedDtor(*this);
}
inline void GetNavigationStatusRequest::SharedDtor(MessageLite& self) {
  GetNavigationStatusRequest& this_ = static_cast<GetNavigationStatusRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetNavigationStatusRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetNavigationStatusRequest(arena);
}
constexpr auto GetNavigationStatusRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetNavigationStatusRequest),
                                            alignof(GetNavigationStatusRequest));
}
constexpr auto GetNavigationStatusRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetNavigationStatusRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetNavigationStatusRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetNavigationStatusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetNavigationStatusRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetNavigationStatusRequest>(), &GetNavigationStatusRequest::ByteSizeLong,
              &GetNavigationStatusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetNavigationStatusRequest, _impl_._cached_size_),
          false,
      },
      &GetNavigationStatusRequest::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetNavigationStatusRequest_class_data_ =
        GetNavigationStatusRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetNavigationStatusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetNavigationStatusRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetNavigationStatusRequest_class_data_.tc_table);
  return GetNavigationStatusRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 76, 2>
GetNavigationStatusRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetNavigationStatusRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetNavigationStatusRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::GetNavigationStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetNavigationStatusRequest, _impl_.robot_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(GetNavigationStatusRequest, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\73\10\0\0\0\0\0\0"
    "agricultural.robot.navigation.v1.GetNavigationStatusRequest"
    "robot_id"
  }},
};
PROTOBUF_NOINLINE void GetNavigationStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.GetNavigationStatusRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.robot_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetNavigationStatusRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetNavigationStatusRequest& this_ = static_cast<const GetNavigationStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetNavigationStatusRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetNavigationStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.GetNavigationStatusRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.GetNavigationStatusRequest.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.GetNavigationStatusRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetNavigationStatusRequest::ByteSizeLong(const MessageLite& base) {
  const GetNavigationStatusRequest& this_ = static_cast<const GetNavigationStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetNavigationStatusRequest::ByteSizeLong() const {
  const GetNavigationStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.GetNavigationStatusRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string robot_id = 1 [json_name = "robotId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetNavigationStatusRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetNavigationStatusRequest*>(&to_msg);
  auto& from = static_cast<const GetNavigationStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.GetNavigationStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_robot_id().empty()) {
      _this->_internal_set_robot_id(from._internal_robot_id());
    } else {
      if (_this->_impl_.robot_id_.IsDefault()) {
        _this->_internal_set_robot_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetNavigationStatusRequest::CopyFrom(const GetNavigationStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.GetNavigationStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetNavigationStatusRequest::InternalSwap(GetNavigationStatusRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
}

::google::protobuf::Metadata GetNavigationStatusRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StreamNavigationStatusRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<StreamNavigationStatusRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StreamNavigationStatusRequest, _impl_._has_bits_);
};

StreamNavigationStatusRequest::StreamNavigationStatusRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StreamNavigationStatusRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.StreamNavigationStatusRequest)
}
PROTOBUF_NDEBUG_INLINE StreamNavigationStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::StreamNavigationStatusRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_) {}

StreamNavigationStatusRequest::StreamNavigationStatusRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StreamNavigationStatusRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StreamNavigationStatusRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StreamNavigationStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.frequency_hz_ = from._impl_.frequency_hz_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.StreamNavigationStatusRequest)
}
PROTOBUF_NDEBUG_INLINE StreamNavigationStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena) {}

inline void StreamNavigationStatusRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.frequency_hz_ = {};
}
StreamNavigationStatusRequest::~StreamNavigationStatusRequest() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.StreamNavigationStatusRequest)
  SharedDtor(*this);
}
inline void StreamNavigationStatusRequest::SharedDtor(MessageLite& self) {
  StreamNavigationStatusRequest& this_ = static_cast<StreamNavigationStatusRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL StreamNavigationStatusRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StreamNavigationStatusRequest(arena);
}
constexpr auto StreamNavigationStatusRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(StreamNavigationStatusRequest),
                                            alignof(StreamNavigationStatusRequest));
}
constexpr auto StreamNavigationStatusRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StreamNavigationStatusRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StreamNavigationStatusRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<StreamNavigationStatusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StreamNavigationStatusRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<StreamNavigationStatusRequest>(), &StreamNavigationStatusRequest::ByteSizeLong,
              &StreamNavigationStatusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StreamNavigationStatusRequest, _impl_._cached_size_),
          false,
      },
      &StreamNavigationStatusRequest::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull StreamNavigationStatusRequest_class_data_ =
        StreamNavigationStatusRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
StreamNavigationStatusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StreamNavigationStatusRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StreamNavigationStatusRequest_class_data_.tc_table);
  return StreamNavigationStatusRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 79, 2>
StreamNavigationStatusRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StreamNavigationStatusRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    StreamNavigationStatusRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::StreamNavigationStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 frequency_hz = 2 [json_name = "frequencyHz"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StreamNavigationStatusRequest, _impl_.frequency_hz_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(StreamNavigationStatusRequest, _impl_.frequency_hz_)}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StreamNavigationStatusRequest, _impl_.robot_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(StreamNavigationStatusRequest, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 frequency_hz = 2 [json_name = "frequencyHz"];
    {PROTOBUF_FIELD_OFFSET(StreamNavigationStatusRequest, _impl_.frequency_hz_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\76\10\0\0\0\0\0\0"
    "agricultural.robot.navigation.v1.StreamNavigationStatusRequest"
    "robot_id"
  }},
};
PROTOBUF_NOINLINE void StreamNavigationStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.StreamNavigationStatusRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.robot_id_.ClearNonDefaultToEmpty();
  }
  _impl_.frequency_hz_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL StreamNavigationStatusRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const StreamNavigationStatusRequest& this_ = static_cast<const StreamNavigationStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL StreamNavigationStatusRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const StreamNavigationStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.StreamNavigationStatusRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.StreamNavigationStatusRequest.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // uint32 frequency_hz = 2 [json_name = "frequencyHz"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_frequency_hz() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_frequency_hz(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.StreamNavigationStatusRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StreamNavigationStatusRequest::ByteSizeLong(const MessageLite& base) {
  const StreamNavigationStatusRequest& this_ = static_cast<const StreamNavigationStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StreamNavigationStatusRequest::ByteSizeLong() const {
  const StreamNavigationStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.StreamNavigationStatusRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // uint32 frequency_hz = 2 [json_name = "frequencyHz"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_frequency_hz() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_frequency_hz());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void StreamNavigationStatusRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StreamNavigationStatusRequest*>(&to_msg);
  auto& from = static_cast<const StreamNavigationStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.StreamNavigationStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_frequency_hz() != 0) {
        _this->_impl_.frequency_hz_ = from._impl_.frequency_hz_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreamNavigationStatusRequest::CopyFrom(const StreamNavigationStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.StreamNavigationStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StreamNavigationStatusRequest::InternalSwap(StreamNavigationStatusRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  swap(_impl_.frequency_hz_, other->_impl_.frequency_hz_);
}

::google::protobuf::Metadata StreamNavigationStatusRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NavigationResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NavigationResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NavigationResponse, _impl_._has_bits_);
};

void NavigationResponse::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
NavigationResponse::NavigationResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NavigationResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.NavigationResponse)
}
PROTOBUF_NDEBUG_INLINE NavigationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::NavigationResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_),
        goal_id_(arena, from.goal_id_) {}

NavigationResponse::NavigationResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NavigationResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NavigationResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NavigationResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, success_),
           offsetof(Impl_, result_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::result_));

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.NavigationResponse)
}
PROTOBUF_NDEBUG_INLINE NavigationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_(arena),
        goal_id_(arena) {}

inline void NavigationResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, result_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::result_));
}
NavigationResponse::~NavigationResponse() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.NavigationResponse)
  SharedDtor(*this);
}
inline void NavigationResponse::SharedDtor(MessageLite& self) {
  NavigationResponse& this_ = static_cast<NavigationResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.goal_id_.Destroy();
  delete this_._impl_.timestamp_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NavigationResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NavigationResponse(arena);
}
constexpr auto NavigationResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NavigationResponse),
                                            alignof(NavigationResponse));
}
constexpr auto NavigationResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NavigationResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NavigationResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NavigationResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NavigationResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NavigationResponse>(), &NavigationResponse::ByteSizeLong,
              &NavigationResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NavigationResponse, _impl_._cached_size_),
          false,
      },
      &NavigationResponse::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NavigationResponse_class_data_ =
        NavigationResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NavigationResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NavigationResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NavigationResponse_class_data_.tc_table);
  return NavigationResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 74, 2>
NavigationResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NavigationResponse, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    NavigationResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::NavigationResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1 [json_name = "success"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NavigationResponse, _impl_.success_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(NavigationResponse, _impl_.success_)}},
    // string message = 2 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(NavigationResponse, _impl_.message_)}},
    // string goal_id = 3 [json_name = "goalId"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(NavigationResponse, _impl_.goal_id_)}},
    // .agricultural.robot.navigation.v1.NavigationResult result = 4 [json_name = "result"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NavigationResponse, _impl_.result_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(NavigationResponse, _impl_.result_)}},
    // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(NavigationResponse, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1 [json_name = "success"];
    {PROTOBUF_FIELD_OFFSET(NavigationResponse, _impl_.success_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string message = 2 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(NavigationResponse, _impl_.message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string goal_id = 3 [json_name = "goalId"];
    {PROTOBUF_FIELD_OFFSET(NavigationResponse, _impl_.goal_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.NavigationResult result = 4 [json_name = "result"];
    {PROTOBUF_FIELD_OFFSET(NavigationResponse, _impl_.result_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(NavigationResponse, _impl_.timestamp_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
    "\63\0\7\7\0\0\0\0"
    "agricultural.robot.navigation.v1.NavigationResponse"
    "message"
    "goal_id"
  }},
};
PROTOBUF_NOINLINE void NavigationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.NavigationResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.goal_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000018u) != 0) {
    ::memset(&_impl_.success_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.result_) -
        reinterpret_cast<char*>(&_impl_.success_)) + sizeof(_impl_.result_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NavigationResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NavigationResponse& this_ = static_cast<const NavigationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NavigationResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NavigationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.NavigationResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1 [json_name = "success"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_success() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_success(), target);
    }
  }

  // string message = 2 [json_name = "message"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.NavigationResponse.message");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string goal_id = 3 [json_name = "goalId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_goal_id().empty()) {
      const ::std::string& _s = this_._internal_goal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.NavigationResponse.goal_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // .agricultural.robot.navigation.v1.NavigationResult result = 4 [json_name = "result"];
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_result() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_result(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.NavigationResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NavigationResponse::ByteSizeLong(const MessageLite& base) {
  const NavigationResponse& this_ = static_cast<const NavigationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NavigationResponse::ByteSizeLong() const {
  const NavigationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.NavigationResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // string message = 2 [json_name = "message"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // string goal_id = 3 [json_name = "goalId"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_goal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_goal_id());
      }
    }
    // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
    // bool success = 1 [json_name = "success"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_success() != 0) {
        total_size += 2;
      }
    }
    // .agricultural.robot.navigation.v1.NavigationResult result = 4 [json_name = "result"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_result() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_result());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NavigationResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NavigationResponse*>(&to_msg);
  auto& from = static_cast<const NavigationResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.NavigationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_goal_id().empty()) {
        _this->_internal_set_goal_id(from._internal_goal_id());
      } else {
        if (_this->_impl_.goal_id_.IsDefault()) {
          _this->_internal_set_goal_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_success() != 0) {
        _this->_impl_.success_ = from._impl_.success_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_result() != 0) {
        _this->_impl_.result_ = from._impl_.result_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NavigationResponse::CopyFrom(const NavigationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.NavigationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NavigationResponse::InternalSwap(NavigationResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.goal_id_, &other->_impl_.goal_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NavigationResponse, _impl_.result_)
      + sizeof(NavigationResponse::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(NavigationResponse, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata NavigationResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NavigationStatusResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NavigationStatusResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NavigationStatusResponse, _impl_._has_bits_);
};

void NavigationStatusResponse::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
NavigationStatusResponse::NavigationStatusResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NavigationStatusResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.NavigationStatusResponse)
}
PROTOBUF_NDEBUG_INLINE NavigationStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::NavigationStatusResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        errors_{visibility, arena, from.errors_} {}

NavigationStatusResponse::NavigationStatusResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NavigationStatusResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NavigationStatusResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NavigationStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.progress_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.progress_)
                : nullptr;
  _impl_.current_goal_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.current_goal_)
                : nullptr;
  _impl_.timestamp_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;
  _impl_.status_ = from._impl_.status_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.NavigationStatusResponse)
}
PROTOBUF_NDEBUG_INLINE NavigationStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        errors_{visibility, arena} {}

inline void NavigationStatusResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, progress_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, progress_) +
               sizeof(Impl_::status_));
}
NavigationStatusResponse::~NavigationStatusResponse() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.NavigationStatusResponse)
  SharedDtor(*this);
}
inline void NavigationStatusResponse::SharedDtor(MessageLite& self) {
  NavigationStatusResponse& this_ = static_cast<NavigationStatusResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.progress_;
  delete this_._impl_.current_goal_;
  delete this_._impl_.timestamp_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NavigationStatusResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NavigationStatusResponse(arena);
}
constexpr auto NavigationStatusResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NavigationStatusResponse, _impl_.errors_) +
          decltype(NavigationStatusResponse::_impl_.errors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(NavigationStatusResponse), alignof(NavigationStatusResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NavigationStatusResponse::PlacementNew_,
                                 sizeof(NavigationStatusResponse),
                                 alignof(NavigationStatusResponse));
  }
}
constexpr auto NavigationStatusResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NavigationStatusResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NavigationStatusResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NavigationStatusResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NavigationStatusResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NavigationStatusResponse>(), &NavigationStatusResponse::ByteSizeLong,
              &NavigationStatusResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NavigationStatusResponse, _impl_._cached_size_),
          false,
      },
      &NavigationStatusResponse::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NavigationStatusResponse_class_data_ =
        NavigationStatusResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NavigationStatusResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NavigationStatusResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NavigationStatusResponse_class_data_.tc_table);
  return NavigationStatusResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 4, 0, 2>
NavigationStatusResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NavigationStatusResponse, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    NavigationStatusResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::NavigationStatusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .agricultural.robot.navigation.v1.NavigationStatus status = 1 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NavigationStatusResponse, _impl_.status_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(NavigationStatusResponse, _impl_.status_)}},
    // .agricultural.robot.navigation.v1.NavigationProgress progress = 2 [json_name = "progress"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(NavigationStatusResponse, _impl_.progress_)}},
    // optional .agricultural.robot.navigation.v1.NavigationGoal current_goal = 3 [json_name = "currentGoal"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(NavigationStatusResponse, _impl_.current_goal_)}},
    // repeated .agricultural.robot.navigation.v1.NavigationError errors = 4 [json_name = "errors"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(NavigationStatusResponse, _impl_.errors_)}},
    // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 3, PROTOBUF_FIELD_OFFSET(NavigationStatusResponse, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .agricultural.robot.navigation.v1.NavigationStatus status = 1 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(NavigationStatusResponse, _impl_.status_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .agricultural.robot.navigation.v1.NavigationProgress progress = 2 [json_name = "progress"];
    {PROTOBUF_FIELD_OFFSET(NavigationStatusResponse, _impl_.progress_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .agricultural.robot.navigation.v1.NavigationGoal current_goal = 3 [json_name = "currentGoal"];
    {PROTOBUF_FIELD_OFFSET(NavigationStatusResponse, _impl_.current_goal_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .agricultural.robot.navigation.v1.NavigationError errors = 4 [json_name = "errors"];
    {PROTOBUF_FIELD_OFFSET(NavigationStatusResponse, _impl_.errors_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(NavigationStatusResponse, _impl_.timestamp_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::NavigationProgress>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::NavigationGoal>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::NavigationError>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void NavigationStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.NavigationStatusResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errors_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.progress_ != nullptr);
      _impl_.progress_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.current_goal_ != nullptr);
      _impl_.current_goal_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NavigationStatusResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NavigationStatusResponse& this_ = static_cast<const NavigationStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NavigationStatusResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NavigationStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.NavigationStatusResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .agricultural.robot.navigation.v1.NavigationStatus status = 1 [json_name = "status"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_status(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.NavigationProgress progress = 2 [json_name = "progress"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.progress_, this_._impl_.progress_->GetCachedSize(), target,
        stream);
  }

  // optional .agricultural.robot.navigation.v1.NavigationGoal current_goal = 3 [json_name = "currentGoal"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.current_goal_, this_._impl_.current_goal_->GetCachedSize(), target,
        stream);
  }

  // repeated .agricultural.robot.navigation.v1.NavigationError errors = 4 [json_name = "errors"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_errors_size());
       i < n; i++) {
    const auto& repfield = this_._internal_errors().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.NavigationStatusResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NavigationStatusResponse::ByteSizeLong(const MessageLite& base) {
  const NavigationStatusResponse& this_ = static_cast<const NavigationStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NavigationStatusResponse::ByteSizeLong() const {
  const NavigationStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.NavigationStatusResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .agricultural.robot.navigation.v1.NavigationError errors = 4 [json_name = "errors"];
    {
      total_size += 1UL * this_._internal_errors_size();
      for (const auto& msg : this_._internal_errors()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // .agricultural.robot.navigation.v1.NavigationProgress progress = 2 [json_name = "progress"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.progress_);
    }
    // optional .agricultural.robot.navigation.v1.NavigationGoal current_goal = 3 [json_name = "currentGoal"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.current_goal_);
    }
    // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
    // .agricultural.robot.navigation.v1.NavigationStatus status = 1 [json_name = "status"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NavigationStatusResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NavigationStatusResponse*>(&to_msg);
  auto& from = static_cast<const NavigationStatusResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.NavigationStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_errors()->MergeFrom(
      from._internal_errors());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.progress_ != nullptr);
      if (_this->_impl_.progress_ == nullptr) {
        _this->_impl_.progress_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.progress_);
      } else {
        _this->_impl_.progress_->MergeFrom(*from._impl_.progress_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.current_goal_ != nullptr);
      if (_this->_impl_.current_goal_ == nullptr) {
        _this->_impl_.current_goal_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.current_goal_);
      } else {
        _this->_impl_.current_goal_->MergeFrom(*from._impl_.current_goal_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NavigationStatusResponse::CopyFrom(const NavigationStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.NavigationStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NavigationStatusResponse::InternalSwap(NavigationStatusResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.errors_.InternalSwap(&other->_impl_.errors_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NavigationStatusResponse, _impl_.status_)
      + sizeof(NavigationStatusResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(NavigationStatusResponse, _impl_.progress_)>(
          reinterpret_cast<char*>(&_impl_.progress_),
          reinterpret_cast<char*>(&other->_impl_.progress_));
}

::google::protobuf::Metadata NavigationStatusResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NavigationStatusUpdate::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NavigationStatusUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NavigationStatusUpdate, _impl_._has_bits_);
};

void NavigationStatusUpdate::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
NavigationStatusUpdate::NavigationStatusUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NavigationStatusUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.NavigationStatusUpdate)
}
PROTOBUF_NDEBUG_INLINE NavigationStatusUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::NavigationStatusUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_) {}

NavigationStatusUpdate::NavigationStatusUpdate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NavigationStatusUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NavigationStatusUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NavigationStatusUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.progress_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.progress_)
                : nullptr;
  _impl_.timestamp_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;
  _impl_.error_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.error_)
                : nullptr;
  _impl_.status_ = from._impl_.status_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.NavigationStatusUpdate)
}
PROTOBUF_NDEBUG_INLINE NavigationStatusUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena) {}

inline void NavigationStatusUpdate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, progress_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, progress_) +
               sizeof(Impl_::status_));
}
NavigationStatusUpdate::~NavigationStatusUpdate() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.NavigationStatusUpdate)
  SharedDtor(*this);
}
inline void NavigationStatusUpdate::SharedDtor(MessageLite& self) {
  NavigationStatusUpdate& this_ = static_cast<NavigationStatusUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  delete this_._impl_.progress_;
  delete this_._impl_.timestamp_;
  delete this_._impl_.error_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NavigationStatusUpdate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NavigationStatusUpdate(arena);
}
constexpr auto NavigationStatusUpdate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NavigationStatusUpdate),
                                            alignof(NavigationStatusUpdate));
}
constexpr auto NavigationStatusUpdate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NavigationStatusUpdate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NavigationStatusUpdate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NavigationStatusUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NavigationStatusUpdate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NavigationStatusUpdate>(), &NavigationStatusUpdate::ByteSizeLong,
              &NavigationStatusUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NavigationStatusUpdate, _impl_._cached_size_),
          false,
      },
      &NavigationStatusUpdate::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NavigationStatusUpdate_class_data_ =
        NavigationStatusUpdate::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NavigationStatusUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NavigationStatusUpdate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NavigationStatusUpdate_class_data_.tc_table);
  return NavigationStatusUpdate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 72, 2>
NavigationStatusUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NavigationStatusUpdate, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    NavigationStatusUpdate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::NavigationStatusUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NavigationStatusUpdate, _impl_.robot_id_)}},
    // .agricultural.robot.navigation.v1.NavigationStatus status = 2 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NavigationStatusUpdate, _impl_.status_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(NavigationStatusUpdate, _impl_.status_)}},
    // .agricultural.robot.navigation.v1.NavigationProgress progress = 3 [json_name = "progress"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(NavigationStatusUpdate, _impl_.progress_)}},
    // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 1, PROTOBUF_FIELD_OFFSET(NavigationStatusUpdate, _impl_.timestamp_)}},
    // optional .agricultural.robot.navigation.v1.NavigationError error = 5 [json_name = "error"];
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 2, PROTOBUF_FIELD_OFFSET(NavigationStatusUpdate, _impl_.error_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(NavigationStatusUpdate, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.NavigationStatus status = 2 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(NavigationStatusUpdate, _impl_.status_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .agricultural.robot.navigation.v1.NavigationProgress progress = 3 [json_name = "progress"];
    {PROTOBUF_FIELD_OFFSET(NavigationStatusUpdate, _impl_.progress_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(NavigationStatusUpdate, _impl_.timestamp_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .agricultural.robot.navigation.v1.NavigationError error = 5 [json_name = "error"];
    {PROTOBUF_FIELD_OFFSET(NavigationStatusUpdate, _impl_.error_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::NavigationProgress>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::NavigationError>()},
  }},
  {{
    "\67\10\0\0\0\0\0\0"
    "agricultural.robot.navigation.v1.NavigationStatusUpdate"
    "robot_id"
  }},
};
PROTOBUF_NOINLINE void NavigationStatusUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.NavigationStatusUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.robot_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.progress_ != nullptr);
      _impl_.progress_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.error_ != nullptr);
      _impl_.error_->Clear();
    }
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NavigationStatusUpdate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NavigationStatusUpdate& this_ = static_cast<const NavigationStatusUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NavigationStatusUpdate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NavigationStatusUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.NavigationStatusUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.NavigationStatusUpdate.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .agricultural.robot.navigation.v1.NavigationStatus status = 2 [json_name = "status"];
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_status(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.NavigationProgress progress = 3 [json_name = "progress"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.progress_, this_._impl_.progress_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  // optional .agricultural.robot.navigation.v1.NavigationError error = 5 [json_name = "error"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.error_, this_._impl_.error_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.NavigationStatusUpdate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NavigationStatusUpdate::ByteSizeLong(const MessageLite& base) {
  const NavigationStatusUpdate& this_ = static_cast<const NavigationStatusUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NavigationStatusUpdate::ByteSizeLong() const {
  const NavigationStatusUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.NavigationStatusUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // .agricultural.robot.navigation.v1.NavigationProgress progress = 3 [json_name = "progress"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.progress_);
    }
    // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
    // optional .agricultural.robot.navigation.v1.NavigationError error = 5 [json_name = "error"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.error_);
    }
    // .agricultural.robot.navigation.v1.NavigationStatus status = 2 [json_name = "status"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NavigationStatusUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NavigationStatusUpdate*>(&to_msg);
  auto& from = static_cast<const NavigationStatusUpdate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.NavigationStatusUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.progress_ != nullptr);
      if (_this->_impl_.progress_ == nullptr) {
        _this->_impl_.progress_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.progress_);
      } else {
        _this->_impl_.progress_->MergeFrom(*from._impl_.progress_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.error_ != nullptr);
      if (_this->_impl_.error_ == nullptr) {
        _this->_impl_.error_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.error_);
      } else {
        _this->_impl_.error_->MergeFrom(*from._impl_.error_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NavigationStatusUpdate::CopyFrom(const NavigationStatusUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.NavigationStatusUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NavigationStatusUpdate::InternalSwap(NavigationStatusUpdate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NavigationStatusUpdate, _impl_.status_)
      + sizeof(NavigationStatusUpdate::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(NavigationStatusUpdate, _impl_.progress_)>(
          reinterpret_cast<char*>(&_impl_.progress_),
          reinterpret_cast<char*>(&other->_impl_.progress_));
}

::google::protobuf::Metadata NavigationStatusUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NavigationProgress::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NavigationProgress>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_._has_bits_);
};

void NavigationProgress::clear_time_remaining() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_remaining_ != nullptr) _impl_.time_remaining_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void NavigationProgress::clear_time_elapsed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_elapsed_ != nullptr) _impl_.time_elapsed_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
NavigationProgress::NavigationProgress(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NavigationProgress_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.NavigationProgress)
}
PROTOBUF_NDEBUG_INLINE NavigationProgress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::NavigationProgress& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NavigationProgress::NavigationProgress(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NavigationProgress& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NavigationProgress_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NavigationProgress* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_remaining_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_remaining_)
                : nullptr;
  _impl_.time_elapsed_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_elapsed_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, distance_remaining_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, distance_remaining_),
           offsetof(Impl_, completion_percentage_) -
               offsetof(Impl_, distance_remaining_) +
               sizeof(Impl_::completion_percentage_));

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.NavigationProgress)
}
PROTOBUF_NDEBUG_INLINE NavigationProgress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void NavigationProgress::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_remaining_),
           0,
           offsetof(Impl_, completion_percentage_) -
               offsetof(Impl_, time_remaining_) +
               sizeof(Impl_::completion_percentage_));
}
NavigationProgress::~NavigationProgress() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.NavigationProgress)
  SharedDtor(*this);
}
inline void NavigationProgress::SharedDtor(MessageLite& self) {
  NavigationProgress& this_ = static_cast<NavigationProgress&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.time_remaining_;
  delete this_._impl_.time_elapsed_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NavigationProgress::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NavigationProgress(arena);
}
constexpr auto NavigationProgress::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(NavigationProgress),
                                            alignof(NavigationProgress));
}
constexpr auto NavigationProgress::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NavigationProgress_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NavigationProgress::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NavigationProgress>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NavigationProgress::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NavigationProgress>(), &NavigationProgress::ByteSizeLong,
              &NavigationProgress::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_._cached_size_),
          false,
      },
      &NavigationProgress::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NavigationProgress_class_data_ =
        NavigationProgress::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NavigationProgress::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NavigationProgress_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NavigationProgress_class_data_.tc_table);
  return NavigationProgress_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 0, 2>
NavigationProgress::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    NavigationProgress_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::NavigationProgress>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double distance_remaining = 1 [json_name = "distanceRemaining"];
    {::_pbi::TcParser::FastF64S1,
     {9, 2, 0, PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_.distance_remaining_)}},
    // double distance_traveled = 2 [json_name = "distanceTraveled"];
    {::_pbi::TcParser::FastF64S1,
     {17, 3, 0, PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_.distance_traveled_)}},
    // .google.protobuf.Duration time_remaining = 3 [json_name = "timeRemaining"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_.time_remaining_)}},
    // .google.protobuf.Duration time_elapsed = 4 [json_name = "timeElapsed"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_.time_elapsed_)}},
    // uint32 current_waypoint_index = 5 [json_name = "currentWaypointIndex"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NavigationProgress, _impl_.current_waypoint_index_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_.current_waypoint_index_)}},
    // uint32 total_waypoints = 6 [json_name = "totalWaypoints"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NavigationProgress, _impl_.total_waypoints_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_.total_waypoints_)}},
    // double completion_percentage = 7 [json_name = "completionPercentage"];
    {::_pbi::TcParser::FastF64S1,
     {57, 6, 0, PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_.completion_percentage_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double distance_remaining = 1 [json_name = "distanceRemaining"];
    {PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_.distance_remaining_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double distance_traveled = 2 [json_name = "distanceTraveled"];
    {PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_.distance_traveled_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // .google.protobuf.Duration time_remaining = 3 [json_name = "timeRemaining"];
    {PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_.time_remaining_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Duration time_elapsed = 4 [json_name = "timeElapsed"];
    {PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_.time_elapsed_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 current_waypoint_index = 5 [json_name = "currentWaypointIndex"];
    {PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_.current_waypoint_index_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 total_waypoints = 6 [json_name = "totalWaypoints"];
    {PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_.total_waypoints_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // double completion_percentage = 7 [json_name = "completionPercentage"];
    {PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_.completion_percentage_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void NavigationProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.NavigationProgress)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.time_remaining_ != nullptr);
      _impl_.time_remaining_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.time_elapsed_ != nullptr);
      _impl_.time_elapsed_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000007cu) != 0) {
    ::memset(&_impl_.distance_remaining_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.completion_percentage_) -
        reinterpret_cast<char*>(&_impl_.distance_remaining_)) + sizeof(_impl_.completion_percentage_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NavigationProgress::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NavigationProgress& this_ = static_cast<const NavigationProgress&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NavigationProgress::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NavigationProgress& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.NavigationProgress)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double distance_remaining = 1 [json_name = "distanceRemaining"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_distance_remaining()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_distance_remaining(), target);
    }
  }

  // double distance_traveled = 2 [json_name = "distanceTraveled"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_distance_traveled()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_distance_traveled(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Duration time_remaining = 3 [json_name = "timeRemaining"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.time_remaining_, this_._impl_.time_remaining_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Duration time_elapsed = 4 [json_name = "timeElapsed"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.time_elapsed_, this_._impl_.time_elapsed_->GetCachedSize(), target,
        stream);
  }

  // uint32 current_waypoint_index = 5 [json_name = "currentWaypointIndex"];
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (this_._internal_current_waypoint_index() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          5, this_._internal_current_waypoint_index(), target);
    }
  }

  // uint32 total_waypoints = 6 [json_name = "totalWaypoints"];
  if ((cached_has_bits & 0x00000020u) != 0) {
    if (this_._internal_total_waypoints() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          6, this_._internal_total_waypoints(), target);
    }
  }

  // double completion_percentage = 7 [json_name = "completionPercentage"];
  if ((cached_has_bits & 0x00000040u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_completion_percentage()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          7, this_._internal_completion_percentage(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.NavigationProgress)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NavigationProgress::ByteSizeLong(const MessageLite& base) {
  const NavigationProgress& this_ = static_cast<const NavigationProgress&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NavigationProgress::ByteSizeLong() const {
  const NavigationProgress& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.NavigationProgress)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // .google.protobuf.Duration time_remaining = 3 [json_name = "timeRemaining"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_remaining_);
    }
    // .google.protobuf.Duration time_elapsed = 4 [json_name = "timeElapsed"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_elapsed_);
    }
    // double distance_remaining = 1 [json_name = "distanceRemaining"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_distance_remaining()) != 0) {
        total_size += 9;
      }
    }
    // double distance_traveled = 2 [json_name = "distanceTraveled"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_distance_traveled()) != 0) {
        total_size += 9;
      }
    }
    // uint32 current_waypoint_index = 5 [json_name = "currentWaypointIndex"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_current_waypoint_index() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_current_waypoint_index());
      }
    }
    // uint32 total_waypoints = 6 [json_name = "totalWaypoints"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_total_waypoints() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_total_waypoints());
      }
    }
    // double completion_percentage = 7 [json_name = "completionPercentage"];
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_completion_percentage()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NavigationProgress::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NavigationProgress*>(&to_msg);
  auto& from = static_cast<const NavigationProgress&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.NavigationProgress)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.time_remaining_ != nullptr);
      if (_this->_impl_.time_remaining_ == nullptr) {
        _this->_impl_.time_remaining_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_remaining_);
      } else {
        _this->_impl_.time_remaining_->MergeFrom(*from._impl_.time_remaining_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.time_elapsed_ != nullptr);
      if (_this->_impl_.time_elapsed_ == nullptr) {
        _this->_impl_.time_elapsed_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_elapsed_);
      } else {
        _this->_impl_.time_elapsed_->MergeFrom(*from._impl_.time_elapsed_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_distance_remaining()) != 0) {
        _this->_impl_.distance_remaining_ = from._impl_.distance_remaining_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_distance_traveled()) != 0) {
        _this->_impl_.distance_traveled_ = from._impl_.distance_traveled_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_current_waypoint_index() != 0) {
        _this->_impl_.current_waypoint_index_ = from._impl_.current_waypoint_index_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_total_waypoints() != 0) {
        _this->_impl_.total_waypoints_ = from._impl_.total_waypoints_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_completion_percentage()) != 0) {
        _this->_impl_.completion_percentage_ = from._impl_.completion_percentage_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NavigationProgress::CopyFrom(const NavigationProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.NavigationProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NavigationProgress::InternalSwap(NavigationProgress* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_.completion_percentage_)
      + sizeof(NavigationProgress::_impl_.completion_percentage_)
      - PROTOBUF_FIELD_OFFSET(NavigationProgress, _impl_.time_remaining_)>(
          reinterpret_cast<char*>(&_impl_.time_remaining_),
          reinterpret_cast<char*>(&other->_impl_.time_remaining_));
}

::google::protobuf::Metadata NavigationProgress::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NavigationError::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NavigationError>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NavigationError, _impl_._has_bits_);
};

void NavigationError::clear_occurred_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.occurred_at_ != nullptr) _impl_.occurred_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
NavigationError::NavigationError(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NavigationError_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.NavigationError)
}
PROTOBUF_NDEBUG_INLINE NavigationError::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::NavigationError& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        suggested_actions_{visibility, arena, from.suggested_actions_},
        description_(arena, from.description_) {}

NavigationError::NavigationError(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NavigationError& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NavigationError_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NavigationError* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.occurred_at_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.occurred_at_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, code_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, code_),
           offsetof(Impl_, recoverable_) -
               offsetof(Impl_, code_) +
               sizeof(Impl_::recoverable_));

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.NavigationError)
}
PROTOBUF_NDEBUG_INLINE NavigationError::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        suggested_actions_{visibility, arena},
        description_(arena) {}

inline void NavigationError::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, occurred_at_),
           0,
           offsetof(Impl_, recoverable_) -
               offsetof(Impl_, occurred_at_) +
               sizeof(Impl_::recoverable_));
}
NavigationError::~NavigationError() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.NavigationError)
  SharedDtor(*this);
}
inline void NavigationError::SharedDtor(MessageLite& self) {
  NavigationError& this_ = static_cast<NavigationError&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.description_.Destroy();
  delete this_._impl_.occurred_at_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NavigationError::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NavigationError(arena);
}
constexpr auto NavigationError::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NavigationError, _impl_.suggested_actions_) +
          decltype(NavigationError::_impl_.suggested_actions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NavigationError), alignof(NavigationError), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NavigationError::PlacementNew_,
                                 sizeof(NavigationError),
                                 alignof(NavigationError));
  }
}
constexpr auto NavigationError::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NavigationError_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NavigationError::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NavigationError>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NavigationError::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NavigationError>(), &NavigationError::ByteSizeLong,
              &NavigationError::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NavigationError, _impl_._cached_size_),
          false,
      },
      &NavigationError::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NavigationError_class_data_ =
        NavigationError::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NavigationError::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NavigationError_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NavigationError_class_data_.tc_table);
  return NavigationError_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 85, 2>
NavigationError::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NavigationError, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    NavigationError_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::NavigationError>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .agricultural.robot.navigation.v1.NavigationErrorCode code = 1 [json_name = "code"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NavigationError, _impl_.code_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(NavigationError, _impl_.code_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(NavigationError, _impl_.description_)}},
    // .google.protobuf.Timestamp occurred_at = 3 [json_name = "occurredAt"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(NavigationError, _impl_.occurred_at_)}},
    // bool recoverable = 4 [json_name = "recoverable"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NavigationError, _impl_.recoverable_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(NavigationError, _impl_.recoverable_)}},
    // repeated string suggested_actions = 5 [json_name = "suggestedActions"];
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(NavigationError, _impl_.suggested_actions_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .agricultural.robot.navigation.v1.NavigationErrorCode code = 1 [json_name = "code"];
    {PROTOBUF_FIELD_OFFSET(NavigationError, _impl_.code_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(NavigationError, _impl_.description_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp occurred_at = 3 [json_name = "occurredAt"];
    {PROTOBUF_FIELD_OFFSET(NavigationError, _impl_.occurred_at_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool recoverable = 4 [json_name = "recoverable"];
    {PROTOBUF_FIELD_OFFSET(NavigationError, _impl_.recoverable_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated string suggested_actions = 5 [json_name = "suggestedActions"];
    {PROTOBUF_FIELD_OFFSET(NavigationError, _impl_.suggested_actions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
    "\60\0\13\0\0\21\0\0"
    "agricultural.robot.navigation.v1.NavigationError"
    "description"
    "suggested_actions"
  }},
};
PROTOBUF_NOINLINE void NavigationError::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.NavigationError)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.suggested_actions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.occurred_at_ != nullptr);
      _impl_.occurred_at_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.code_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.recoverable_) -
        reinterpret_cast<char*>(&_impl_.code_)) + sizeof(_impl_.recoverable_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NavigationError::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NavigationError& this_ = static_cast<const NavigationError&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NavigationError::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NavigationError& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.NavigationError)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .agricultural.robot.navigation.v1.NavigationErrorCode code = 1 [json_name = "code"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_code() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_code(), target);
    }
  }

  // string description = 2 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.NavigationError.description");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp occurred_at = 3 [json_name = "occurredAt"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.occurred_at_, this_._impl_.occurred_at_->GetCachedSize(), target,
        stream);
  }

  // bool recoverable = 4 [json_name = "recoverable"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (this_._internal_recoverable() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_recoverable(), target);
    }
  }

  // repeated string suggested_actions = 5 [json_name = "suggestedActions"];
  for (int i = 0, n = this_._internal_suggested_actions_size(); i < n; ++i) {
    const auto& s = this_._internal_suggested_actions().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.NavigationError.suggested_actions");
    target = stream->WriteString(5, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.NavigationError)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NavigationError::ByteSizeLong(const MessageLite& base) {
  const NavigationError& this_ = static_cast<const NavigationError&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NavigationError::ByteSizeLong() const {
  const NavigationError& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.NavigationError)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string suggested_actions = 5 [json_name = "suggestedActions"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_suggested_actions().size());
      for (int i = 0, n = this_._internal_suggested_actions().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_suggested_actions().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string description = 2 [json_name = "description"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // .google.protobuf.Timestamp occurred_at = 3 [json_name = "occurredAt"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.occurred_at_);
    }
    // .agricultural.robot.navigation.v1.NavigationErrorCode code = 1 [json_name = "code"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_code() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_code());
      }
    }
    // bool recoverable = 4 [json_name = "recoverable"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_recoverable() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NavigationError::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NavigationError*>(&to_msg);
  auto& from = static_cast<const NavigationError&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.NavigationError)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_suggested_actions()->MergeFrom(from._internal_suggested_actions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.occurred_at_ != nullptr);
      if (_this->_impl_.occurred_at_ == nullptr) {
        _this->_impl_.occurred_at_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.occurred_at_);
      } else {
        _this->_impl_.occurred_at_->MergeFrom(*from._impl_.occurred_at_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_code() != 0) {
        _this->_impl_.code_ = from._impl_.code_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_recoverable() != 0) {
        _this->_impl_.recoverable_ = from._impl_.recoverable_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NavigationError::CopyFrom(const NavigationError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.NavigationError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NavigationError::InternalSwap(NavigationError* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.suggested_actions_.InternalSwap(&other->_impl_.suggested_actions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NavigationError, _impl_.recoverable_)
      + sizeof(NavigationError::_impl_.recoverable_)
      - PROTOBUF_FIELD_OFFSET(NavigationError, _impl_.occurred_at_)>(
          reinterpret_cast<char*>(&_impl_.occurred_at_),
          reinterpret_cast<char*>(&other->_impl_.occurred_at_));
}

::google::protobuf::Metadata NavigationError::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetCameraInfoRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetCameraInfoRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetCameraInfoRequest, _impl_._has_bits_);
};

GetCameraInfoRequest::GetCameraInfoRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetCameraInfoRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.GetCameraInfoRequest)
}
PROTOBUF_NDEBUG_INLINE GetCameraInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::GetCameraInfoRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_),
        camera_id_(arena, from.camera_id_) {}

GetCameraInfoRequest::GetCameraInfoRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetCameraInfoRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetCameraInfoRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetCameraInfoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.GetCameraInfoRequest)
}
PROTOBUF_NDEBUG_INLINE GetCameraInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena),
        camera_id_(arena) {}

inline void GetCameraInfoRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetCameraInfoRequest::~GetCameraInfoRequest() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.GetCameraInfoRequest)
  SharedDtor(*this);
}
inline void GetCameraInfoRequest::SharedDtor(MessageLite& self) {
  GetCameraInfoRequest& this_ = static_cast<GetCameraInfoRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  this_._impl_.camera_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetCameraInfoRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetCameraInfoRequest(arena);
}
constexpr auto GetCameraInfoRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetCameraInfoRequest),
                                            alignof(GetCameraInfoRequest));
}
constexpr auto GetCameraInfoRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetCameraInfoRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetCameraInfoRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetCameraInfoRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetCameraInfoRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetCameraInfoRequest>(), &GetCameraInfoRequest::ByteSizeLong,
              &GetCameraInfoRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetCameraInfoRequest, _impl_._cached_size_),
          false,
      },
      &GetCameraInfoRequest::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetCameraInfoRequest_class_data_ =
        GetCameraInfoRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetCameraInfoRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetCameraInfoRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetCameraInfoRequest_class_data_.tc_table);
  return GetCameraInfoRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 79, 2>
GetCameraInfoRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetCameraInfoRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetCameraInfoRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::GetCameraInfoRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string camera_id = 2 [json_name = "cameraId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GetCameraInfoRequest, _impl_.camera_id_)}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetCameraInfoRequest, _impl_.robot_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(GetCameraInfoRequest, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string camera_id = 2 [json_name = "cameraId"];
    {PROTOBUF_FIELD_OFFSET(GetCameraInfoRequest, _impl_.camera_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\10\11\0\0\0\0\0"
    "agricultural.robot.navigation.v1.GetCameraInfoRequest"
    "robot_id"
    "camera_id"
  }},
};
PROTOBUF_NOINLINE void GetCameraInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.GetCameraInfoRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.robot_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.camera_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetCameraInfoRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetCameraInfoRequest& this_ = static_cast<const GetCameraInfoRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetCameraInfoRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetCameraInfoRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.GetCameraInfoRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.GetCameraInfoRequest.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string camera_id = 2 [json_name = "cameraId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_camera_id().empty()) {
      const ::std::string& _s = this_._internal_camera_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.GetCameraInfoRequest.camera_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.GetCameraInfoRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetCameraInfoRequest::ByteSizeLong(const MessageLite& base) {
  const GetCameraInfoRequest& this_ = static_cast<const GetCameraInfoRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetCameraInfoRequest::ByteSizeLong() const {
  const GetCameraInfoRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.GetCameraInfoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // string camera_id = 2 [json_name = "cameraId"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_camera_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_camera_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetCameraInfoRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetCameraInfoRequest*>(&to_msg);
  auto& from = static_cast<const GetCameraInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.GetCameraInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_camera_id().empty()) {
        _this->_internal_set_camera_id(from._internal_camera_id());
      } else {
        if (_this->_impl_.camera_id_.IsDefault()) {
          _this->_internal_set_camera_id("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetCameraInfoRequest::CopyFrom(const GetCameraInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.GetCameraInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetCameraInfoRequest::InternalSwap(GetCameraInfoRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.camera_id_, &other->_impl_.camera_id_, arena);
}

::google::protobuf::Metadata GetCameraInfoRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StreamVideoRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<StreamVideoRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StreamVideoRequest, _impl_._has_bits_);
};

StreamVideoRequest::StreamVideoRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StreamVideoRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.StreamVideoRequest)
}
PROTOBUF_NDEBUG_INLINE StreamVideoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::StreamVideoRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_),
        camera_id_(arena, from.camera_id_) {}

StreamVideoRequest::StreamVideoRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StreamVideoRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StreamVideoRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StreamVideoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.options_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.StreamVideoRequest)
}
PROTOBUF_NDEBUG_INLINE StreamVideoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena),
        camera_id_(arena) {}

inline void StreamVideoRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.options_ = {};
}
StreamVideoRequest::~StreamVideoRequest() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.StreamVideoRequest)
  SharedDtor(*this);
}
inline void StreamVideoRequest::SharedDtor(MessageLite& self) {
  StreamVideoRequest& this_ = static_cast<StreamVideoRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  this_._impl_.camera_id_.Destroy();
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL StreamVideoRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StreamVideoRequest(arena);
}
constexpr auto StreamVideoRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(StreamVideoRequest),
                                            alignof(StreamVideoRequest));
}
constexpr auto StreamVideoRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StreamVideoRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StreamVideoRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<StreamVideoRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StreamVideoRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<StreamVideoRequest>(), &StreamVideoRequest::ByteSizeLong,
              &StreamVideoRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StreamVideoRequest, _impl_._cached_size_),
          false,
      },
      &StreamVideoRequest::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull StreamVideoRequest_class_data_ =
        StreamVideoRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
StreamVideoRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StreamVideoRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StreamVideoRequest_class_data_.tc_table);
  return StreamVideoRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 77, 2>
StreamVideoRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StreamVideoRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    StreamVideoRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::StreamVideoRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StreamVideoRequest, _impl_.robot_id_)}},
    // string camera_id = 2 [json_name = "cameraId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(StreamVideoRequest, _impl_.camera_id_)}},
    // .agricultural.robot.navigation.v1.VideoStreamOptions options = 3 [json_name = "options"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(StreamVideoRequest, _impl_.options_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(StreamVideoRequest, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string camera_id = 2 [json_name = "cameraId"];
    {PROTOBUF_FIELD_OFFSET(StreamVideoRequest, _impl_.camera_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.VideoStreamOptions options = 3 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(StreamVideoRequest, _impl_.options_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::VideoStreamOptions>()},
  }},
  {{
    "\63\10\11\0\0\0\0\0"
    "agricultural.robot.navigation.v1.StreamVideoRequest"
    "robot_id"
    "camera_id"
  }},
};
PROTOBUF_NOINLINE void StreamVideoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.StreamVideoRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.robot_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.camera_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL StreamVideoRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const StreamVideoRequest& this_ = static_cast<const StreamVideoRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL StreamVideoRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const StreamVideoRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.StreamVideoRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.StreamVideoRequest.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string camera_id = 2 [json_name = "cameraId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_camera_id().empty()) {
      const ::std::string& _s = this_._internal_camera_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.StreamVideoRequest.camera_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.VideoStreamOptions options = 3 [json_name = "options"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.StreamVideoRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StreamVideoRequest::ByteSizeLong(const MessageLite& base) {
  const StreamVideoRequest& this_ = static_cast<const StreamVideoRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StreamVideoRequest::ByteSizeLong() const {
  const StreamVideoRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.StreamVideoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // string camera_id = 2 [json_name = "cameraId"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_camera_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_camera_id());
      }
    }
    // .agricultural.robot.navigation.v1.VideoStreamOptions options = 3 [json_name = "options"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void StreamVideoRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StreamVideoRequest*>(&to_msg);
  auto& from = static_cast<const StreamVideoRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.StreamVideoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_camera_id().empty()) {
        _this->_internal_set_camera_id(from._internal_camera_id());
      } else {
        if (_this->_impl_.camera_id_.IsDefault()) {
          _this->_internal_set_camera_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreamVideoRequest::CopyFrom(const StreamVideoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.StreamVideoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StreamVideoRequest::InternalSwap(StreamVideoRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.camera_id_, &other->_impl_.camera_id_, arena);
  swap(_impl_.options_, other->_impl_.options_);
}

::google::protobuf::Metadata StreamVideoRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CameraControlRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CameraControlRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CameraControlRequest, _impl_._has_bits_);
};

CameraControlRequest::CameraControlRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CameraControlRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.CameraControlRequest)
}
PROTOBUF_NDEBUG_INLINE CameraControlRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::CameraControlRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_),
        camera_id_(arena, from.camera_id_) {}

CameraControlRequest::CameraControlRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CameraControlRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CameraControlRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CameraControlRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.command_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.command_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.CameraControlRequest)
}
PROTOBUF_NDEBUG_INLINE CameraControlRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena),
        camera_id_(arena) {}

inline void CameraControlRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.command_ = {};
}
CameraControlRequest::~CameraControlRequest() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.CameraControlRequest)
  SharedDtor(*this);
}
inline void CameraControlRequest::SharedDtor(MessageLite& self) {
  CameraControlRequest& this_ = static_cast<CameraControlRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  this_._impl_.camera_id_.Destroy();
  delete this_._impl_.command_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CameraControlRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CameraControlRequest(arena);
}
constexpr auto CameraControlRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CameraControlRequest),
                                            alignof(CameraControlRequest));
}
constexpr auto CameraControlRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CameraControlRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CameraControlRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CameraControlRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CameraControlRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CameraControlRequest>(), &CameraControlRequest::ByteSizeLong,
              &CameraControlRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CameraControlRequest, _impl_._cached_size_),
          false,
      },
      &CameraControlRequest::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CameraControlRequest_class_data_ =
        CameraControlRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CameraControlRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CameraControlRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CameraControlRequest_class_data_.tc_table);
  return CameraControlRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 79, 2>
CameraControlRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CameraControlRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CameraControlRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::CameraControlRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CameraControlRequest, _impl_.robot_id_)}},
    // string camera_id = 2 [json_name = "cameraId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CameraControlRequest, _impl_.camera_id_)}},
    // .agricultural.robot.navigation.v1.CameraControlCommand command = 3 [json_name = "command"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(CameraControlRequest, _impl_.command_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(CameraControlRequest, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string camera_id = 2 [json_name = "cameraId"];
    {PROTOBUF_FIELD_OFFSET(CameraControlRequest, _impl_.camera_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.CameraControlCommand command = 3 [json_name = "command"];
    {PROTOBUF_FIELD_OFFSET(CameraControlRequest, _impl_.command_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::CameraControlCommand>()},
  }},
  {{
    "\65\10\11\0\0\0\0\0"
    "agricultural.robot.navigation.v1.CameraControlRequest"
    "robot_id"
    "camera_id"
  }},
};
PROTOBUF_NOINLINE void CameraControlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.CameraControlRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.robot_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.camera_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.command_ != nullptr);
      _impl_.command_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CameraControlRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CameraControlRequest& this_ = static_cast<const CameraControlRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CameraControlRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CameraControlRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.CameraControlRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.CameraControlRequest.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string camera_id = 2 [json_name = "cameraId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_camera_id().empty()) {
      const ::std::string& _s = this_._internal_camera_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.CameraControlRequest.camera_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.CameraControlCommand command = 3 [json_name = "command"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.command_, this_._impl_.command_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.CameraControlRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CameraControlRequest::ByteSizeLong(const MessageLite& base) {
  const CameraControlRequest& this_ = static_cast<const CameraControlRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CameraControlRequest::ByteSizeLong() const {
  const CameraControlRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.CameraControlRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // string camera_id = 2 [json_name = "cameraId"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_camera_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_camera_id());
      }
    }
    // .agricultural.robot.navigation.v1.CameraControlCommand command = 3 [json_name = "command"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.command_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CameraControlRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CameraControlRequest*>(&to_msg);
  auto& from = static_cast<const CameraControlRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.CameraControlRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_camera_id().empty()) {
        _this->_internal_set_camera_id(from._internal_camera_id());
      } else {
        if (_this->_impl_.camera_id_.IsDefault()) {
          _this->_internal_set_camera_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.command_ != nullptr);
      if (_this->_impl_.command_ == nullptr) {
        _this->_impl_.command_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.command_);
      } else {
        _this->_impl_.command_->MergeFrom(*from._impl_.command_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CameraControlRequest::CopyFrom(const CameraControlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.CameraControlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CameraControlRequest::InternalSwap(CameraControlRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.camera_id_, &other->_impl_.camera_id_, arena);
  swap(_impl_.command_, other->_impl_.command_);
}

::google::protobuf::Metadata CameraControlRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CameraInfoResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CameraInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CameraInfoResponse, _impl_._has_bits_);
};

void CameraInfoResponse::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CameraInfoResponse::CameraInfoResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CameraInfoResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.CameraInfoResponse)
}
PROTOBUF_NDEBUG_INLINE CameraInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::CameraInfoResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        cameras_{visibility, arena, from.cameras_},
        message_(arena, from.message_) {}

CameraInfoResponse::CameraInfoResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CameraInfoResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CameraInfoResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CameraInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.CameraInfoResponse)
}
PROTOBUF_NDEBUG_INLINE CameraInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        cameras_{visibility, arena},
        message_(arena) {}

inline void CameraInfoResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::success_));
}
CameraInfoResponse::~CameraInfoResponse() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.CameraInfoResponse)
  SharedDtor(*this);
}
inline void CameraInfoResponse::SharedDtor(MessageLite& self) {
  CameraInfoResponse& this_ = static_cast<CameraInfoResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  delete this_._impl_.timestamp_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CameraInfoResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CameraInfoResponse(arena);
}
constexpr auto CameraInfoResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CameraInfoResponse, _impl_.cameras_) +
          decltype(CameraInfoResponse::_impl_.cameras_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CameraInfoResponse), alignof(CameraInfoResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CameraInfoResponse::PlacementNew_,
                                 sizeof(CameraInfoResponse),
                                 alignof(CameraInfoResponse));
  }
}
constexpr auto CameraInfoResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CameraInfoResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CameraInfoResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CameraInfoResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CameraInfoResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CameraInfoResponse>(), &CameraInfoResponse::ByteSizeLong,
              &CameraInfoResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CameraInfoResponse, _impl_._cached_size_),
          false,
      },
      &CameraInfoResponse::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CameraInfoResponse_class_data_ =
        CameraInfoResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CameraInfoResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CameraInfoResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CameraInfoResponse_class_data_.tc_table);
  return CameraInfoResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 67, 2>
CameraInfoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CameraInfoResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CameraInfoResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::CameraInfoResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(CameraInfoResponse, _impl_.timestamp_)}},
    // bool success = 1 [json_name = "success"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CameraInfoResponse, _impl_.success_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CameraInfoResponse, _impl_.success_)}},
    // string message = 2 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CameraInfoResponse, _impl_.message_)}},
    // repeated .agricultural.robot.navigation.v1.CameraInfo cameras = 3 [json_name = "cameras"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CameraInfoResponse, _impl_.cameras_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1 [json_name = "success"];
    {PROTOBUF_FIELD_OFFSET(CameraInfoResponse, _impl_.success_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string message = 2 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(CameraInfoResponse, _impl_.message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .agricultural.robot.navigation.v1.CameraInfo cameras = 3 [json_name = "cameras"];
    {PROTOBUF_FIELD_OFFSET(CameraInfoResponse, _impl_.cameras_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(CameraInfoResponse, _impl_.timestamp_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::CameraInfo>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
    "\63\0\7\0\0\0\0\0"
    "agricultural.robot.navigation.v1.CameraInfoResponse"
    "message"
  }},
};
PROTOBUF_NOINLINE void CameraInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.CameraInfoResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cameras_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
  }
  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CameraInfoResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CameraInfoResponse& this_ = static_cast<const CameraInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CameraInfoResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CameraInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.CameraInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1 [json_name = "success"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_success() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_success(), target);
    }
  }

  // string message = 2 [json_name = "message"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.CameraInfoResponse.message");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // repeated .agricultural.robot.navigation.v1.CameraInfo cameras = 3 [json_name = "cameras"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_cameras_size());
       i < n; i++) {
    const auto& repfield = this_._internal_cameras().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.CameraInfoResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CameraInfoResponse::ByteSizeLong(const MessageLite& base) {
  const CameraInfoResponse& this_ = static_cast<const CameraInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CameraInfoResponse::ByteSizeLong() const {
  const CameraInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.CameraInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .agricultural.robot.navigation.v1.CameraInfo cameras = 3 [json_name = "cameras"];
    {
      total_size += 1UL * this_._internal_cameras_size();
      for (const auto& msg : this_._internal_cameras()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string message = 2 [json_name = "message"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
    // bool success = 1 [json_name = "success"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_success() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CameraInfoResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CameraInfoResponse*>(&to_msg);
  auto& from = static_cast<const CameraInfoResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.CameraInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_cameras()->MergeFrom(
      from._internal_cameras());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_success() != 0) {
        _this->_impl_.success_ = from._impl_.success_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CameraInfoResponse::CopyFrom(const CameraInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.CameraInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CameraInfoResponse::InternalSwap(CameraInfoResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.cameras_.InternalSwap(&other->_impl_.cameras_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CameraInfoResponse, _impl_.success_)
      + sizeof(CameraInfoResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(CameraInfoResponse, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata CameraInfoResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CameraInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CameraInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_._has_bits_);
};

CameraInfo::CameraInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CameraInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.CameraInfo)
}
PROTOBUF_NDEBUG_INLINE CameraInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::CameraInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        supported_formats_{visibility, arena, from.supported_formats_},
        _supported_formats_cached_byte_size_{0},
        camera_id_(arena, from.camera_id_),
        name_(arena, from.name_),
        frame_id_(arena, from.frame_id_) {}

CameraInfo::CameraInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CameraInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CameraInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CameraInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.resolution_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.resolution_)
                : nullptr;
  _impl_.intrinsics_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.intrinsics_)
                : nullptr;
  _impl_.distortion_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.distortion_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, framerate_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, framerate_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, framerate_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.CameraInfo)
}
PROTOBUF_NDEBUG_INLINE CameraInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        supported_formats_{visibility, arena},
        _supported_formats_cached_byte_size_{0},
        camera_id_(arena),
        name_(arena),
        frame_id_(arena) {}

inline void CameraInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, resolution_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, resolution_) +
               sizeof(Impl_::status_));
}
CameraInfo::~CameraInfo() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.CameraInfo)
  SharedDtor(*this);
}
inline void CameraInfo::SharedDtor(MessageLite& self) {
  CameraInfo& this_ = static_cast<CameraInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.camera_id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.frame_id_.Destroy();
  delete this_._impl_.resolution_;
  delete this_._impl_.intrinsics_;
  delete this_._impl_.distortion_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CameraInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CameraInfo(arena);
}
constexpr auto CameraInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.supported_formats_) +
          decltype(CameraInfo::_impl_.supported_formats_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CameraInfo), alignof(CameraInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CameraInfo::PlacementNew_,
                                 sizeof(CameraInfo),
                                 alignof(CameraInfo));
  }
}
constexpr auto CameraInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CameraInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CameraInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CameraInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CameraInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CameraInfo>(), &CameraInfo::ByteSizeLong,
              &CameraInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_._cached_size_),
          false,
      },
      &CameraInfo::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CameraInfo_class_data_ =
        CameraInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CameraInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CameraInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CameraInfo_class_data_.tc_table);
  return CameraInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 3, 81, 2>
CameraInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CameraInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::CameraInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string camera_id = 1 [json_name = "cameraId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.camera_id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.name_)}},
    // .agricultural.robot.navigation.v1.CameraType type = 3 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CameraInfo, _impl_.type_), 7>(),
     {24, 7, 0, PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.type_)}},
    // .agricultural.robot.navigation.v1.Resolution resolution = 4 [json_name = "resolution"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.resolution_)}},
    // double framerate = 5 [json_name = "framerate"];
    {::_pbi::TcParser::FastF64S1,
     {41, 6, 0, PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.framerate_)}},
    // .agricultural.robot.navigation.v1.CameraIntrinsics intrinsics = 6 [json_name = "intrinsics"];
    {::_pbi::TcParser::FastMtS1,
     {50, 4, 1, PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.intrinsics_)}},
    // .agricultural.robot.navigation.v1.CameraDistortion distortion = 7 [json_name = "distortion"];
    {::_pbi::TcParser::FastMtS1,
     {58, 5, 2, PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.distortion_)}},
    // string frame_id = 8 [json_name = "frameId"];
    {::_pbi::TcParser::FastUS1,
     {66, 2, 0, PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.frame_id_)}},
    // .agricultural.robot.navigation.v1.CameraStatus status = 9 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CameraInfo, _impl_.status_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.status_)}},
    // repeated .agricultural.robot.navigation.v1.VideoFormat supported_formats = 10 [json_name = "supportedFormats"];
    {::_pbi::TcParser::FastV32P1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.supported_formats_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string camera_id = 1 [json_name = "cameraId"];
    {PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.camera_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.CameraType type = 3 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.type_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .agricultural.robot.navigation.v1.Resolution resolution = 4 [json_name = "resolution"];
    {PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.resolution_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double framerate = 5 [json_name = "framerate"];
    {PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.framerate_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // .agricultural.robot.navigation.v1.CameraIntrinsics intrinsics = 6 [json_name = "intrinsics"];
    {PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.intrinsics_), _Internal::kHasBitsOffset + 4, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agricultural.robot.navigation.v1.CameraDistortion distortion = 7 [json_name = "distortion"];
    {PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.distortion_), _Internal::kHasBitsOffset + 5, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string frame_id = 8 [json_name = "frameId"];
    {PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.frame_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.CameraStatus status = 9 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.status_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated .agricultural.robot.navigation.v1.VideoFormat supported_formats = 10 [json_name = "supportedFormats"];
    {PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.supported_formats_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Resolution>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::CameraIntrinsics>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::CameraDistortion>()},
  }},
  {{
    "\53\11\4\0\0\0\0\0\10\0\0\0\0\0\0\0"
    "agricultural.robot.navigation.v1.CameraInfo"
    "camera_id"
    "name"
    "frame_id"
  }},
};
PROTOBUF_NOINLINE void CameraInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.CameraInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.supported_formats_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.camera_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.frame_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.resolution_ != nullptr);
      _impl_.resolution_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.intrinsics_ != nullptr);
      _impl_.intrinsics_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.distortion_ != nullptr);
      _impl_.distortion_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000c0u) != 0) {
    ::memset(&_impl_.framerate_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.type_) -
        reinterpret_cast<char*>(&_impl_.framerate_)) + sizeof(_impl_.type_));
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CameraInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CameraInfo& this_ = static_cast<const CameraInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CameraInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CameraInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.CameraInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string camera_id = 1 [json_name = "cameraId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_camera_id().empty()) {
      const ::std::string& _s = this_._internal_camera_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.CameraInfo.camera_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.CameraInfo.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // .agricultural.robot.navigation.v1.CameraType type = 3 [json_name = "type"];
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_type(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.Resolution resolution = 4 [json_name = "resolution"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.resolution_, this_._impl_.resolution_->GetCachedSize(), target,
        stream);
  }

  // double framerate = 5 [json_name = "framerate"];
  if ((cached_has_bits & 0x00000040u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_framerate()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          5, this_._internal_framerate(), target);
    }
  }

  // .agricultural.robot.navigation.v1.CameraIntrinsics intrinsics = 6 [json_name = "intrinsics"];
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.intrinsics_, this_._impl_.intrinsics_->GetCachedSize(), target,
        stream);
  }

  // .agricultural.robot.navigation.v1.CameraDistortion distortion = 7 [json_name = "distortion"];
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.distortion_, this_._impl_.distortion_->GetCachedSize(), target,
        stream);
  }

  // string frame_id = 8 [json_name = "frameId"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (!this_._internal_frame_id().empty()) {
      const ::std::string& _s = this_._internal_frame_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.CameraInfo.frame_id");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // .agricultural.robot.navigation.v1.CameraStatus status = 9 [json_name = "status"];
  if ((cached_has_bits & 0x00000100u) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          9, this_._internal_status(), target);
    }
  }

  // repeated .agricultural.robot.navigation.v1.VideoFormat supported_formats = 10 [json_name = "supportedFormats"];
  {
    ::size_t byte_size = this_._impl_._supported_formats_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          10, this_._internal_supported_formats(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.CameraInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CameraInfo::ByteSizeLong(const MessageLite& base) {
  const CameraInfo& this_ = static_cast<const CameraInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CameraInfo::ByteSizeLong() const {
  const CameraInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.CameraInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .agricultural.robot.navigation.v1.VideoFormat supported_formats = 10 [json_name = "supportedFormats"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_supported_formats(), 1, this_._impl_._supported_formats_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string camera_id = 1 [json_name = "cameraId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_camera_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_camera_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string frame_id = 8 [json_name = "frameId"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_frame_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_frame_id());
      }
    }
    // .agricultural.robot.navigation.v1.Resolution resolution = 4 [json_name = "resolution"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.resolution_);
    }
    // .agricultural.robot.navigation.v1.CameraIntrinsics intrinsics = 6 [json_name = "intrinsics"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.intrinsics_);
    }
    // .agricultural.robot.navigation.v1.CameraDistortion distortion = 7 [json_name = "distortion"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.distortion_);
    }
    // double framerate = 5 [json_name = "framerate"];
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_framerate()) != 0) {
        total_size += 9;
      }
    }
    // .agricultural.robot.navigation.v1.CameraType type = 3 [json_name = "type"];
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
   {
    // .agricultural.robot.navigation.v1.CameraStatus status = 9 [json_name = "status"];
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CameraInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CameraInfo*>(&to_msg);
  auto& from = static_cast<const CameraInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.CameraInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_supported_formats()->MergeFrom(from._internal_supported_formats());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_camera_id().empty()) {
        _this->_internal_set_camera_id(from._internal_camera_id());
      } else {
        if (_this->_impl_.camera_id_.IsDefault()) {
          _this->_internal_set_camera_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_frame_id().empty()) {
        _this->_internal_set_frame_id(from._internal_frame_id());
      } else {
        if (_this->_impl_.frame_id_.IsDefault()) {
          _this->_internal_set_frame_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.resolution_ != nullptr);
      if (_this->_impl_.resolution_ == nullptr) {
        _this->_impl_.resolution_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.resolution_);
      } else {
        _this->_impl_.resolution_->MergeFrom(*from._impl_.resolution_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.intrinsics_ != nullptr);
      if (_this->_impl_.intrinsics_ == nullptr) {
        _this->_impl_.intrinsics_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.intrinsics_);
      } else {
        _this->_impl_.intrinsics_->MergeFrom(*from._impl_.intrinsics_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.distortion_ != nullptr);
      if (_this->_impl_.distortion_ == nullptr) {
        _this->_impl_.distortion_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.distortion_);
      } else {
        _this->_impl_.distortion_->MergeFrom(*from._impl_.distortion_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_framerate()) != 0) {
        _this->_impl_.framerate_ = from._impl_.framerate_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  if ((cached_has_bits & 0x00000100u) != 0) {
    if (from._internal_status() != 0) {
      _this->_impl_.status_ = from._impl_.status_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CameraInfo::CopyFrom(const CameraInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.CameraInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CameraInfo::InternalSwap(CameraInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.supported_formats_.InternalSwap(&other->_impl_.supported_formats_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.camera_id_, &other->_impl_.camera_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.frame_id_, &other->_impl_.frame_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.status_)
      + sizeof(CameraInfo::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(CameraInfo, _impl_.resolution_)>(
          reinterpret_cast<char*>(&_impl_.resolution_),
          reinterpret_cast<char*>(&other->_impl_.resolution_));
}

::google::protobuf::Metadata CameraInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VideoFrame::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<VideoFrame>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_._has_bits_);
};

void VideoFrame::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
VideoFrame::VideoFrame(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, VideoFrame_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.VideoFrame)
}
PROTOBUF_NDEBUG_INLINE VideoFrame::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::VideoFrame& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        camera_id_(arena, from.camera_id_),
        image_data_(arena, from.image_data_) {}

VideoFrame::VideoFrame(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const VideoFrame& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, VideoFrame_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VideoFrame* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.resolution_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.resolution_)
                : nullptr;
  _impl_.timestamp_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;
  _impl_.metadata_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.metadata_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, frame_number_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, frame_number_),
           offsetof(Impl_, format_) -
               offsetof(Impl_, frame_number_) +
               sizeof(Impl_::format_));

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.VideoFrame)
}
PROTOBUF_NDEBUG_INLINE VideoFrame::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        camera_id_(arena),
        image_data_(arena) {}

inline void VideoFrame::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, resolution_),
           0,
           offsetof(Impl_, format_) -
               offsetof(Impl_, resolution_) +
               sizeof(Impl_::format_));
}
VideoFrame::~VideoFrame() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.VideoFrame)
  SharedDtor(*this);
}
inline void VideoFrame::SharedDtor(MessageLite& self) {
  VideoFrame& this_ = static_cast<VideoFrame&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.camera_id_.Destroy();
  this_._impl_.image_data_.Destroy();
  delete this_._impl_.resolution_;
  delete this_._impl_.timestamp_;
  delete this_._impl_.metadata_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL VideoFrame::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) VideoFrame(arena);
}
constexpr auto VideoFrame::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(VideoFrame),
                                            alignof(VideoFrame));
}
constexpr auto VideoFrame::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_VideoFrame_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &VideoFrame::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<VideoFrame>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &VideoFrame::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<VideoFrame>(), &VideoFrame::ByteSizeLong,
              &VideoFrame::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_._cached_size_),
          false,
      },
      &VideoFrame::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull VideoFrame_class_data_ =
        VideoFrame::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
VideoFrame::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&VideoFrame_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(VideoFrame_class_data_.tc_table);
  return VideoFrame_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 3, 61, 2>
VideoFrame::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    VideoFrame_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::VideoFrame>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string camera_id = 1 [json_name = "cameraId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_.camera_id_)}},
    // bytes image_data = 2 [json_name = "imageData"];
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_.image_data_)}},
    // .agricultural.robot.navigation.v1.VideoFormat format = 3 [json_name = "format"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoFrame, _impl_.format_), 6>(),
     {24, 6, 0, PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_.format_)}},
    // .agricultural.robot.navigation.v1.Resolution resolution = 4 [json_name = "resolution"];
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_.resolution_)}},
    // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 1, PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_.timestamp_)}},
    // uint64 frame_number = 6 [json_name = "frameNumber"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(VideoFrame, _impl_.frame_number_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_.frame_number_)}},
    // .agricultural.robot.navigation.v1.FrameMetadata metadata = 7 [json_name = "metadata"];
    {::_pbi::TcParser::FastMtS1,
     {58, 4, 2, PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_.metadata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string camera_id = 1 [json_name = "cameraId"];
    {PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_.camera_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes image_data = 2 [json_name = "imageData"];
    {PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_.image_data_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.VideoFormat format = 3 [json_name = "format"];
    {PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_.format_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .agricultural.robot.navigation.v1.Resolution resolution = 4 [json_name = "resolution"];
    {PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_.resolution_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_.timestamp_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 frame_number = 6 [json_name = "frameNumber"];
    {PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_.frame_number_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // .agricultural.robot.navigation.v1.FrameMetadata metadata = 7 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_.metadata_), _Internal::kHasBitsOffset + 4, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Resolution>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::FrameMetadata>()},
  }},
  {{
    "\53\11\0\0\0\0\0\0"
    "agricultural.robot.navigation.v1.VideoFrame"
    "camera_id"
  }},
};
PROTOBUF_NOINLINE void VideoFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.VideoFrame)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.camera_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.image_data_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.resolution_ != nullptr);
      _impl_.resolution_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.metadata_ != nullptr);
      _impl_.metadata_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000060u) != 0) {
    ::memset(&_impl_.frame_number_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.format_) -
        reinterpret_cast<char*>(&_impl_.frame_number_)) + sizeof(_impl_.format_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL VideoFrame::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const VideoFrame& this_ = static_cast<const VideoFrame&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL VideoFrame::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const VideoFrame& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.VideoFrame)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string camera_id = 1 [json_name = "cameraId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_camera_id().empty()) {
      const ::std::string& _s = this_._internal_camera_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.VideoFrame.camera_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // bytes image_data = 2 [json_name = "imageData"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_image_data().empty()) {
      const ::std::string& _s = this_._internal_image_data();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // .agricultural.robot.navigation.v1.VideoFormat format = 3 [json_name = "format"];
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_format() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_format(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.Resolution resolution = 4 [json_name = "resolution"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.resolution_, this_._impl_.resolution_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  // uint64 frame_number = 6 [json_name = "frameNumber"];
  if ((cached_has_bits & 0x00000020u) != 0) {
    if (this_._internal_frame_number() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          6, this_._internal_frame_number(), target);
    }
  }

  // .agricultural.robot.navigation.v1.FrameMetadata metadata = 7 [json_name = "metadata"];
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.metadata_, this_._impl_.metadata_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.VideoFrame)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t VideoFrame::ByteSizeLong(const MessageLite& base) {
  const VideoFrame& this_ = static_cast<const VideoFrame&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t VideoFrame::ByteSizeLong() const {
  const VideoFrame& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.VideoFrame)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // string camera_id = 1 [json_name = "cameraId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_camera_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_camera_id());
      }
    }
    // bytes image_data = 2 [json_name = "imageData"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_image_data().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_image_data());
      }
    }
    // .agricultural.robot.navigation.v1.Resolution resolution = 4 [json_name = "resolution"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.resolution_);
    }
    // .google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
    // .agricultural.robot.navigation.v1.FrameMetadata metadata = 7 [json_name = "metadata"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.metadata_);
    }
    // uint64 frame_number = 6 [json_name = "frameNumber"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_frame_number() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_frame_number());
      }
    }
    // .agricultural.robot.navigation.v1.VideoFormat format = 3 [json_name = "format"];
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_format() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_format());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void VideoFrame::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VideoFrame*>(&to_msg);
  auto& from = static_cast<const VideoFrame&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.VideoFrame)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_camera_id().empty()) {
        _this->_internal_set_camera_id(from._internal_camera_id());
      } else {
        if (_this->_impl_.camera_id_.IsDefault()) {
          _this->_internal_set_camera_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_image_data().empty()) {
        _this->_internal_set_image_data(from._internal_image_data());
      } else {
        if (_this->_impl_.image_data_.IsDefault()) {
          _this->_internal_set_image_data("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.resolution_ != nullptr);
      if (_this->_impl_.resolution_ == nullptr) {
        _this->_impl_.resolution_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.resolution_);
      } else {
        _this->_impl_.resolution_->MergeFrom(*from._impl_.resolution_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.metadata_ != nullptr);
      if (_this->_impl_.metadata_ == nullptr) {
        _this->_impl_.metadata_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.metadata_);
      } else {
        _this->_impl_.metadata_->MergeFrom(*from._impl_.metadata_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_frame_number() != 0) {
        _this->_impl_.frame_number_ = from._impl_.frame_number_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_format() != 0) {
        _this->_impl_.format_ = from._impl_.format_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VideoFrame::CopyFrom(const VideoFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.VideoFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VideoFrame::InternalSwap(VideoFrame* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.camera_id_, &other->_impl_.camera_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.image_data_, &other->_impl_.image_data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_.format_)
      + sizeof(VideoFrame::_impl_.format_)
      - PROTOBUF_FIELD_OFFSET(VideoFrame, _impl_.resolution_)>(
          reinterpret_cast<char*>(&_impl_.resolution_),
          reinterpret_cast<char*>(&other->_impl_.resolution_));
}

::google::protobuf::Metadata VideoFrame::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VideoStreamOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<VideoStreamOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VideoStreamOptions, _impl_._has_bits_);
};

VideoStreamOptions::VideoStreamOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, VideoStreamOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.VideoStreamOptions)
}
PROTOBUF_NDEBUG_INLINE VideoStreamOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::VideoStreamOptions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        overlays_{visibility, arena, from.overlays_},
        _overlays_cached_byte_size_{0} {}

VideoStreamOptions::VideoStreamOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const VideoStreamOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, VideoStreamOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VideoStreamOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.resolution_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.resolution_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, format_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, format_),
           offsetof(Impl_, enable_compression_) -
               offsetof(Impl_, format_) +
               sizeof(Impl_::enable_compression_));

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.VideoStreamOptions)
}
PROTOBUF_NDEBUG_INLINE VideoStreamOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        overlays_{visibility, arena},
        _overlays_cached_byte_size_{0} {}

inline void VideoStreamOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, resolution_),
           0,
           offsetof(Impl_, enable_compression_) -
               offsetof(Impl_, resolution_) +
               sizeof(Impl_::enable_compression_));
}
VideoStreamOptions::~VideoStreamOptions() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.VideoStreamOptions)
  SharedDtor(*this);
}
inline void VideoStreamOptions::SharedDtor(MessageLite& self) {
  VideoStreamOptions& this_ = static_cast<VideoStreamOptions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.resolution_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL VideoStreamOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) VideoStreamOptions(arena);
}
constexpr auto VideoStreamOptions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(VideoStreamOptions, _impl_.overlays_) +
          decltype(VideoStreamOptions::_impl_.overlays_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(VideoStreamOptions), alignof(VideoStreamOptions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&VideoStreamOptions::PlacementNew_,
                                 sizeof(VideoStreamOptions),
                                 alignof(VideoStreamOptions));
  }
}
constexpr auto VideoStreamOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_VideoStreamOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &VideoStreamOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<VideoStreamOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &VideoStreamOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<VideoStreamOptions>(), &VideoStreamOptions::ByteSizeLong,
              &VideoStreamOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(VideoStreamOptions, _impl_._cached_size_),
          false,
      },
      &VideoStreamOptions::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull VideoStreamOptions_class_data_ =
        VideoStreamOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
VideoStreamOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&VideoStreamOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(VideoStreamOptions_class_data_.tc_table);
  return VideoStreamOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2>
VideoStreamOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VideoStreamOptions, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    VideoStreamOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::VideoStreamOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .agricultural.robot.navigation.v1.VideoFormat format = 1 [json_name = "format"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoStreamOptions, _impl_.format_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(VideoStreamOptions, _impl_.format_)}},
    // .agricultural.robot.navigation.v1.Resolution resolution = 2 [json_name = "resolution"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(VideoStreamOptions, _impl_.resolution_)}},
    // uint32 framerate = 3 [json_name = "framerate"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoStreamOptions, _impl_.framerate_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(VideoStreamOptions, _impl_.framerate_)}},
    // .agricultural.robot.navigation.v1.VideoQuality quality = 4 [json_name = "quality"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoStreamOptions, _impl_.quality_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(VideoStreamOptions, _impl_.quality_)}},
    // bool enable_compression = 5 [json_name = "enableCompression"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(VideoStreamOptions, _impl_.enable_compression_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(VideoStreamOptions, _impl_.enable_compression_)}},
    // repeated .agricultural.robot.navigation.v1.OverlayType overlays = 6 [json_name = "overlays"];
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamOptions, _impl_.overlays_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .agricultural.robot.navigation.v1.VideoFormat format = 1 [json_name = "format"];
    {PROTOBUF_FIELD_OFFSET(VideoStreamOptions, _impl_.format_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .agricultural.robot.navigation.v1.Resolution resolution = 2 [json_name = "resolution"];
    {PROTOBUF_FIELD_OFFSET(VideoStreamOptions, _impl_.resolution_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 framerate = 3 [json_name = "framerate"];
    {PROTOBUF_FIELD_OFFSET(VideoStreamOptions, _impl_.framerate_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .agricultural.robot.navigation.v1.VideoQuality quality = 4 [json_name = "quality"];
    {PROTOBUF_FIELD_OFFSET(VideoStreamOptions, _impl_.quality_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // bool enable_compression = 5 [json_name = "enableCompression"];
    {PROTOBUF_FIELD_OFFSET(VideoStreamOptions, _impl_.enable_compression_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .agricultural.robot.navigation.v1.OverlayType overlays = 6 [json_name = "overlays"];
    {PROTOBUF_FIELD_OFFSET(VideoStreamOptions, _impl_.overlays_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Resolution>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void VideoStreamOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.VideoStreamOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.overlays_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.resolution_ != nullptr);
    _impl_.resolution_->Clear();
  }
  if ((cached_has_bits & 0x0000001eu) != 0) {
    ::memset(&_impl_.format_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.enable_compression_) -
        reinterpret_cast<char*>(&_impl_.format_)) + sizeof(_impl_.enable_compression_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL VideoStreamOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const VideoStreamOptions& this_ = static_cast<const VideoStreamOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL VideoStreamOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const VideoStreamOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.VideoStreamOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .agricultural.robot.navigation.v1.VideoFormat format = 1 [json_name = "format"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_format() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_format(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.Resolution resolution = 2 [json_name = "resolution"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.resolution_, this_._impl_.resolution_->GetCachedSize(), target,
        stream);
  }

  // uint32 framerate = 3 [json_name = "framerate"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_framerate() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_framerate(), target);
    }
  }

  // .agricultural.robot.navigation.v1.VideoQuality quality = 4 [json_name = "quality"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (this_._internal_quality() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_quality(), target);
    }
  }

  // bool enable_compression = 5 [json_name = "enableCompression"];
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (this_._internal_enable_compression() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_enable_compression(), target);
    }
  }

  // repeated .agricultural.robot.navigation.v1.OverlayType overlays = 6 [json_name = "overlays"];
  {
    ::size_t byte_size = this_._impl_._overlays_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          6, this_._internal_overlays(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.VideoStreamOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t VideoStreamOptions::ByteSizeLong(const MessageLite& base) {
  const VideoStreamOptions& this_ = static_cast<const VideoStreamOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t VideoStreamOptions::ByteSizeLong() const {
  const VideoStreamOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.VideoStreamOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .agricultural.robot.navigation.v1.OverlayType overlays = 6 [json_name = "overlays"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_overlays(), 1, this_._impl_._overlays_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // .agricultural.robot.navigation.v1.Resolution resolution = 2 [json_name = "resolution"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.resolution_);
    }
    // .agricultural.robot.navigation.v1.VideoFormat format = 1 [json_name = "format"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_format() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_format());
      }
    }
    // uint32 framerate = 3 [json_name = "framerate"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_framerate() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_framerate());
      }
    }
    // .agricultural.robot.navigation.v1.VideoQuality quality = 4 [json_name = "quality"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_quality() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_quality());
      }
    }
    // bool enable_compression = 5 [json_name = "enableCompression"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_enable_compression() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void VideoStreamOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VideoStreamOptions*>(&to_msg);
  auto& from = static_cast<const VideoStreamOptions&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.VideoStreamOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_overlays()->MergeFrom(from._internal_overlays());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.resolution_ != nullptr);
      if (_this->_impl_.resolution_ == nullptr) {
        _this->_impl_.resolution_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.resolution_);
      } else {
        _this->_impl_.resolution_->MergeFrom(*from._impl_.resolution_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_format() != 0) {
        _this->_impl_.format_ = from._impl_.format_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_framerate() != 0) {
        _this->_impl_.framerate_ = from._impl_.framerate_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_quality() != 0) {
        _this->_impl_.quality_ = from._impl_.quality_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_enable_compression() != 0) {
        _this->_impl_.enable_compression_ = from._impl_.enable_compression_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VideoStreamOptions::CopyFrom(const VideoStreamOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.VideoStreamOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VideoStreamOptions::InternalSwap(VideoStreamOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.overlays_.InternalSwap(&other->_impl_.overlays_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VideoStreamOptions, _impl_.enable_compression_)
      + sizeof(VideoStreamOptions::_impl_.enable_compression_)
      - PROTOBUF_FIELD_OFFSET(VideoStreamOptions, _impl_.resolution_)>(
          reinterpret_cast<char*>(&_impl_.resolution_),
          reinterpret_cast<char*>(&other->_impl_.resolution_));
}

::google::protobuf::Metadata VideoStreamOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
CameraControlCommand_ParametersEntry_DoNotUse::CameraControlCommand_ParametersEntry_DoNotUse()
    : SuperType(CameraControlCommand_ParametersEntry_DoNotUse_class_data_.base()) {}
CameraControlCommand_ParametersEntry_DoNotUse::CameraControlCommand_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, CameraControlCommand_ParametersEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
CameraControlCommand_ParametersEntry_DoNotUse::CameraControlCommand_ParametersEntry_DoNotUse() : SuperType() {}
CameraControlCommand_ParametersEntry_DoNotUse::CameraControlCommand_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL CameraControlCommand_ParametersEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CameraControlCommand_ParametersEntry_DoNotUse(arena);
}
constexpr auto CameraControlCommand_ParametersEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CameraControlCommand_ParametersEntry_DoNotUse),
                                            alignof(CameraControlCommand_ParametersEntry_DoNotUse));
}
constexpr auto CameraControlCommand_ParametersEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CameraControlCommand_ParametersEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CameraControlCommand_ParametersEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CameraControlCommand_ParametersEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CameraControlCommand_ParametersEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&CameraControlCommand_ParametersEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CameraControlCommand_ParametersEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &CameraControlCommand_ParametersEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CameraControlCommand_ParametersEntry_DoNotUse_class_data_ =
        CameraControlCommand_ParametersEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CameraControlCommand_ParametersEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CameraControlCommand_ParametersEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CameraControlCommand_ParametersEntry_DoNotUse_class_data_.tc_table);
  return CameraControlCommand_ParametersEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 81, 2>
CameraControlCommand_ParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CameraControlCommand_ParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CameraControlCommand_ParametersEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::CameraControlCommand_ParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(CameraControlCommand_ParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CameraControlCommand_ParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(CameraControlCommand_ParametersEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(CameraControlCommand_ParametersEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\105\3\0\0\0\0\0\0"
    "agricultural.robot.navigation.v1.CameraControlCommand.ParametersEntry"
    "key"
  }},
};
// ===================================================================

class CameraControlCommand::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CameraControlCommand>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CameraControlCommand, _impl_._has_bits_);
};

CameraControlCommand::CameraControlCommand(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CameraControlCommand_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.CameraControlCommand)
}
PROTOBUF_NDEBUG_INLINE CameraControlCommand::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::CameraControlCommand& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        parameters_{visibility, arena, from.parameters_} {}

CameraControlCommand::CameraControlCommand(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CameraControlCommand& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CameraControlCommand_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CameraControlCommand* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.CameraControlCommand)
}
PROTOBUF_NDEBUG_INLINE CameraControlCommand::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        parameters_{visibility, arena} {}

inline void CameraControlCommand::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
CameraControlCommand::~CameraControlCommand() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.CameraControlCommand)
  SharedDtor(*this);
}
inline void CameraControlCommand::SharedDtor(MessageLite& self) {
  CameraControlCommand& this_ = static_cast<CameraControlCommand&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CameraControlCommand::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CameraControlCommand(arena);
}
constexpr auto CameraControlCommand::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CameraControlCommand, _impl_.parameters_) +
          decltype(CameraControlCommand::_impl_.parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CameraControlCommand, _impl_.parameters_) +
          decltype(CameraControlCommand::_impl_.parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CameraControlCommand), alignof(CameraControlCommand), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CameraControlCommand::PlacementNew_,
                                 sizeof(CameraControlCommand),
                                 alignof(CameraControlCommand));
  }
}
constexpr auto CameraControlCommand::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CameraControlCommand_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CameraControlCommand::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CameraControlCommand>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CameraControlCommand::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CameraControlCommand>(), &CameraControlCommand::ByteSizeLong,
              &CameraControlCommand::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CameraControlCommand, _impl_._cached_size_),
          false,
      },
      &CameraControlCommand::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CameraControlCommand_class_data_ =
        CameraControlCommand::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CameraControlCommand::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CameraControlCommand_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CameraControlCommand_class_data_.tc_table);
  return CameraControlCommand_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 72, 2>
CameraControlCommand::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CameraControlCommand, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CameraControlCommand_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::CameraControlCommand>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .agricultural.robot.navigation.v1.CameraControlType type = 1 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CameraControlCommand, _impl_.type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CameraControlCommand, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agricultural.robot.navigation.v1.CameraControlType type = 1 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(CameraControlCommand, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // map<string, double> parameters = 2 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(CameraControlCommand, _impl_.parameters_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 1,
                                       0)},
  }},
  {{
    "\65\0\12\0\0\0\0\0"
    "agricultural.robot.navigation.v1.CameraControlCommand"
    "parameters"
  }},
};
PROTOBUF_NOINLINE void CameraControlCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.CameraControlCommand)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CameraControlCommand::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CameraControlCommand& this_ = static_cast<const CameraControlCommand&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CameraControlCommand::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CameraControlCommand& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.CameraControlCommand)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .agricultural.robot.navigation.v1.CameraControlType type = 1 [json_name = "type"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  // map<string, double> parameters = 2 [json_name = "parameters"];
  if (!this_._internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<std::string, double>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, double,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_DOUBLE>;
    const auto& field = this_._internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.CameraControlCommand.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.CameraControlCommand.parameters");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.CameraControlCommand)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CameraControlCommand::ByteSizeLong(const MessageLite& base) {
  const CameraControlCommand& this_ = static_cast<const CameraControlCommand&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CameraControlCommand::ByteSizeLong() const {
  const CameraControlCommand& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.CameraControlCommand)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, double> parameters = 2 [json_name = "parameters"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_parameters_size());
      for (const auto& entry : this_._internal_parameters()) {
        total_size += _pbi::MapEntryFuncs<std::string, double,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_DOUBLE>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
   {
    // .agricultural.robot.navigation.v1.CameraControlType type = 1 [json_name = "type"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CameraControlCommand::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CameraControlCommand*>(&to_msg);
  auto& from = static_cast<const CameraControlCommand&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.CameraControlCommand)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_type() != 0) {
      _this->_impl_.type_ = from._impl_.type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CameraControlCommand::CopyFrom(const CameraControlCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.CameraControlCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CameraControlCommand::InternalSwap(CameraControlCommand* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata CameraControlCommand::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
CameraControlResponse_CurrentSettingsEntry_DoNotUse::CameraControlResponse_CurrentSettingsEntry_DoNotUse()
    : SuperType(CameraControlResponse_CurrentSettingsEntry_DoNotUse_class_data_.base()) {}
CameraControlResponse_CurrentSettingsEntry_DoNotUse::CameraControlResponse_CurrentSettingsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, CameraControlResponse_CurrentSettingsEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
CameraControlResponse_CurrentSettingsEntry_DoNotUse::CameraControlResponse_CurrentSettingsEntry_DoNotUse() : SuperType() {}
CameraControlResponse_CurrentSettingsEntry_DoNotUse::CameraControlResponse_CurrentSettingsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL CameraControlResponse_CurrentSettingsEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CameraControlResponse_CurrentSettingsEntry_DoNotUse(arena);
}
constexpr auto CameraControlResponse_CurrentSettingsEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CameraControlResponse_CurrentSettingsEntry_DoNotUse),
                                            alignof(CameraControlResponse_CurrentSettingsEntry_DoNotUse));
}
constexpr auto CameraControlResponse_CurrentSettingsEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CameraControlResponse_CurrentSettingsEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CameraControlResponse_CurrentSettingsEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CameraControlResponse_CurrentSettingsEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CameraControlResponse_CurrentSettingsEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&CameraControlResponse_CurrentSettingsEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CameraControlResponse_CurrentSettingsEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &CameraControlResponse_CurrentSettingsEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CameraControlResponse_CurrentSettingsEntry_DoNotUse_class_data_ =
        CameraControlResponse_CurrentSettingsEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CameraControlResponse_CurrentSettingsEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CameraControlResponse_CurrentSettingsEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CameraControlResponse_CurrentSettingsEntry_DoNotUse_class_data_.tc_table);
  return CameraControlResponse_CurrentSettingsEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 87, 2>
CameraControlResponse_CurrentSettingsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CameraControlResponse_CurrentSettingsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CameraControlResponse_CurrentSettingsEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::CameraControlResponse_CurrentSettingsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(CameraControlResponse_CurrentSettingsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CameraControlResponse_CurrentSettingsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(CameraControlResponse_CurrentSettingsEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(CameraControlResponse_CurrentSettingsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\113\3\0\0\0\0\0\0"
    "agricultural.robot.navigation.v1.CameraControlResponse.CurrentSettingsEntry"
    "key"
  }},
};
// ===================================================================

class CameraControlResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CameraControlResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CameraControlResponse, _impl_._has_bits_);
};

void CameraControlResponse::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CameraControlResponse::CameraControlResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CameraControlResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.CameraControlResponse)
}
PROTOBUF_NDEBUG_INLINE CameraControlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::CameraControlResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        current_settings_{visibility, arena, from.current_settings_},
        message_(arena, from.message_) {}

CameraControlResponse::CameraControlResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CameraControlResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CameraControlResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CameraControlResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.CameraControlResponse)
}
PROTOBUF_NDEBUG_INLINE CameraControlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        current_settings_{visibility, arena},
        message_(arena) {}

inline void CameraControlResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::success_));
}
CameraControlResponse::~CameraControlResponse() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.CameraControlResponse)
  SharedDtor(*this);
}
inline void CameraControlResponse::SharedDtor(MessageLite& self) {
  CameraControlResponse& this_ = static_cast<CameraControlResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  delete this_._impl_.timestamp_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CameraControlResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CameraControlResponse(arena);
}
constexpr auto CameraControlResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CameraControlResponse, _impl_.current_settings_) +
          decltype(CameraControlResponse::_impl_.current_settings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CameraControlResponse, _impl_.current_settings_) +
          decltype(CameraControlResponse::_impl_.current_settings_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CameraControlResponse), alignof(CameraControlResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CameraControlResponse::PlacementNew_,
                                 sizeof(CameraControlResponse),
                                 alignof(CameraControlResponse));
  }
}
constexpr auto CameraControlResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CameraControlResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CameraControlResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CameraControlResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CameraControlResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CameraControlResponse>(), &CameraControlResponse::ByteSizeLong,
              &CameraControlResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CameraControlResponse, _impl_._cached_size_),
          false,
      },
      &CameraControlResponse::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CameraControlResponse_class_data_ =
        CameraControlResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CameraControlResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CameraControlResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CameraControlResponse_class_data_.tc_table);
  return CameraControlResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 86, 2>
CameraControlResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CameraControlResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CameraControlResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::CameraControlResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(CameraControlResponse, _impl_.timestamp_)}},
    // bool success = 1 [json_name = "success"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CameraControlResponse, _impl_.success_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CameraControlResponse, _impl_.success_)}},
    // string message = 2 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CameraControlResponse, _impl_.message_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1 [json_name = "success"];
    {PROTOBUF_FIELD_OFFSET(CameraControlResponse, _impl_.success_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string message = 2 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(CameraControlResponse, _impl_.message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, double> current_settings = 3 [json_name = "currentSettings"];
    {PROTOBUF_FIELD_OFFSET(CameraControlResponse, _impl_.current_settings_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(CameraControlResponse, _impl_.timestamp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 1,
                                       0)},
  }},
  {{
    "\66\0\7\20\0\0\0\0"
    "agricultural.robot.navigation.v1.CameraControlResponse"
    "message"
    "current_settings"
  }},
};
PROTOBUF_NOINLINE void CameraControlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.CameraControlResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.current_settings_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
  }
  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CameraControlResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CameraControlResponse& this_ = static_cast<const CameraControlResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CameraControlResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CameraControlResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.CameraControlResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1 [json_name = "success"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_success() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_success(), target);
    }
  }

  // string message = 2 [json_name = "message"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.CameraControlResponse.message");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // map<string, double> current_settings = 3 [json_name = "currentSettings"];
  if (!this_._internal_current_settings().empty()) {
    using MapType = ::google::protobuf::Map<std::string, double>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, double,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_DOUBLE>;
    const auto& field = this_._internal_current_settings();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.CameraControlResponse.current_settings");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.CameraControlResponse.current_settings");
      }
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.CameraControlResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CameraControlResponse::ByteSizeLong(const MessageLite& base) {
  const CameraControlResponse& this_ = static_cast<const CameraControlResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CameraControlResponse::ByteSizeLong() const {
  const CameraControlResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.CameraControlResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, double> current_settings = 3 [json_name = "currentSettings"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_current_settings_size());
      for (const auto& entry : this_._internal_current_settings()) {
        total_size += _pbi::MapEntryFuncs<std::string, double,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_DOUBLE>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string message = 2 [json_name = "message"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
    // bool success = 1 [json_name = "success"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_success() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CameraControlResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CameraControlResponse*>(&to_msg);
  auto& from = static_cast<const CameraControlResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.CameraControlResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.current_settings_.MergeFrom(from._impl_.current_settings_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_success() != 0) {
        _this->_impl_.success_ = from._impl_.success_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CameraControlResponse::CopyFrom(const CameraControlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.CameraControlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CameraControlResponse::InternalSwap(CameraControlResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.current_settings_.InternalSwap(&other->_impl_.current_settings_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CameraControlResponse, _impl_.success_)
      + sizeof(CameraControlResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(CameraControlResponse, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata CameraControlResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Resolution::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Resolution>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Resolution, _impl_._has_bits_);
};

Resolution::Resolution(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Resolution_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.Resolution)
}
Resolution::Resolution(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Resolution& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Resolution_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Resolution::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Resolution::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::height_));
}
Resolution::~Resolution() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.Resolution)
  SharedDtor(*this);
}
inline void Resolution::SharedDtor(MessageLite& self) {
  Resolution& this_ = static_cast<Resolution&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Resolution::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Resolution(arena);
}
constexpr auto Resolution::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Resolution),
                                            alignof(Resolution));
}
constexpr auto Resolution::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Resolution_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Resolution::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Resolution>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Resolution::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Resolution>(), &Resolution::ByteSizeLong,
              &Resolution::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Resolution, _impl_._cached_size_),
          false,
      },
      &Resolution::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Resolution_class_data_ =
        Resolution::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Resolution::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Resolution_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Resolution_class_data_.tc_table);
  return Resolution_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
Resolution::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Resolution, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Resolution_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Resolution>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 height = 2 [json_name = "height"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Resolution, _impl_.height_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Resolution, _impl_.height_)}},
    // uint32 width = 1 [json_name = "width"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Resolution, _impl_.width_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Resolution, _impl_.width_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 width = 1 [json_name = "width"];
    {PROTOBUF_FIELD_OFFSET(Resolution, _impl_.width_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 height = 2 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(Resolution, _impl_.height_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Resolution::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.Resolution)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.width_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.height_) -
        reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.height_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Resolution::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Resolution& this_ = static_cast<const Resolution&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Resolution::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Resolution& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.Resolution)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 width = 1 [json_name = "width"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_width() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_width(), target);
    }
  }

  // uint32 height = 2 [json_name = "height"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_height() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_height(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.Resolution)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Resolution::ByteSizeLong(const MessageLite& base) {
  const Resolution& this_ = static_cast<const Resolution&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Resolution::ByteSizeLong() const {
  const Resolution& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.Resolution)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // uint32 width = 1 [json_name = "width"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_width() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_width());
      }
    }
    // uint32 height = 2 [json_name = "height"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_height() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_height());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Resolution::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Resolution*>(&to_msg);
  auto& from = static_cast<const Resolution&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.Resolution)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_width() != 0) {
        _this->_impl_.width_ = from._impl_.width_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_height() != 0) {
        _this->_impl_.height_ = from._impl_.height_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Resolution::CopyFrom(const Resolution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.Resolution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Resolution::InternalSwap(Resolution* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Resolution, _impl_.height_)
      + sizeof(Resolution::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(Resolution, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::google::protobuf::Metadata Resolution::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CameraIntrinsics::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CameraIntrinsics>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CameraIntrinsics, _impl_._has_bits_);
};

CameraIntrinsics::CameraIntrinsics(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CameraIntrinsics_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.CameraIntrinsics)
}
PROTOBUF_NDEBUG_INLINE CameraIntrinsics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::CameraIntrinsics& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        camera_matrix_{visibility, arena, from.camera_matrix_} {}

CameraIntrinsics::CameraIntrinsics(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CameraIntrinsics& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CameraIntrinsics_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CameraIntrinsics* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, focal_length_x_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, focal_length_x_),
           offsetof(Impl_, principal_point_y_) -
               offsetof(Impl_, focal_length_x_) +
               sizeof(Impl_::principal_point_y_));

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.CameraIntrinsics)
}
PROTOBUF_NDEBUG_INLINE CameraIntrinsics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        camera_matrix_{visibility, arena} {}

inline void CameraIntrinsics::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, focal_length_x_),
           0,
           offsetof(Impl_, principal_point_y_) -
               offsetof(Impl_, focal_length_x_) +
               sizeof(Impl_::principal_point_y_));
}
CameraIntrinsics::~CameraIntrinsics() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.CameraIntrinsics)
  SharedDtor(*this);
}
inline void CameraIntrinsics::SharedDtor(MessageLite& self) {
  CameraIntrinsics& this_ = static_cast<CameraIntrinsics&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CameraIntrinsics::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CameraIntrinsics(arena);
}
constexpr auto CameraIntrinsics::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CameraIntrinsics, _impl_.camera_matrix_) +
          decltype(CameraIntrinsics::_impl_.camera_matrix_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CameraIntrinsics), alignof(CameraIntrinsics), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CameraIntrinsics::PlacementNew_,
                                 sizeof(CameraIntrinsics),
                                 alignof(CameraIntrinsics));
  }
}
constexpr auto CameraIntrinsics::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CameraIntrinsics_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CameraIntrinsics::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CameraIntrinsics>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CameraIntrinsics::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CameraIntrinsics>(), &CameraIntrinsics::ByteSizeLong,
              &CameraIntrinsics::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CameraIntrinsics, _impl_._cached_size_),
          false,
      },
      &CameraIntrinsics::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CameraIntrinsics_class_data_ =
        CameraIntrinsics::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CameraIntrinsics::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CameraIntrinsics_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CameraIntrinsics_class_data_.tc_table);
  return CameraIntrinsics_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
CameraIntrinsics::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CameraIntrinsics, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CameraIntrinsics_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::CameraIntrinsics>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double focal_length_x = 1 [json_name = "focalLengthX"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CameraIntrinsics, _impl_.focal_length_x_)}},
    // double focal_length_y = 2 [json_name = "focalLengthY"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(CameraIntrinsics, _impl_.focal_length_y_)}},
    // double principal_point_x = 3 [json_name = "principalPointX"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(CameraIntrinsics, _impl_.principal_point_x_)}},
    // double principal_point_y = 4 [json_name = "principalPointY"];
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(CameraIntrinsics, _impl_.principal_point_y_)}},
    // repeated double camera_matrix = 5 [json_name = "cameraMatrix"];
    {::_pbi::TcParser::FastF64P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CameraIntrinsics, _impl_.camera_matrix_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double focal_length_x = 1 [json_name = "focalLengthX"];
    {PROTOBUF_FIELD_OFFSET(CameraIntrinsics, _impl_.focal_length_x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double focal_length_y = 2 [json_name = "focalLengthY"];
    {PROTOBUF_FIELD_OFFSET(CameraIntrinsics, _impl_.focal_length_y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double principal_point_x = 3 [json_name = "principalPointX"];
    {PROTOBUF_FIELD_OFFSET(CameraIntrinsics, _impl_.principal_point_x_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double principal_point_y = 4 [json_name = "principalPointY"];
    {PROTOBUF_FIELD_OFFSET(CameraIntrinsics, _impl_.principal_point_y_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // repeated double camera_matrix = 5 [json_name = "cameraMatrix"];
    {PROTOBUF_FIELD_OFFSET(CameraIntrinsics, _impl_.camera_matrix_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CameraIntrinsics::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.CameraIntrinsics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.camera_matrix_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.focal_length_x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.principal_point_y_) -
        reinterpret_cast<char*>(&_impl_.focal_length_x_)) + sizeof(_impl_.principal_point_y_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CameraIntrinsics::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CameraIntrinsics& this_ = static_cast<const CameraIntrinsics&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CameraIntrinsics::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CameraIntrinsics& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.CameraIntrinsics)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double focal_length_x = 1 [json_name = "focalLengthX"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_focal_length_x()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_focal_length_x(), target);
    }
  }

  // double focal_length_y = 2 [json_name = "focalLengthY"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_focal_length_y()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_focal_length_y(), target);
    }
  }

  // double principal_point_x = 3 [json_name = "principalPointX"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_principal_point_x()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_principal_point_x(), target);
    }
  }

  // double principal_point_y = 4 [json_name = "principalPointY"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_principal_point_y()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_principal_point_y(), target);
    }
  }

  // repeated double camera_matrix = 5 [json_name = "cameraMatrix"];
  if (this_._internal_camera_matrix_size() > 0) {
    target = stream->WriteFixedPacked(5, this_._internal_camera_matrix(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.CameraIntrinsics)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CameraIntrinsics::ByteSizeLong(const MessageLite& base) {
  const CameraIntrinsics& this_ = static_cast<const CameraIntrinsics&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CameraIntrinsics::ByteSizeLong() const {
  const CameraIntrinsics& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.CameraIntrinsics)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated double camera_matrix = 5 [json_name = "cameraMatrix"];
    {
      ::size_t data_size = ::size_t{8} *
          ::_pbi::FromIntSize(this_._internal_camera_matrix_size());
      ::size_t tag_size = data_size == 0
          ? 0
          : 1 + ::_pbi::WireFormatLite::Int32Size(
                              static_cast<::int32_t>(data_size));
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // double focal_length_x = 1 [json_name = "focalLengthX"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_focal_length_x()) != 0) {
        total_size += 9;
      }
    }
    // double focal_length_y = 2 [json_name = "focalLengthY"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_focal_length_y()) != 0) {
        total_size += 9;
      }
    }
    // double principal_point_x = 3 [json_name = "principalPointX"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_principal_point_x()) != 0) {
        total_size += 9;
      }
    }
    // double principal_point_y = 4 [json_name = "principalPointY"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_principal_point_y()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CameraIntrinsics::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CameraIntrinsics*>(&to_msg);
  auto& from = static_cast<const CameraIntrinsics&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.CameraIntrinsics)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_camera_matrix()->MergeFrom(from._internal_camera_matrix());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_focal_length_x()) != 0) {
        _this->_impl_.focal_length_x_ = from._impl_.focal_length_x_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_focal_length_y()) != 0) {
        _this->_impl_.focal_length_y_ = from._impl_.focal_length_y_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_principal_point_x()) != 0) {
        _this->_impl_.principal_point_x_ = from._impl_.principal_point_x_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_principal_point_y()) != 0) {
        _this->_impl_.principal_point_y_ = from._impl_.principal_point_y_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CameraIntrinsics::CopyFrom(const CameraIntrinsics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.CameraIntrinsics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CameraIntrinsics::InternalSwap(CameraIntrinsics* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.camera_matrix_.InternalSwap(&other->_impl_.camera_matrix_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CameraIntrinsics, _impl_.principal_point_y_)
      + sizeof(CameraIntrinsics::_impl_.principal_point_y_)
      - PROTOBUF_FIELD_OFFSET(CameraIntrinsics, _impl_.focal_length_x_)>(
          reinterpret_cast<char*>(&_impl_.focal_length_x_),
          reinterpret_cast<char*>(&other->_impl_.focal_length_x_));
}

::google::protobuf::Metadata CameraIntrinsics::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CameraDistortion::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CameraDistortion>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CameraDistortion, _impl_._has_bits_);
};

CameraDistortion::CameraDistortion(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CameraDistortion_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.CameraDistortion)
}
PROTOBUF_NDEBUG_INLINE CameraDistortion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::CameraDistortion& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        coefficients_{visibility, arena, from.coefficients_} {}

CameraDistortion::CameraDistortion(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CameraDistortion& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CameraDistortion_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CameraDistortion* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.model_ = from._impl_.model_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.CameraDistortion)
}
PROTOBUF_NDEBUG_INLINE CameraDistortion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        coefficients_{visibility, arena} {}

inline void CameraDistortion::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.model_ = {};
}
CameraDistortion::~CameraDistortion() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.CameraDistortion)
  SharedDtor(*this);
}
inline void CameraDistortion::SharedDtor(MessageLite& self) {
  CameraDistortion& this_ = static_cast<CameraDistortion&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CameraDistortion::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CameraDistortion(arena);
}
constexpr auto CameraDistortion::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CameraDistortion, _impl_.coefficients_) +
          decltype(CameraDistortion::_impl_.coefficients_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CameraDistortion), alignof(CameraDistortion), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CameraDistortion::PlacementNew_,
                                 sizeof(CameraDistortion),
                                 alignof(CameraDistortion));
  }
}
constexpr auto CameraDistortion::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CameraDistortion_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CameraDistortion::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CameraDistortion>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CameraDistortion::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CameraDistortion>(), &CameraDistortion::ByteSizeLong,
              &CameraDistortion::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CameraDistortion, _impl_._cached_size_),
          false,
      },
      &CameraDistortion::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CameraDistortion_class_data_ =
        CameraDistortion::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CameraDistortion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CameraDistortion_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CameraDistortion_class_data_.tc_table);
  return CameraDistortion_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
CameraDistortion::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CameraDistortion, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CameraDistortion_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::CameraDistortion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated double coefficients = 2 [json_name = "coefficients"];
    {::_pbi::TcParser::FastF64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CameraDistortion, _impl_.coefficients_)}},
    // .agricultural.robot.navigation.v1.DistortionModel model = 1 [json_name = "model"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CameraDistortion, _impl_.model_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CameraDistortion, _impl_.model_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agricultural.robot.navigation.v1.DistortionModel model = 1 [json_name = "model"];
    {PROTOBUF_FIELD_OFFSET(CameraDistortion, _impl_.model_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated double coefficients = 2 [json_name = "coefficients"];
    {PROTOBUF_FIELD_OFFSET(CameraDistortion, _impl_.coefficients_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CameraDistortion::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.CameraDistortion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.coefficients_.Clear();
  _impl_.model_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CameraDistortion::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CameraDistortion& this_ = static_cast<const CameraDistortion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CameraDistortion::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CameraDistortion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.CameraDistortion)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .agricultural.robot.navigation.v1.DistortionModel model = 1 [json_name = "model"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_model() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_model(), target);
    }
  }

  // repeated double coefficients = 2 [json_name = "coefficients"];
  if (this_._internal_coefficients_size() > 0) {
    target = stream->WriteFixedPacked(2, this_._internal_coefficients(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.CameraDistortion)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CameraDistortion::ByteSizeLong(const MessageLite& base) {
  const CameraDistortion& this_ = static_cast<const CameraDistortion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CameraDistortion::ByteSizeLong() const {
  const CameraDistortion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.CameraDistortion)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated double coefficients = 2 [json_name = "coefficients"];
    {
      ::size_t data_size = ::size_t{8} *
          ::_pbi::FromIntSize(this_._internal_coefficients_size());
      ::size_t tag_size = data_size == 0
          ? 0
          : 1 + ::_pbi::WireFormatLite::Int32Size(
                              static_cast<::int32_t>(data_size));
      total_size += tag_size + data_size;
    }
  }
   {
    // .agricultural.robot.navigation.v1.DistortionModel model = 1 [json_name = "model"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_model() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_model());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CameraDistortion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CameraDistortion*>(&to_msg);
  auto& from = static_cast<const CameraDistortion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.CameraDistortion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_coefficients()->MergeFrom(from._internal_coefficients());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_model() != 0) {
      _this->_impl_.model_ = from._impl_.model_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CameraDistortion::CopyFrom(const CameraDistortion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.CameraDistortion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CameraDistortion::InternalSwap(CameraDistortion* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.coefficients_.InternalSwap(&other->_impl_.coefficients_);
  swap(_impl_.model_, other->_impl_.model_);
}

::google::protobuf::Metadata CameraDistortion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FrameMetadata::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<FrameMetadata>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FrameMetadata, _impl_._has_bits_);
};

void FrameMetadata::clear_capture_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.capture_time_ != nullptr) _impl_.capture_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
FrameMetadata::FrameMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FrameMetadata_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.FrameMetadata)
}
PROTOBUF_NDEBUG_INLINE FrameMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::FrameMetadata& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FrameMetadata::FrameMetadata(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const FrameMetadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FrameMetadata_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FrameMetadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.capture_time_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.capture_time_)
                : nullptr;
  _impl_.camera_pose_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.camera_pose_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, exposure_time_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, exposure_time_),
           offsetof(Impl_, white_balance_) -
               offsetof(Impl_, exposure_time_) +
               sizeof(Impl_::white_balance_));

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.FrameMetadata)
}
PROTOBUF_NDEBUG_INLINE FrameMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void FrameMetadata::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, capture_time_),
           0,
           offsetof(Impl_, white_balance_) -
               offsetof(Impl_, capture_time_) +
               sizeof(Impl_::white_balance_));
}
FrameMetadata::~FrameMetadata() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.FrameMetadata)
  SharedDtor(*this);
}
inline void FrameMetadata::SharedDtor(MessageLite& self) {
  FrameMetadata& this_ = static_cast<FrameMetadata&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.capture_time_;
  delete this_._impl_.camera_pose_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL FrameMetadata::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) FrameMetadata(arena);
}
constexpr auto FrameMetadata::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FrameMetadata),
                                            alignof(FrameMetadata));
}
constexpr auto FrameMetadata::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_FrameMetadata_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &FrameMetadata::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<FrameMetadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &FrameMetadata::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<FrameMetadata>(), &FrameMetadata::ByteSizeLong,
              &FrameMetadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(FrameMetadata, _impl_._cached_size_),
          false,
      },
      &FrameMetadata::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull FrameMetadata_class_data_ =
        FrameMetadata::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
FrameMetadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&FrameMetadata_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(FrameMetadata_class_data_.tc_table);
  return FrameMetadata_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2>
FrameMetadata::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FrameMetadata, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    FrameMetadata_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::FrameMetadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double exposure_time = 1 [json_name = "exposureTime"];
    {::_pbi::TcParser::FastF64S1,
     {9, 2, 0, PROTOBUF_FIELD_OFFSET(FrameMetadata, _impl_.exposure_time_)}},
    // double gain = 2 [json_name = "gain"];
    {::_pbi::TcParser::FastF64S1,
     {17, 3, 0, PROTOBUF_FIELD_OFFSET(FrameMetadata, _impl_.gain_)}},
    // double white_balance = 3 [json_name = "whiteBalance"];
    {::_pbi::TcParser::FastF64S1,
     {25, 4, 0, PROTOBUF_FIELD_OFFSET(FrameMetadata, _impl_.white_balance_)}},
    // .google.protobuf.Timestamp capture_time = 4 [json_name = "captureTime"];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(FrameMetadata, _impl_.capture_time_)}},
    // optional .agricultural.robot.navigation.v1.Pose camera_pose = 5 [json_name = "cameraPose"];
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(FrameMetadata, _impl_.camera_pose_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double exposure_time = 1 [json_name = "exposureTime"];
    {PROTOBUF_FIELD_OFFSET(FrameMetadata, _impl_.exposure_time_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double gain = 2 [json_name = "gain"];
    {PROTOBUF_FIELD_OFFSET(FrameMetadata, _impl_.gain_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double white_balance = 3 [json_name = "whiteBalance"];
    {PROTOBUF_FIELD_OFFSET(FrameMetadata, _impl_.white_balance_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // .google.protobuf.Timestamp capture_time = 4 [json_name = "captureTime"];
    {PROTOBUF_FIELD_OFFSET(FrameMetadata, _impl_.capture_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .agricultural.robot.navigation.v1.Pose camera_pose = 5 [json_name = "cameraPose"];
    {PROTOBUF_FIELD_OFFSET(FrameMetadata, _impl_.camera_pose_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::Pose>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void FrameMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.FrameMetadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.capture_time_ != nullptr);
      _impl_.capture_time_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.camera_pose_ != nullptr);
      _impl_.camera_pose_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000001cu) != 0) {
    ::memset(&_impl_.exposure_time_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.white_balance_) -
        reinterpret_cast<char*>(&_impl_.exposure_time_)) + sizeof(_impl_.white_balance_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL FrameMetadata::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const FrameMetadata& this_ = static_cast<const FrameMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL FrameMetadata::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const FrameMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.FrameMetadata)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double exposure_time = 1 [json_name = "exposureTime"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_exposure_time()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_exposure_time(), target);
    }
  }

  // double gain = 2 [json_name = "gain"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_gain()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_gain(), target);
    }
  }

  // double white_balance = 3 [json_name = "whiteBalance"];
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_white_balance()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_white_balance(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp capture_time = 4 [json_name = "captureTime"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.capture_time_, this_._impl_.capture_time_->GetCachedSize(), target,
        stream);
  }

  // optional .agricultural.robot.navigation.v1.Pose camera_pose = 5 [json_name = "cameraPose"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.camera_pose_, this_._impl_.camera_pose_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.FrameMetadata)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t FrameMetadata::ByteSizeLong(const MessageLite& base) {
  const FrameMetadata& this_ = static_cast<const FrameMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t FrameMetadata::ByteSizeLong() const {
  const FrameMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.FrameMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // .google.protobuf.Timestamp capture_time = 4 [json_name = "captureTime"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.capture_time_);
    }
    // optional .agricultural.robot.navigation.v1.Pose camera_pose = 5 [json_name = "cameraPose"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.camera_pose_);
    }
    // double exposure_time = 1 [json_name = "exposureTime"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_exposure_time()) != 0) {
        total_size += 9;
      }
    }
    // double gain = 2 [json_name = "gain"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_gain()) != 0) {
        total_size += 9;
      }
    }
    // double white_balance = 3 [json_name = "whiteBalance"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_white_balance()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void FrameMetadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FrameMetadata*>(&to_msg);
  auto& from = static_cast<const FrameMetadata&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.FrameMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.capture_time_ != nullptr);
      if (_this->_impl_.capture_time_ == nullptr) {
        _this->_impl_.capture_time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.capture_time_);
      } else {
        _this->_impl_.capture_time_->MergeFrom(*from._impl_.capture_time_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.camera_pose_ != nullptr);
      if (_this->_impl_.camera_pose_ == nullptr) {
        _this->_impl_.camera_pose_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.camera_pose_);
      } else {
        _this->_impl_.camera_pose_->MergeFrom(*from._impl_.camera_pose_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_exposure_time()) != 0) {
        _this->_impl_.exposure_time_ = from._impl_.exposure_time_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_gain()) != 0) {
        _this->_impl_.gain_ = from._impl_.gain_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_white_balance()) != 0) {
        _this->_impl_.white_balance_ = from._impl_.white_balance_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FrameMetadata::CopyFrom(const FrameMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.FrameMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FrameMetadata::InternalSwap(FrameMetadata* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrameMetadata, _impl_.white_balance_)
      + sizeof(FrameMetadata::_impl_.white_balance_)
      - PROTOBUF_FIELD_OFFSET(FrameMetadata, _impl_.capture_time_)>(
          reinterpret_cast<char*>(&_impl_.capture_time_),
          reinterpret_cast<char*>(&other->_impl_.capture_time_));
}

::google::protobuf::Metadata FrameMetadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetLocalizationStatusRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetLocalizationStatusRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetLocalizationStatusRequest, _impl_._has_bits_);
};

GetLocalizationStatusRequest::GetLocalizationStatusRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetLocalizationStatusRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.GetLocalizationStatusRequest)
}
PROTOBUF_NDEBUG_INLINE GetLocalizationStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::GetLocalizationStatusRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_) {}

GetLocalizationStatusRequest::GetLocalizationStatusRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetLocalizationStatusRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetLocalizationStatusRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetLocalizationStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.GetLocalizationStatusRequest)
}
PROTOBUF_NDEBUG_INLINE GetLocalizationStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena) {}

inline void GetLocalizationStatusRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetLocalizationStatusRequest::~GetLocalizationStatusRequest() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.GetLocalizationStatusRequest)
  SharedDtor(*this);
}
inline void GetLocalizationStatusRequest::SharedDtor(MessageLite& self) {
  GetLocalizationStatusRequest& this_ = static_cast<GetLocalizationStatusRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetLocalizationStatusRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetLocalizationStatusRequest(arena);
}
constexpr auto GetLocalizationStatusRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetLocalizationStatusRequest),
                                            alignof(GetLocalizationStatusRequest));
}
constexpr auto GetLocalizationStatusRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetLocalizationStatusRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetLocalizationStatusRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetLocalizationStatusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetLocalizationStatusRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetLocalizationStatusRequest>(), &GetLocalizationStatusRequest::ByteSizeLong,
              &GetLocalizationStatusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetLocalizationStatusRequest, _impl_._cached_size_),
          false,
      },
      &GetLocalizationStatusRequest::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetLocalizationStatusRequest_class_data_ =
        GetLocalizationStatusRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetLocalizationStatusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetLocalizationStatusRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetLocalizationStatusRequest_class_data_.tc_table);
  return GetLocalizationStatusRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 78, 2>
GetLocalizationStatusRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetLocalizationStatusRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetLocalizationStatusRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::GetLocalizationStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetLocalizationStatusRequest, _impl_.robot_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(GetLocalizationStatusRequest, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\75\10\0\0\0\0\0\0"
    "agricultural.robot.navigation.v1.GetLocalizationStatusRequest"
    "robot_id"
  }},
};
PROTOBUF_NOINLINE void GetLocalizationStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.GetLocalizationStatusRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.robot_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetLocalizationStatusRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetLocalizationStatusRequest& this_ = static_cast<const GetLocalizationStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetLocalizationStatusRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetLocalizationStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.GetLocalizationStatusRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.GetLocalizationStatusRequest.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.GetLocalizationStatusRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetLocalizationStatusRequest::ByteSizeLong(const MessageLite& base) {
  const GetLocalizationStatusRequest& this_ = static_cast<const GetLocalizationStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetLocalizationStatusRequest::ByteSizeLong() const {
  const GetLocalizationStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.GetLocalizationStatusRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string robot_id = 1 [json_name = "robotId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetLocalizationStatusRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetLocalizationStatusRequest*>(&to_msg);
  auto& from = static_cast<const GetLocalizationStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.GetLocalizationStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_robot_id().empty()) {
      _this->_internal_set_robot_id(from._internal_robot_id());
    } else {
      if (_this->_impl_.robot_id_.IsDefault()) {
        _this->_internal_set_robot_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetLocalizationStatusRequest::CopyFrom(const GetLocalizationStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.GetLocalizationStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetLocalizationStatusRequest::InternalSwap(GetLocalizationStatusRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
}

::google::protobuf::Metadata GetLocalizationStatusRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
InitializeLocalizationRequest_ParametersEntry_DoNotUse::InitializeLocalizationRequest_ParametersEntry_DoNotUse()
    : SuperType(InitializeLocalizationRequest_ParametersEntry_DoNotUse_class_data_.base()) {}
InitializeLocalizationRequest_ParametersEntry_DoNotUse::InitializeLocalizationRequest_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, InitializeLocalizationRequest_ParametersEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
InitializeLocalizationRequest_ParametersEntry_DoNotUse::InitializeLocalizationRequest_ParametersEntry_DoNotUse() : SuperType() {}
InitializeLocalizationRequest_ParametersEntry_DoNotUse::InitializeLocalizationRequest_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL InitializeLocalizationRequest_ParametersEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) InitializeLocalizationRequest_ParametersEntry_DoNotUse(arena);
}
constexpr auto InitializeLocalizationRequest_ParametersEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InitializeLocalizationRequest_ParametersEntry_DoNotUse),
                                            alignof(InitializeLocalizationRequest_ParametersEntry_DoNotUse));
}
constexpr auto InitializeLocalizationRequest_ParametersEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_InitializeLocalizationRequest_ParametersEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &InitializeLocalizationRequest_ParametersEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<InitializeLocalizationRequest_ParametersEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &InitializeLocalizationRequest_ParametersEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&InitializeLocalizationRequest_ParametersEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest_ParametersEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &InitializeLocalizationRequest_ParametersEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull InitializeLocalizationRequest_ParametersEntry_DoNotUse_class_data_ =
        InitializeLocalizationRequest_ParametersEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
InitializeLocalizationRequest_ParametersEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&InitializeLocalizationRequest_ParametersEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(InitializeLocalizationRequest_ParametersEntry_DoNotUse_class_data_.tc_table);
  return InitializeLocalizationRequest_ParametersEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 95, 2>
InitializeLocalizationRequest_ParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest_ParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    InitializeLocalizationRequest_ParametersEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::InitializeLocalizationRequest_ParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest_ParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest_ParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest_ParametersEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest_ParametersEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\116\3\5\0\0\0\0\0"
    "agricultural.robot.navigation.v1.InitializeLocalizationRequest.ParametersEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class InitializeLocalizationRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<InitializeLocalizationRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest, _impl_._has_bits_);
};

InitializeLocalizationRequest::InitializeLocalizationRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InitializeLocalizationRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.InitializeLocalizationRequest)
}
PROTOBUF_NDEBUG_INLINE InitializeLocalizationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::InitializeLocalizationRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        parameters_{visibility, arena, from.parameters_},
        robot_id_(arena, from.robot_id_) {}

InitializeLocalizationRequest::InitializeLocalizationRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const InitializeLocalizationRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InitializeLocalizationRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InitializeLocalizationRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.initial_pose_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.initial_pose_)
                : nullptr;
  _impl_.method_ = from._impl_.method_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.InitializeLocalizationRequest)
}
PROTOBUF_NDEBUG_INLINE InitializeLocalizationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        parameters_{visibility, arena},
        robot_id_(arena) {}

inline void InitializeLocalizationRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, initial_pose_),
           0,
           offsetof(Impl_, method_) -
               offsetof(Impl_, initial_pose_) +
               sizeof(Impl_::method_));
}
InitializeLocalizationRequest::~InitializeLocalizationRequest() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.InitializeLocalizationRequest)
  SharedDtor(*this);
}
inline void InitializeLocalizationRequest::SharedDtor(MessageLite& self) {
  InitializeLocalizationRequest& this_ = static_cast<InitializeLocalizationRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  delete this_._impl_.initial_pose_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL InitializeLocalizationRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) InitializeLocalizationRequest(arena);
}
constexpr auto InitializeLocalizationRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest, _impl_.parameters_) +
          decltype(InitializeLocalizationRequest::_impl_.parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest, _impl_.parameters_) +
          decltype(InitializeLocalizationRequest::_impl_.parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(InitializeLocalizationRequest), alignof(InitializeLocalizationRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&InitializeLocalizationRequest::PlacementNew_,
                                 sizeof(InitializeLocalizationRequest),
                                 alignof(InitializeLocalizationRequest));
  }
}
constexpr auto InitializeLocalizationRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_InitializeLocalizationRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &InitializeLocalizationRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<InitializeLocalizationRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &InitializeLocalizationRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<InitializeLocalizationRequest>(), &InitializeLocalizationRequest::ByteSizeLong,
              &InitializeLocalizationRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest, _impl_._cached_size_),
          false,
      },
      &InitializeLocalizationRequest::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull InitializeLocalizationRequest_class_data_ =
        InitializeLocalizationRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
InitializeLocalizationRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&InitializeLocalizationRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(InitializeLocalizationRequest_class_data_.tc_table);
  return InitializeLocalizationRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 89, 2>
InitializeLocalizationRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    InitializeLocalizationRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::InitializeLocalizationRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest, _impl_.robot_id_)}},
    // optional .agricultural.robot.navigation.v1.PoseWithCovariance initial_pose = 2 [json_name = "initialPose"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest, _impl_.initial_pose_)}},
    // .agricultural.robot.navigation.v1.LocalizationMethod method = 3 [json_name = "method"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InitializeLocalizationRequest, _impl_.method_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest, _impl_.method_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .agricultural.robot.navigation.v1.PoseWithCovariance initial_pose = 2 [json_name = "initialPose"];
    {PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest, _impl_.initial_pose_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agricultural.robot.navigation.v1.LocalizationMethod method = 3 [json_name = "method"];
    {PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest, _impl_.method_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // map<string, string> parameters = 4 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest, _impl_.parameters_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::PoseWithCovariance>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\76\10\0\0\12\0\0\0"
    "agricultural.robot.navigation.v1.InitializeLocalizationRequest"
    "robot_id"
    "parameters"
  }},
};
PROTOBUF_NOINLINE void InitializeLocalizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.InitializeLocalizationRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.robot_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.initial_pose_ != nullptr);
      _impl_.initial_pose_->Clear();
    }
  }
  _impl_.method_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL InitializeLocalizationRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const InitializeLocalizationRequest& this_ = static_cast<const InitializeLocalizationRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL InitializeLocalizationRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const InitializeLocalizationRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.InitializeLocalizationRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.InitializeLocalizationRequest.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .agricultural.robot.navigation.v1.PoseWithCovariance initial_pose = 2 [json_name = "initialPose"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.initial_pose_, this_._impl_.initial_pose_->GetCachedSize(), target,
        stream);
  }

  // .agricultural.robot.navigation.v1.LocalizationMethod method = 3 [json_name = "method"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_method() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_method(), target);
    }
  }

  // map<string, string> parameters = 4 [json_name = "parameters"];
  if (!this_._internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.InitializeLocalizationRequest.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.InitializeLocalizationRequest.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.InitializeLocalizationRequest.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.InitializeLocalizationRequest.parameters");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.InitializeLocalizationRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t InitializeLocalizationRequest::ByteSizeLong(const MessageLite& base) {
  const InitializeLocalizationRequest& this_ = static_cast<const InitializeLocalizationRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t InitializeLocalizationRequest::ByteSizeLong() const {
  const InitializeLocalizationRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.InitializeLocalizationRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> parameters = 4 [json_name = "parameters"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_parameters_size());
      for (const auto& entry : this_._internal_parameters()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // optional .agricultural.robot.navigation.v1.PoseWithCovariance initial_pose = 2 [json_name = "initialPose"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.initial_pose_);
    }
    // .agricultural.robot.navigation.v1.LocalizationMethod method = 3 [json_name = "method"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_method() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_method());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void InitializeLocalizationRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InitializeLocalizationRequest*>(&to_msg);
  auto& from = static_cast<const InitializeLocalizationRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.InitializeLocalizationRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.initial_pose_ != nullptr);
      if (_this->_impl_.initial_pose_ == nullptr) {
        _this->_impl_.initial_pose_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.initial_pose_);
      } else {
        _this->_impl_.initial_pose_->MergeFrom(*from._impl_.initial_pose_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_method() != 0) {
        _this->_impl_.method_ = from._impl_.method_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InitializeLocalizationRequest::CopyFrom(const InitializeLocalizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.InitializeLocalizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InitializeLocalizationRequest::InternalSwap(InitializeLocalizationRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest, _impl_.method_)
      + sizeof(InitializeLocalizationRequest::_impl_.method_)
      - PROTOBUF_FIELD_OFFSET(InitializeLocalizationRequest, _impl_.initial_pose_)>(
          reinterpret_cast<char*>(&_impl_.initial_pose_),
          reinterpret_cast<char*>(&other->_impl_.initial_pose_));
}

::google::protobuf::Metadata InitializeLocalizationRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResetLocalizationRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ResetLocalizationRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ResetLocalizationRequest, _impl_._has_bits_);
};

ResetLocalizationRequest::ResetLocalizationRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ResetLocalizationRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.ResetLocalizationRequest)
}
PROTOBUF_NDEBUG_INLINE ResetLocalizationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::ResetLocalizationRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        robot_id_(arena, from.robot_id_) {}

ResetLocalizationRequest::ResetLocalizationRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ResetLocalizationRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ResetLocalizationRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResetLocalizationRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.clear_map_ = from._impl_.clear_map_;

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.ResetLocalizationRequest)
}
PROTOBUF_NDEBUG_INLINE ResetLocalizationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        robot_id_(arena) {}

inline void ResetLocalizationRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.clear_map_ = {};
}
ResetLocalizationRequest::~ResetLocalizationRequest() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.ResetLocalizationRequest)
  SharedDtor(*this);
}
inline void ResetLocalizationRequest::SharedDtor(MessageLite& self) {
  ResetLocalizationRequest& this_ = static_cast<ResetLocalizationRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.robot_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ResetLocalizationRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ResetLocalizationRequest(arena);
}
constexpr auto ResetLocalizationRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ResetLocalizationRequest),
                                            alignof(ResetLocalizationRequest));
}
constexpr auto ResetLocalizationRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ResetLocalizationRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ResetLocalizationRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ResetLocalizationRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ResetLocalizationRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ResetLocalizationRequest>(), &ResetLocalizationRequest::ByteSizeLong,
              &ResetLocalizationRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ResetLocalizationRequest, _impl_._cached_size_),
          false,
      },
      &ResetLocalizationRequest::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ResetLocalizationRequest_class_data_ =
        ResetLocalizationRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ResetLocalizationRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ResetLocalizationRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ResetLocalizationRequest_class_data_.tc_table);
  return ResetLocalizationRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 74, 2>
ResetLocalizationRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ResetLocalizationRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ResetLocalizationRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::ResetLocalizationRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool clear_map = 2 [json_name = "clearMap"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ResetLocalizationRequest, _impl_.clear_map_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ResetLocalizationRequest, _impl_.clear_map_)}},
    // string robot_id = 1 [json_name = "robotId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ResetLocalizationRequest, _impl_.robot_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string robot_id = 1 [json_name = "robotId"];
    {PROTOBUF_FIELD_OFFSET(ResetLocalizationRequest, _impl_.robot_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool clear_map = 2 [json_name = "clearMap"];
    {PROTOBUF_FIELD_OFFSET(ResetLocalizationRequest, _impl_.clear_map_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\71\10\0\0\0\0\0\0"
    "agricultural.robot.navigation.v1.ResetLocalizationRequest"
    "robot_id"
  }},
};
PROTOBUF_NOINLINE void ResetLocalizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.ResetLocalizationRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.robot_id_.ClearNonDefaultToEmpty();
  }
  _impl_.clear_map_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ResetLocalizationRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ResetLocalizationRequest& this_ = static_cast<const ResetLocalizationRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ResetLocalizationRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ResetLocalizationRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.ResetLocalizationRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_robot_id().empty()) {
      const ::std::string& _s = this_._internal_robot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.ResetLocalizationRequest.robot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // bool clear_map = 2 [json_name = "clearMap"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_clear_map() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_clear_map(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.ResetLocalizationRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ResetLocalizationRequest::ByteSizeLong(const MessageLite& base) {
  const ResetLocalizationRequest& this_ = static_cast<const ResetLocalizationRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ResetLocalizationRequest::ByteSizeLong() const {
  const ResetLocalizationRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.ResetLocalizationRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string robot_id = 1 [json_name = "robotId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_robot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_robot_id());
      }
    }
    // bool clear_map = 2 [json_name = "clearMap"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_clear_map() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ResetLocalizationRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResetLocalizationRequest*>(&to_msg);
  auto& from = static_cast<const ResetLocalizationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.ResetLocalizationRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_robot_id().empty()) {
        _this->_internal_set_robot_id(from._internal_robot_id());
      } else {
        if (_this->_impl_.robot_id_.IsDefault()) {
          _this->_internal_set_robot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_clear_map() != 0) {
        _this->_impl_.clear_map_ = from._impl_.clear_map_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResetLocalizationRequest::CopyFrom(const ResetLocalizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.ResetLocalizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResetLocalizationRequest::InternalSwap(ResetLocalizationRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.robot_id_, &other->_impl_.robot_id_, arena);
  swap(_impl_.clear_map_, other->_impl_.clear_map_);
}

::google::protobuf::Metadata ResetLocalizationRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LocalizationStatusResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LocalizationStatusResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LocalizationStatusResponse, _impl_._has_bits_);
};

void LocalizationStatusResponse::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
LocalizationStatusResponse::LocalizationStatusResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LocalizationStatusResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.LocalizationStatusResponse)
}
PROTOBUF_NDEBUG_INLINE LocalizationStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::LocalizationStatusResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LocalizationStatusResponse::LocalizationStatusResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LocalizationStatusResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LocalizationStatusResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LocalizationStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.quality_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.quality_)
                : nullptr;
  _impl_.current_pose_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.current_pose_)
                : nullptr;
  _impl_.metrics_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.metrics_)
                : nullptr;
  _impl_.timestamp_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, status_),
           offsetof(Impl_, method_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::method_));

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.LocalizationStatusResponse)
}
PROTOBUF_NDEBUG_INLINE LocalizationStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LocalizationStatusResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quality_),
           0,
           offsetof(Impl_, method_) -
               offsetof(Impl_, quality_) +
               sizeof(Impl_::method_));
}
LocalizationStatusResponse::~LocalizationStatusResponse() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.LocalizationStatusResponse)
  SharedDtor(*this);
}
inline void LocalizationStatusResponse::SharedDtor(MessageLite& self) {
  LocalizationStatusResponse& this_ = static_cast<LocalizationStatusResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.quality_;
  delete this_._impl_.current_pose_;
  delete this_._impl_.metrics_;
  delete this_._impl_.timestamp_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LocalizationStatusResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LocalizationStatusResponse(arena);
}
constexpr auto LocalizationStatusResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LocalizationStatusResponse),
                                            alignof(LocalizationStatusResponse));
}
constexpr auto LocalizationStatusResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LocalizationStatusResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LocalizationStatusResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LocalizationStatusResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LocalizationStatusResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LocalizationStatusResponse>(), &LocalizationStatusResponse::ByteSizeLong,
              &LocalizationStatusResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LocalizationStatusResponse, _impl_._cached_size_),
          false,
      },
      &LocalizationStatusResponse::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LocalizationStatusResponse_class_data_ =
        LocalizationStatusResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LocalizationStatusResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LocalizationStatusResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LocalizationStatusResponse_class_data_.tc_table);
  return LocalizationStatusResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 0, 2>
LocalizationStatusResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LocalizationStatusResponse, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    LocalizationStatusResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::LocalizationStatusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .agricultural.robot.navigation.v1.LocalizationStatus status = 1 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LocalizationStatusResponse, _impl_.status_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(LocalizationStatusResponse, _impl_.status_)}},
    // .agricultural.robot.navigation.v1.LocalizationQuality quality = 2 [json_name = "quality"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(LocalizationStatusResponse, _impl_.quality_)}},
    // .agricultural.robot.navigation.v1.PoseWithCovariance current_pose = 3 [json_name = "currentPose"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(LocalizationStatusResponse, _impl_.current_pose_)}},
    // .agricultural.robot.navigation.v1.LocalizationMethod method = 4 [json_name = "method"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LocalizationStatusResponse, _impl_.method_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(LocalizationStatusResponse, _impl_.method_)}},
    // .agricultural.robot.navigation.v1.LocalizationMetrics metrics = 5 [json_name = "metrics"];
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(LocalizationStatusResponse, _impl_.metrics_)}},
    // .google.protobuf.Timestamp timestamp = 6 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 3, PROTOBUF_FIELD_OFFSET(LocalizationStatusResponse, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .agricultural.robot.navigation.v1.LocalizationStatus status = 1 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(LocalizationStatusResponse, _impl_.status_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .agricultural.robot.navigation.v1.LocalizationQuality quality = 2 [json_name = "quality"];
    {PROTOBUF_FIELD_OFFSET(LocalizationStatusResponse, _impl_.quality_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agricultural.robot.navigation.v1.PoseWithCovariance current_pose = 3 [json_name = "currentPose"];
    {PROTOBUF_FIELD_OFFSET(LocalizationStatusResponse, _impl_.current_pose_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agricultural.robot.navigation.v1.LocalizationMethod method = 4 [json_name = "method"];
    {PROTOBUF_FIELD_OFFSET(LocalizationStatusResponse, _impl_.method_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .agricultural.robot.navigation.v1.LocalizationMetrics metrics = 5 [json_name = "metrics"];
    {PROTOBUF_FIELD_OFFSET(LocalizationStatusResponse, _impl_.metrics_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp timestamp = 6 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(LocalizationStatusResponse, _impl_.timestamp_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::LocalizationQuality>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::PoseWithCovariance>()},
      {::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::LocalizationMetrics>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void LocalizationStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.LocalizationStatusResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.quality_ != nullptr);
      _impl_.quality_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.current_pose_ != nullptr);
      _impl_.current_pose_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.metrics_ != nullptr);
      _impl_.metrics_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000030u) != 0) {
    ::memset(&_impl_.status_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.method_) -
        reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.method_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LocalizationStatusResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LocalizationStatusResponse& this_ = static_cast<const LocalizationStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LocalizationStatusResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LocalizationStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.LocalizationStatusResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .agricultural.robot.navigation.v1.LocalizationStatus status = 1 [json_name = "status"];
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_status(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .agricultural.robot.navigation.v1.LocalizationQuality quality = 2 [json_name = "quality"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.quality_, this_._impl_.quality_->GetCachedSize(), target,
        stream);
  }

  // .agricultural.robot.navigation.v1.PoseWithCovariance current_pose = 3 [json_name = "currentPose"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.current_pose_, this_._impl_.current_pose_->GetCachedSize(), target,
        stream);
  }

  // .agricultural.robot.navigation.v1.LocalizationMethod method = 4 [json_name = "method"];
  if ((cached_has_bits & 0x00000020u) != 0) {
    if (this_._internal_method() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_method(), target);
    }
  }

  // .agricultural.robot.navigation.v1.LocalizationMetrics metrics = 5 [json_name = "metrics"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.metrics_, this_._impl_.metrics_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Timestamp timestamp = 6 [json_name = "timestamp"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.LocalizationStatusResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LocalizationStatusResponse::ByteSizeLong(const MessageLite& base) {
  const LocalizationStatusResponse& this_ = static_cast<const LocalizationStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LocalizationStatusResponse::ByteSizeLong() const {
  const LocalizationStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.LocalizationStatusResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // .agricultural.robot.navigation.v1.LocalizationQuality quality = 2 [json_name = "quality"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.quality_);
    }
    // .agricultural.robot.navigation.v1.PoseWithCovariance current_pose = 3 [json_name = "currentPose"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.current_pose_);
    }
    // .agricultural.robot.navigation.v1.LocalizationMetrics metrics = 5 [json_name = "metrics"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.metrics_);
    }
    // .google.protobuf.Timestamp timestamp = 6 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
    // .agricultural.robot.navigation.v1.LocalizationStatus status = 1 [json_name = "status"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
    // .agricultural.robot.navigation.v1.LocalizationMethod method = 4 [json_name = "method"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_method() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_method());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LocalizationStatusResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LocalizationStatusResponse*>(&to_msg);
  auto& from = static_cast<const LocalizationStatusResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.LocalizationStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.quality_ != nullptr);
      if (_this->_impl_.quality_ == nullptr) {
        _this->_impl_.quality_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.quality_);
      } else {
        _this->_impl_.quality_->MergeFrom(*from._impl_.quality_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.current_pose_ != nullptr);
      if (_this->_impl_.current_pose_ == nullptr) {
        _this->_impl_.current_pose_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.current_pose_);
      } else {
        _this->_impl_.current_pose_->MergeFrom(*from._impl_.current_pose_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.metrics_ != nullptr);
      if (_this->_impl_.metrics_ == nullptr) {
        _this->_impl_.metrics_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.metrics_);
      } else {
        _this->_impl_.metrics_->MergeFrom(*from._impl_.metrics_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_method() != 0) {
        _this->_impl_.method_ = from._impl_.method_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocalizationStatusResponse::CopyFrom(const LocalizationStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.LocalizationStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LocalizationStatusResponse::InternalSwap(LocalizationStatusResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocalizationStatusResponse, _impl_.method_)
      + sizeof(LocalizationStatusResponse::_impl_.method_)
      - PROTOBUF_FIELD_OFFSET(LocalizationStatusResponse, _impl_.quality_)>(
          reinterpret_cast<char*>(&_impl_.quality_),
          reinterpret_cast<char*>(&other->_impl_.quality_));
}

::google::protobuf::Metadata LocalizationStatusResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LocalizationResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LocalizationResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LocalizationResponse, _impl_._has_bits_);
};

void LocalizationResponse::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
LocalizationResponse::LocalizationResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LocalizationResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.LocalizationResponse)
}
PROTOBUF_NDEBUG_INLINE LocalizationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::LocalizationResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_) {}

LocalizationResponse::LocalizationResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LocalizationResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LocalizationResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LocalizationResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, success_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.LocalizationResponse)
}
PROTOBUF_NDEBUG_INLINE LocalizationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_(arena) {}

inline void LocalizationResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::status_));
}
LocalizationResponse::~LocalizationResponse() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.LocalizationResponse)
  SharedDtor(*this);
}
inline void LocalizationResponse::SharedDtor(MessageLite& self) {
  LocalizationResponse& this_ = static_cast<LocalizationResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  delete this_._impl_.timestamp_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LocalizationResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LocalizationResponse(arena);
}
constexpr auto LocalizationResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LocalizationResponse),
                                            alignof(LocalizationResponse));
}
constexpr auto LocalizationResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LocalizationResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LocalizationResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LocalizationResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LocalizationResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LocalizationResponse>(), &LocalizationResponse::ByteSizeLong,
              &LocalizationResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LocalizationResponse, _impl_._cached_size_),
          false,
      },
      &LocalizationResponse::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LocalizationResponse_class_data_ =
        LocalizationResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LocalizationResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LocalizationResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LocalizationResponse_class_data_.tc_table);
  return LocalizationResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 69, 2>
LocalizationResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LocalizationResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    LocalizationResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::LocalizationResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(LocalizationResponse, _impl_.timestamp_)}},
    // bool success = 1 [json_name = "success"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LocalizationResponse, _impl_.success_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(LocalizationResponse, _impl_.success_)}},
    // string message = 2 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(LocalizationResponse, _impl_.message_)}},
    // .agricultural.robot.navigation.v1.LocalizationStatus status = 3 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LocalizationResponse, _impl_.status_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(LocalizationResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1 [json_name = "success"];
    {PROTOBUF_FIELD_OFFSET(LocalizationResponse, _impl_.success_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string message = 2 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(LocalizationResponse, _impl_.message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agricultural.robot.navigation.v1.LocalizationStatus status = 3 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(LocalizationResponse, _impl_.status_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(LocalizationResponse, _impl_.timestamp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
    "\65\0\7\0\0\0\0\0"
    "agricultural.robot.navigation.v1.LocalizationResponse"
    "message"
  }},
};
PROTOBUF_NOINLINE void LocalizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.LocalizationResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.success_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.status_) -
        reinterpret_cast<char*>(&_impl_.success_)) + sizeof(_impl_.status_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LocalizationResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LocalizationResponse& this_ = static_cast<const LocalizationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LocalizationResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LocalizationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.LocalizationResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1 [json_name = "success"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_success() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_success(), target);
    }
  }

  // string message = 2 [json_name = "message"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agricultural.robot.navigation.v1.LocalizationResponse.message");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // .agricultural.robot.navigation.v1.LocalizationStatus status = 3 [json_name = "status"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_status(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.LocalizationResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LocalizationResponse::ByteSizeLong(const MessageLite& base) {
  const LocalizationResponse& this_ = static_cast<const LocalizationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LocalizationResponse::ByteSizeLong() const {
  const LocalizationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.LocalizationResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string message = 2 [json_name = "message"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // .google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
    // bool success = 1 [json_name = "success"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_success() != 0) {
        total_size += 2;
      }
    }
    // .agricultural.robot.navigation.v1.LocalizationStatus status = 3 [json_name = "status"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LocalizationResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LocalizationResponse*>(&to_msg);
  auto& from = static_cast<const LocalizationResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.LocalizationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_success() != 0) {
        _this->_impl_.success_ = from._impl_.success_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocalizationResponse::CopyFrom(const LocalizationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.LocalizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LocalizationResponse::InternalSwap(LocalizationResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocalizationResponse, _impl_.status_)
      + sizeof(LocalizationResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(LocalizationResponse, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata LocalizationResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LocalizationQuality::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LocalizationQuality>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LocalizationQuality, _impl_._has_bits_);
};

LocalizationQuality::LocalizationQuality(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LocalizationQuality_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.LocalizationQuality)
}
LocalizationQuality::LocalizationQuality(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LocalizationQuality& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LocalizationQuality_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE LocalizationQuality::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LocalizationQuality::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_),
           0,
           offsetof(Impl_, health_) -
               offsetof(Impl_, confidence_) +
               sizeof(Impl_::health_));
}
LocalizationQuality::~LocalizationQuality() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.LocalizationQuality)
  SharedDtor(*this);
}
inline void LocalizationQuality::SharedDtor(MessageLite& self) {
  LocalizationQuality& this_ = static_cast<LocalizationQuality&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LocalizationQuality::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LocalizationQuality(arena);
}
constexpr auto LocalizationQuality::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LocalizationQuality),
                                            alignof(LocalizationQuality));
}
constexpr auto LocalizationQuality::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LocalizationQuality_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LocalizationQuality::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LocalizationQuality>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LocalizationQuality::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LocalizationQuality>(), &LocalizationQuality::ByteSizeLong,
              &LocalizationQuality::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LocalizationQuality, _impl_._cached_size_),
          false,
      },
      &LocalizationQuality::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LocalizationQuality_class_data_ =
        LocalizationQuality::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LocalizationQuality::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LocalizationQuality_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LocalizationQuality_class_data_.tc_table);
  return LocalizationQuality_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2>
LocalizationQuality::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LocalizationQuality, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LocalizationQuality_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::LocalizationQuality>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double confidence = 1 [json_name = "confidence"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(LocalizationQuality, _impl_.confidence_)}},
    // double position_uncertainty = 2 [json_name = "positionUncertainty"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(LocalizationQuality, _impl_.position_uncertainty_)}},
    // double orientation_uncertainty = 3 [json_name = "orientationUncertainty"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(LocalizationQuality, _impl_.orientation_uncertainty_)}},
    // uint32 matched_features = 4 [json_name = "matchedFeatures"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LocalizationQuality, _impl_.matched_features_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(LocalizationQuality, _impl_.matched_features_)}},
    // double drift_estimate = 5 [json_name = "driftEstimate"];
    {::_pbi::TcParser::FastF64S1,
     {41, 3, 0, PROTOBUF_FIELD_OFFSET(LocalizationQuality, _impl_.drift_estimate_)}},
    // .agricultural.robot.navigation.v1.LocalizationHealth health = 6 [json_name = "health"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LocalizationQuality, _impl_.health_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(LocalizationQuality, _impl_.health_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double confidence = 1 [json_name = "confidence"];
    {PROTOBUF_FIELD_OFFSET(LocalizationQuality, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double position_uncertainty = 2 [json_name = "positionUncertainty"];
    {PROTOBUF_FIELD_OFFSET(LocalizationQuality, _impl_.position_uncertainty_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double orientation_uncertainty = 3 [json_name = "orientationUncertainty"];
    {PROTOBUF_FIELD_OFFSET(LocalizationQuality, _impl_.orientation_uncertainty_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // uint32 matched_features = 4 [json_name = "matchedFeatures"];
    {PROTOBUF_FIELD_OFFSET(LocalizationQuality, _impl_.matched_features_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // double drift_estimate = 5 [json_name = "driftEstimate"];
    {PROTOBUF_FIELD_OFFSET(LocalizationQuality, _impl_.drift_estimate_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // .agricultural.robot.navigation.v1.LocalizationHealth health = 6 [json_name = "health"];
    {PROTOBUF_FIELD_OFFSET(LocalizationQuality, _impl_.health_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void LocalizationQuality::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.LocalizationQuality)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    ::memset(&_impl_.confidence_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.health_) -
        reinterpret_cast<char*>(&_impl_.confidence_)) + sizeof(_impl_.health_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LocalizationQuality::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LocalizationQuality& this_ = static_cast<const LocalizationQuality&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LocalizationQuality::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LocalizationQuality& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.LocalizationQuality)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double confidence = 1 [json_name = "confidence"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_confidence()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_confidence(), target);
    }
  }

  // double position_uncertainty = 2 [json_name = "positionUncertainty"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_position_uncertainty()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_position_uncertainty(), target);
    }
  }

  // double orientation_uncertainty = 3 [json_name = "orientationUncertainty"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_orientation_uncertainty()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_orientation_uncertainty(), target);
    }
  }

  // uint32 matched_features = 4 [json_name = "matchedFeatures"];
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_matched_features() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          4, this_._internal_matched_features(), target);
    }
  }

  // double drift_estimate = 5 [json_name = "driftEstimate"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_drift_estimate()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          5, this_._internal_drift_estimate(), target);
    }
  }

  // .agricultural.robot.navigation.v1.LocalizationHealth health = 6 [json_name = "health"];
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_health() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this_._internal_health(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.LocalizationQuality)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LocalizationQuality::ByteSizeLong(const MessageLite& base) {
  const LocalizationQuality& this_ = static_cast<const LocalizationQuality&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LocalizationQuality::ByteSizeLong() const {
  const LocalizationQuality& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.LocalizationQuality)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // double confidence = 1 [json_name = "confidence"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_confidence()) != 0) {
        total_size += 9;
      }
    }
    // double position_uncertainty = 2 [json_name = "positionUncertainty"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_position_uncertainty()) != 0) {
        total_size += 9;
      }
    }
    // double orientation_uncertainty = 3 [json_name = "orientationUncertainty"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_orientation_uncertainty()) != 0) {
        total_size += 9;
      }
    }
    // double drift_estimate = 5 [json_name = "driftEstimate"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_drift_estimate()) != 0) {
        total_size += 9;
      }
    }
    // uint32 matched_features = 4 [json_name = "matchedFeatures"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_matched_features() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_matched_features());
      }
    }
    // .agricultural.robot.navigation.v1.LocalizationHealth health = 6 [json_name = "health"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_health() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_health());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LocalizationQuality::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LocalizationQuality*>(&to_msg);
  auto& from = static_cast<const LocalizationQuality&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.LocalizationQuality)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_confidence()) != 0) {
        _this->_impl_.confidence_ = from._impl_.confidence_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_position_uncertainty()) != 0) {
        _this->_impl_.position_uncertainty_ = from._impl_.position_uncertainty_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_orientation_uncertainty()) != 0) {
        _this->_impl_.orientation_uncertainty_ = from._impl_.orientation_uncertainty_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_drift_estimate()) != 0) {
        _this->_impl_.drift_estimate_ = from._impl_.drift_estimate_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_matched_features() != 0) {
        _this->_impl_.matched_features_ = from._impl_.matched_features_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_health() != 0) {
        _this->_impl_.health_ = from._impl_.health_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocalizationQuality::CopyFrom(const LocalizationQuality& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.LocalizationQuality)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LocalizationQuality::InternalSwap(LocalizationQuality* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocalizationQuality, _impl_.health_)
      + sizeof(LocalizationQuality::_impl_.health_)
      - PROTOBUF_FIELD_OFFSET(LocalizationQuality, _impl_.confidence_)>(
          reinterpret_cast<char*>(&_impl_.confidence_),
          reinterpret_cast<char*>(&other->_impl_.confidence_));
}

::google::protobuf::Metadata LocalizationQuality::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LocalizationMetrics::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LocalizationMetrics>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LocalizationMetrics, _impl_._has_bits_);
};

void LocalizationMetrics::clear_update_frequency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_frequency_ != nullptr) _impl_.update_frequency_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
LocalizationMetrics::LocalizationMetrics(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LocalizationMetrics_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agricultural.robot.navigation.v1.LocalizationMetrics)
}
PROTOBUF_NDEBUG_INLINE LocalizationMetrics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::agricultural::robot::navigation::v1::LocalizationMetrics& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LocalizationMetrics::LocalizationMetrics(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LocalizationMetrics& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LocalizationMetrics_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LocalizationMetrics* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.update_frequency_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_frequency_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, effective_sample_size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, effective_sample_size_),
           offsetof(Impl_, map_match_score_) -
               offsetof(Impl_, effective_sample_size_) +
               sizeof(Impl_::map_match_score_));

  // @@protoc_insertion_point(copy_constructor:agricultural.robot.navigation.v1.LocalizationMetrics)
}
PROTOBUF_NDEBUG_INLINE LocalizationMetrics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LocalizationMetrics::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, update_frequency_),
           0,
           offsetof(Impl_, map_match_score_) -
               offsetof(Impl_, update_frequency_) +
               sizeof(Impl_::map_match_score_));
}
LocalizationMetrics::~LocalizationMetrics() {
  // @@protoc_insertion_point(destructor:agricultural.robot.navigation.v1.LocalizationMetrics)
  SharedDtor(*this);
}
inline void LocalizationMetrics::SharedDtor(MessageLite& self) {
  LocalizationMetrics& this_ = static_cast<LocalizationMetrics&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.update_frequency_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LocalizationMetrics::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LocalizationMetrics(arena);
}
constexpr auto LocalizationMetrics::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LocalizationMetrics),
                                            alignof(LocalizationMetrics));
}
constexpr auto LocalizationMetrics::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LocalizationMetrics_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LocalizationMetrics::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LocalizationMetrics>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LocalizationMetrics::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LocalizationMetrics>(), &LocalizationMetrics::ByteSizeLong,
              &LocalizationMetrics::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LocalizationMetrics, _impl_._cached_size_),
          false,
      },
      &LocalizationMetrics::kDescriptorMethods,
      &descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LocalizationMetrics_class_data_ =
        LocalizationMetrics::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LocalizationMetrics::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LocalizationMetrics_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LocalizationMetrics_class_data_.tc_table);
  return LocalizationMetrics_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2>
LocalizationMetrics::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LocalizationMetrics, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    LocalizationMetrics_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agricultural::robot::navigation::v1::LocalizationMetrics>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 particle_count = 1 [json_name = "particleCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LocalizationMetrics, _impl_.particle_count_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(LocalizationMetrics, _impl_.particle_count_)}},
    // double effective_sample_size = 2 [json_name = "effectiveSampleSize"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(LocalizationMetrics, _impl_.effective_sample_size_)}},
    // double convergence_rate = 3 [json_name = "convergenceRate"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(LocalizationMetrics, _impl_.convergence_rate_)}},
    // .google.protobuf.Duration update_frequency = 4 [json_name = "updateFrequency"];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(LocalizationMetrics, _impl_.update_frequency_)}},
    // uint32 sensor_updates_count = 5 [json_name = "sensorUpdatesCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LocalizationMetrics, _impl_.sensor_updates_count_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(LocalizationMetrics, _impl_.sensor_updates_count_)}},
    // double map_match_score = 6 [json_name = "mapMatchScore"];
    {::_pbi::TcParser::FastF64S1,
     {49, 5, 0, PROTOBUF_FIELD_OFFSET(LocalizationMetrics, _impl_.map_match_score_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 particle_count = 1 [json_name = "particleCount"];
    {PROTOBUF_FIELD_OFFSET(LocalizationMetrics, _impl_.particle_count_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // double effective_sample_size = 2 [json_name = "effectiveSampleSize"];
    {PROTOBUF_FIELD_OFFSET(LocalizationMetrics, _impl_.effective_sample_size_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double convergence_rate = 3 [json_name = "convergenceRate"];
    {PROTOBUF_FIELD_OFFSET(LocalizationMetrics, _impl_.convergence_rate_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // .google.protobuf.Duration update_frequency = 4 [json_name = "updateFrequency"];
    {PROTOBUF_FIELD_OFFSET(LocalizationMetrics, _impl_.update_frequency_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 sensor_updates_count = 5 [json_name = "sensorUpdatesCount"];
    {PROTOBUF_FIELD_OFFSET(LocalizationMetrics, _impl_.sensor_updates_count_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // double map_match_score = 6 [json_name = "mapMatchScore"];
    {PROTOBUF_FIELD_OFFSET(LocalizationMetrics, _impl_.map_match_score_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void LocalizationMetrics::Clear() {
// @@protoc_insertion_point(message_clear_start:agricultural.robot.navigation.v1.LocalizationMetrics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.update_frequency_ != nullptr);
    _impl_.update_frequency_->Clear();
  }
  if ((cached_has_bits & 0x0000003eu) != 0) {
    ::memset(&_impl_.effective_sample_size_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.map_match_score_) -
        reinterpret_cast<char*>(&_impl_.effective_sample_size_)) + sizeof(_impl_.map_match_score_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LocalizationMetrics::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LocalizationMetrics& this_ = static_cast<const LocalizationMetrics&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LocalizationMetrics::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LocalizationMetrics& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:agricultural.robot.navigation.v1.LocalizationMetrics)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 particle_count = 1 [json_name = "particleCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_particle_count() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_particle_count(), target);
    }
  }

  // double effective_sample_size = 2 [json_name = "effectiveSampleSize"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_effective_sample_size()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_effective_sample_size(), target);
    }
  }

  // double convergence_rate = 3 [json_name = "convergenceRate"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_convergence_rate()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_convergence_rate(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Duration update_frequency = 4 [json_name = "updateFrequency"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.update_frequency_, this_._impl_.update_frequency_->GetCachedSize(), target,
        stream);
  }

  // uint32 sensor_updates_count = 5 [json_name = "sensorUpdatesCount"];
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (this_._internal_sensor_updates_count() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          5, this_._internal_sensor_updates_count(), target);
    }
  }

  // double map_match_score = 6 [json_name = "mapMatchScore"];
  if ((cached_has_bits & 0x00000020u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_map_match_score()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          6, this_._internal_map_match_score(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agricultural.robot.navigation.v1.LocalizationMetrics)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LocalizationMetrics::ByteSizeLong(const MessageLite& base) {
  const LocalizationMetrics& this_ = static_cast<const LocalizationMetrics&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LocalizationMetrics::ByteSizeLong() const {
  const LocalizationMetrics& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:agricultural.robot.navigation.v1.LocalizationMetrics)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // .google.protobuf.Duration update_frequency = 4 [json_name = "updateFrequency"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.update_frequency_);
    }
    // double effective_sample_size = 2 [json_name = "effectiveSampleSize"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_effective_sample_size()) != 0) {
        total_size += 9;
      }
    }
    // double convergence_rate = 3 [json_name = "convergenceRate"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_convergence_rate()) != 0) {
        total_size += 9;
      }
    }
    // uint32 particle_count = 1 [json_name = "particleCount"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_particle_count() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_particle_count());
      }
    }
    // uint32 sensor_updates_count = 5 [json_name = "sensorUpdatesCount"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_sensor_updates_count() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_sensor_updates_count());
      }
    }
    // double map_match_score = 6 [json_name = "mapMatchScore"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_map_match_score()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LocalizationMetrics::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LocalizationMetrics*>(&to_msg);
  auto& from = static_cast<const LocalizationMetrics&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agricultural.robot.navigation.v1.LocalizationMetrics)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.update_frequency_ != nullptr);
      if (_this->_impl_.update_frequency_ == nullptr) {
        _this->_impl_.update_frequency_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_frequency_);
      } else {
        _this->_impl_.update_frequency_->MergeFrom(*from._impl_.update_frequency_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_effective_sample_size()) != 0) {
        _this->_impl_.effective_sample_size_ = from._impl_.effective_sample_size_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_convergence_rate()) != 0) {
        _this->_impl_.convergence_rate_ = from._impl_.convergence_rate_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_particle_count() != 0) {
        _this->_impl_.particle_count_ = from._impl_.particle_count_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_sensor_updates_count() != 0) {
        _this->_impl_.sensor_updates_count_ = from._impl_.sensor_updates_count_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_map_match_score()) != 0) {
        _this->_impl_.map_match_score_ = from._impl_.map_match_score_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocalizationMetrics::CopyFrom(const LocalizationMetrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agricultural.robot.navigation.v1.LocalizationMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LocalizationMetrics::InternalSwap(LocalizationMetrics* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocalizationMetrics, _impl_.map_match_score_)
      + sizeof(LocalizationMetrics::_impl_.map_match_score_)
      - PROTOBUF_FIELD_OFFSET(LocalizationMetrics, _impl_.update_frequency_)>(
          reinterpret_cast<char*>(&_impl_.update_frequency_),
          reinterpret_cast<char*>(&other->_impl_.update_frequency_));
}

::google::protobuf::Metadata LocalizationMetrics::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace navigation
}  // namespace robot
}  // namespace agricultural
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_proto_2frobot_2fnavigation_2frobot_2dnavigation_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
